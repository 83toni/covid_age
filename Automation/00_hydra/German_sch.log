Fehler in file(filename, "r", encoding = encoding) : 
  kann Verbindung nicht öffnen
Ruft auf: source -> file
Zusätzlich: Warnmeldung:
In file(filename, "r", encoding = encoding) :
  kann Datei 'Germany.r' nicht öffnen: No such file or directory
Ausführung angehalten
Fehler in file(filename, "r", encoding = encoding) : 
  kann Verbindung nicht öffnen
Ruft auf: source -> file
Zusätzlich: Warnmeldung:
In file(filename, "r", encoding = encoding) :
  kann Datei 'C:/Users/acosta/Documents/ovid_age/Automation/00_hydra/Germany.r' nicht öffnen: No such file or directory
Ausführung angehalten
Lade nötiges Paket: pacman
Auto-refreshing stale OAuth token.
Reading from "spreadsheets_rows"
Range "'input'"
Parsed with column specification:
cols(
  ObjectId = col_double(),
  IdBundesland = col_double(),
  Bundesland = col_character(),
  Landkreis = col_character(),
  Altersgruppe = col_character(),
  Geschlecht = col_character(),
  AnzahlFall = col_double(),
  AnzahlTodesfall = col_double(),
  Meldedatum = col_character(),
  IdLandkreis = col_character(),
  Datenstand = col_character(),
  NeuerFall = col_double(),
  NeuerTodesfall = col_double(),
  Refdatum = col_character(),
  NeuGenesen = col_double(),
  AnzahlGenesen = col_double(),
  IstErkrankungsbeginn = col_double(),
  Altersgruppe2 = col_character()
)
`summarise()` regrouping output by 'Region', 'Sex', 'Measure', 'date_f' (override with `.groups` argument)
Joining, by = c("Region", "Measure", "Sex", "Age", "date_f")
`summarise()` regrouping output by 'date_f', 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Region' (override with `.groups` argument)
Writing to "Germany input template"
Writing to sheet "database"
Writing to "Hydra auto update log"
Appending 1 row(s) to "log"
Auto-refreshing stale OAuth token.
Files trashed:
  * DE31.10.2020cases&deaths: 19JdLZFQm963lsE7cBb4ulTma0ADBv1XUquaVjQ3dzeA
Created Drive file:
  * DE31.10.2020cases&deaths: 1RGiNr-ll23N_7YoY4NSbqqR-gsH69mFxjWDG_zFVMuM
with MIME type:
  * application/vnd.google-apps.spreadsheet
Writing to "DE31.10.2020cases&deaths"
Writing to sheet "cases&deaths_age_sex"
Error: Expected content type 'application/json' not 'text/html'.
<!DOCTYPE html>
<html lang=en>
  <meta charset=utf-8>
  <meta name=viewport content="initial-scale=1, minimum-scale=1, width=device-width">
  <title>Error 502 (Server Error)!!1</title>
  <style>
  ...
Backtrace:
     x
  1. +-base::source(...)
  2. | +-base::withVisible(eval(ei, envir))
  3. | \-base::eval(ei, envir)
  4. |   \-base::eval(ei, envir)
  5. \-googlesheets4::write_sheet(db, ss = meta$id, sheet = "cases&deaths_age_sex")
  6.   \-gargle::response_process(resp_raw)
  7.     +-gargle:::stop_request_failed(error_message(resp), resp)
  8.     | +-rlang::abort(...)
  9.     | | \-rlang:::validate_signal_message(message, class)
 10.     | \-glue::glue_collapse(message, sep = "\n")
 11.     \-gargle:::error_message(resp)
 12.       \-gargle::response_as_json(resp)
 13.         \-gargle:::check_for_json(resp)
 14.           \-gargle:::stop_request_failed(message, resp)
Execution halted
Lade nötiges Paket: pacman
Auto-refreshing stale OAuth token.
Reading from "spreadsheets_rows"
Range "'input'"
Parsed with column specification:
cols(
  ObjectId = col_double(),
  IdBundesland = col_double(),
  Bundesland = col_character(),
  Landkreis = col_character(),
  Altersgruppe = col_character(),
  Geschlecht = col_character(),
  AnzahlFall = col_double(),
  AnzahlTodesfall = col_double(),
  Meldedatum = col_character(),
  IdLandkreis = col_character(),
  Datenstand = col_character(),
  NeuerFall = col_double(),
  NeuerTodesfall = col_double(),
  Refdatum = col_character(),
  NeuGenesen = col_double(),
  AnzahlGenesen = col_double(),
  IstErkrankungsbeginn = col_double(),
  Altersgruppe2 = col_character()
)
`summarise()` regrouping output by 'Region', 'Sex', 'Measure', 'date_f' (override with `.groups` argument)
Joining, by = c("Region", "Measure", "Sex", "Age", "date_f")
`summarise()` regrouping output by 'date_f', 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Region' (override with `.groups` argument)
Writing to "Germany input template"
Writing to sheet "database"
Writing to "Hydra auto update log"
Appending 1 row(s) to "log"
Auto-refreshing stale OAuth token.
Created Drive file:
  * DE01.11.2020cases&deaths: 1JzTWqwfqYzknHqDFn1bZh_JqaCodXJTr8bv11JIOnZ0
with MIME type:
  * application/vnd.google-apps.spreadsheet
Writing to "DE01.11.2020cases&deaths"
Writing to sheet "cases&deaths_age_sex"
Deleting these sheet(s) from "DE01.11.2020cases&deaths":
* Sheet1
Lade nötiges Paket: pacman
Auto-refreshing stale OAuth token.
Reading from "spreadsheets_rows"
Range "'input'"
Parsed with column specification:
cols(
  ObjectId = col_double(),
  IdBundesland = col_double(),
  Bundesland = col_character(),
  Landkreis = col_character(),
  Altersgruppe = col_character(),
  Geschlecht = col_character(),
  AnzahlFall = col_double(),
  AnzahlTodesfall = col_double(),
  Meldedatum = col_character(),
  IdLandkreis = col_character(),
  Datenstand = col_character(),
  NeuerFall = col_double(),
  NeuerTodesfall = col_double(),
  Refdatum = col_character(),
  NeuGenesen = col_double(),
  AnzahlGenesen = col_double(),
  IstErkrankungsbeginn = col_double(),
  Altersgruppe2 = col_character()
)
`summarise()` regrouping output by 'Region', 'Sex', 'Measure', 'date_f' (override with `.groups` argument)
Joining, by = c("Region", "Measure", "Sex", "Age", "date_f")
`summarise()` regrouping output by 'date_f', 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Region' (override with `.groups` argument)
Writing to "Germany input template"
Writing to sheet "database"
Writing to "Hydra auto update log"
Appending 1 row(s) to "log"
Auto-refreshing stale OAuth token.
Files trashed:
  * DE02.11.2020cases&deaths: 1RwT_KHlCe1KgHPR5IZRpTWGQGHtKCKFswaV2hQHLb5M
Created Drive file:
  * DE02.11.2020cases&deaths: 1vKD7kn9XyFWOEsPluu3r6ELK_wty60rbr5gPStNg4sE
with MIME type:
  * application/vnd.google-apps.spreadsheet
Writing to "DE02.11.2020cases&deaths"
Writing to sheet "cases&deaths_age_sex"
Error: Expected content type 'application/json' not 'text/html'.
<!DOCTYPE html>
<html lang=en>
  <meta charset=utf-8>
  <meta name=viewport content="initial-scale=1, minimum-scale=1, width=device-width">
  <title>Error 502 (Server Error)!!1</title>
  <style>
  ...
Backtrace:
     x
  1. +-base::source(...)
  2. | +-base::withVisible(eval(ei, envir))
  3. | \-base::eval(ei, envir)
  4. |   \-base::eval(ei, envir)
  5. \-googlesheets4::write_sheet(db, ss = meta$id, sheet = "cases&deaths_age_sex")
  6.   \-gargle::response_process(resp_raw)
  7.     +-gargle:::stop_request_failed(error_message(resp), resp)
  8.     | +-rlang::abort(...)
  9.     | | \-rlang:::validate_signal_message(message, class)
 10.     | \-glue::glue_collapse(message, sep = "\n")
 11.     \-gargle:::error_message(resp)
 12.       \-gargle::response_as_json(resp)
 13.         \-gargle:::check_for_json(resp)
 14.           \-gargle:::stop_request_failed(message, resp)
Execution halted
Lade nötiges Paket: pacman
Auto-refreshing stale OAuth token.
Reading from "spreadsheets_rows"
Range "'input'"
Parsed with column specification:
cols(
  ObjectId = col_double(),
  IdBundesland = col_double(),
  Bundesland = col_character(),
  Landkreis = col_character(),
  Altersgruppe = col_character(),
  Geschlecht = col_character(),
  AnzahlFall = col_double(),
  AnzahlTodesfall = col_double(),
  Meldedatum = col_character(),
  IdLandkreis = col_character(),
  Datenstand = col_character(),
  NeuerFall = col_double(),
  NeuerTodesfall = col_double(),
  Refdatum = col_character(),
  NeuGenesen = col_double(),
  AnzahlGenesen = col_double(),
  IstErkrankungsbeginn = col_double(),
  Altersgruppe2 = col_character()
)
`summarise()` regrouping output by 'Region', 'Sex', 'Measure', 'date_f' (override with `.groups` argument)
Joining, by = c("Region", "Measure", "Sex", "Age", "date_f")
`summarise()` regrouping output by 'date_f', 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Region' (override with `.groups` argument)
Writing to "Germany input template"
Writing to sheet "database"
Error: Client error: (429) RESOURCE_EXHAUSTED
  * Either out of resource quota or reaching rate limiting. The client should look for google.rpc.QuotaFailure error detail for more information.
  * Quota exceeded for quota group 'ReadGroup' and limit 'Read requests per 100 seconds' of service 'sheets.googleapis.com' for consumer 'project_number:603366585132'.

Error details:
  * Error details of type 'google.rpc.Help' are not implemented yet.
  * Workaround: use `tryCatch()` and inspect error payload yourself.
  * Please open an issue at https://github.com/r-lib/gargle/issues, so we can fix.
Backtrace:
     x
  1. +-base::source(...)
  2. | +-base::withVisible(eval(ei, envir))
  3. | \-base::eval(ei, envir)
  4. |   \-base::eval(ei, envir)
  5. \-global::log_update(pp = "Germany", N = nrow(db_full))
  6.   \-googlesheets4::sheet_append(log_this, ss = ss, sheet = "log")
  7.     \-googlesheets4::gs4_get(ssid)
  8.       \-googlesheets4:::gs4_get_impl_(as_sheets_id(ss))
  9.         \-gar
Execution halted
Lade nötiges Paket: pacman
Auto-refreshing stale OAuth token.
Reading from "spreadsheets_rows"
Range "'input'"
Parsed with column specification:
cols(
  IdBundesland = col_double(),
  Bundesland = col_character(),
  Landkreis = col_character(),
  Altersgruppe = col_character(),
  Geschlecht = col_character(),
  AnzahlFall = col_double(),
  AnzahlTodesfall = col_double(),
  ObjectId = col_double(),
  IdLandkreis = col_character(),
  Altersgruppe2 = col_character(),
  Refdatum = col_character(),
  Meldedatum = col_character(),
  IstErkrankungsbeginn = col_double(),
  NeuerFall = col_double(),
  NeuerTodesfall = col_double(),
  NeuGenesen = col_double(),
  AnzahlGenesen = col_double(),
  Datenstand = col_character()
)
`summarise()` regrouping output by 'Region', 'Sex', 'Measure', 'date_f' (override with `.groups` argument)
Joining, by = c("Region", "Measure", "Sex", "Age", "date_f")
`summarise()` regrouping output by 'date_f', 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Region' (override with `.groups` argument)
Writing to "Germany input template"
Writing to sheet "database"
Writing to "Hydra auto update log"
Appending 1 row(s) to "log"
Auto-refreshing stale OAuth token.
Created Drive file:
  * DE04.11.2020cases&deaths: 1SjTIFNyq8N3qtWKKMmZpLuYbi_yrtd5FRUgcfHYkCss
with MIME type:
  * application/vnd.google-apps.spreadsheet
Writing to "DE04.11.2020cases&deaths"
Writing to sheet "cases&deaths_age_sex"
Error: Client error: (400) INVALID_ARGUMENT
  * Client specified an invalid argument. Check error message and error details for more information.
  * Invalid requests[0].updateSheetProperties: This action would increase the number of cells in the workbook above the limit of 5000000 cells.
Backtrace:
    x
 1. +-base::source(...)
 2. | +-base::withVisible(eval(ei, envir))
 3. | \-base::eval(ei, envir)
 4. |   \-base::eval(ei, envir)
 5. \-googlesheets4::write_sheet(db, ss = meta$id, sheet = "cases&deaths_age_sex")
 6.   \-gargle::response_process(resp_raw)
 7.     \-gargle:::stop_request_failed(error_message(resp), resp)
Execution halted
Lade nötiges Paket: pacman
Auto-refreshing stale OAuth token.
Reading from "spreadsheets_rows"
Range "'input'"
Parsed with column specification:
cols(
  ObjectId = col_double(),
  IdBundesland = col_double(),
  Bundesland = col_character(),
  Landkreis = col_character(),
  Altersgruppe = col_character(),
  Geschlecht = col_character(),
  AnzahlFall = col_double(),
  AnzahlTodesfall = col_double(),
  Meldedatum = col_character(),
  IdLandkreis = col_character(),
  Datenstand = col_character(),
  NeuerFall = col_double(),
  NeuerTodesfall = col_double(),
  Refdatum = col_character(),
  NeuGenesen = col_double(),
  AnzahlGenesen = col_double(),
  IstErkrankungsbeginn = col_double(),
  Altersgruppe2 = col_character()
)
`summarise()` regrouping output by 'Region', 'Sex', 'Measure', 'date_f' (override with `.groups` argument)
Joining, by = c("Region", "Measure", "Sex", "Age", "date_f")
`summarise()` regrouping output by 'date_f', 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Region' (override with `.groups` argument)
Writing to "Germany input template"
Writing to sheet "database"
Error: Client error: (429) RESOURCE_EXHAUSTED
  * Either out of resource quota or reaching rate limiting. The client should look for google.rpc.QuotaFailure error detail for more information.
  * Quota exceeded for quota group 'ReadGroup' and limit 'Read requests per 100 seconds' of service 'sheets.googleapis.com' for consumer 'project_number:603366585132'.

Error details:
  * Error details of type 'google.rpc.Help' are not implemented yet.
  * Workaround: use `tryCatch()` and inspect error payload yourself.
  * Please open an issue at https://github.com/r-lib/gargle/issues, so we can fix.
Backtrace:
     x
  1. +-base::source(...)
  2. | +-base::withVisible(eval(ei, envir))
  3. | \-base::eval(ei, envir)
  4. |   \-base::eval(ei, envir)
  5. \-global::log_update(pp = "Germany", N = nrow(db_full))
  6.   \-googlesheets4::sheet_append(log_this, ss = ss, sheet = "log")
  7.     \-googlesheets4::gs4_get(ssid)
  8.       \-googlesheets4:::gs4_get_impl_(as_sheets_id(ss))
  9.         \-gar
Execution halted
Lade nötiges Paket: pacman
Auto-refreshing stale OAuth token.
Reading from "spreadsheets_rows"
Range "'input'"
Parsed with column specification:
cols(
  ObjectId = col_double(),
  IdBundesland = col_double(),
  Bundesland = col_character(),
  Landkreis = col_character(),
  Altersgruppe = col_character(),
  Geschlecht = col_character(),
  AnzahlFall = col_double(),
  AnzahlTodesfall = col_double(),
  Meldedatum = col_character(),
  IdLandkreis = col_character(),
  Datenstand = col_character(),
  NeuerFall = col_double(),
  NeuerTodesfall = col_double(),
  Refdatum = col_character(),
  NeuGenesen = col_double(),
  AnzahlGenesen = col_double(),
  IstErkrankungsbeginn = col_double(),
  Altersgruppe2 = col_character()
)
`summarise()` regrouping output by 'Region', 'Sex', 'Measure', 'date_f' (override with `.groups` argument)
Joining, by = c("Region", "Measure", "Sex", "Age", "date_f")
`summarise()` regrouping output by 'date_f', 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Region' (override with `.groups` argument)
Writing to "Germany input template"
Writing to sheet "database"
Writing to "Hydra auto update log"
Appending 1 row(s) to "log"
Auto-refreshing stale OAuth token.
Files trashed:
  * DE06.11.2020cases&deaths: 1wcWMU40MMlAKJopcUvYuPc-vBDh26W7G2Ompso9lb-c
Created Drive file:
  * DE06.11.2020cases&deaths: 1aarQ3YeYyBh8AKmn73tAEt9-7NSUxImw-Sw0SBdwK5A
with MIME type:
  * application/vnd.google-apps.spreadsheet
Error: Client error: (429) RESOURCE_EXHAUSTED
  * Either out of resource quota or reaching rate limiting. The client should look for google.rpc.QuotaFailure error detail for more information.
  * Quota exceeded for quota group 'ReadGroup' and limit 'Read requests per 100 seconds' of service 'sheets.googleapis.com' for consumer 'project_number:603366585132'.

Error details:
  * Error details of type 'google.rpc.Help' are not implemented yet.
  * Workaround: use `tryCatch()` and inspect error payload yourself.
  * Please open an issue at https://github.com/r-lib/gargle/issues, so we can fix.
Backtrace:
    x
 1. +-base::source(...)
 2. | +-base::withVisible(eval(ei, envir))
 3. | \-base::eval(ei, envir)
 4. |   \-base::eval(ei, envir)
 5. \-googlesheets4::write_sheet(db, ss = meta$id, sheet = "cases&deaths_age_sex")
 6.   \-googlesheets4::gs4_get(ssid)
 7.     \-googlesheets4:::gs4_get_impl_(as_sheets_id(ss))
 8.       \-gargle::response_process(raw_resp)
 9.         \-gargle:::stop_req
Execution halted
Lade nötiges Paket: pacman
Auto-refreshing stale OAuth token.
Reading from "spreadsheets_rows"
Range "'input'"
Parsed with column specification:
cols(
  ObjectId = col_double(),
  IdBundesland = col_double(),
  Bundesland = col_character(),
  Landkreis = col_character(),
  Altersgruppe = col_character(),
  Geschlecht = col_character(),
  AnzahlFall = col_double(),
  AnzahlTodesfall = col_double(),
  Meldedatum = col_character(),
  IdLandkreis = col_character(),
  Datenstand = col_character(),
  NeuerFall = col_double(),
  NeuerTodesfall = col_double(),
  Refdatum = col_character(),
  NeuGenesen = col_double(),
  AnzahlGenesen = col_double(),
  IstErkrankungsbeginn = col_double(),
  Altersgruppe2 = col_character()
)
`summarise()` regrouping output by 'Region', 'Sex', 'Measure', 'date_f' (override with `.groups` argument)
Joining, by = c("Region", "Measure", "Sex", "Age", "date_f")
`summarise()` regrouping output by 'date_f', 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Region' (override with `.groups` argument)
Writing to "Germany input template"
Writing to sheet "database"
Writing to "Hydra auto update log"
Appending 1 row(s) to "log"
Auto-refreshing stale OAuth token.
Files trashed:
  * DE07.11.2020cases&deaths: 1FgAs9I_B5qUod178XZnAW54z8ZKVs9vCkyOUXloFnfE
Created Drive file:
  * DE07.11.2020cases&deaths: 1n4KqsaB_wfdAU3upLOq6aDi2BkXD2_5C-RPzC1JdFzs
with MIME type:
  * application/vnd.google-apps.spreadsheet
Writing to "DE07.11.2020cases&deaths"
Writing to sheet "cases&deaths_age_sex"
Auto-refreshing stale OAuth token.
Error: Client error: (400) INVALID_ARGUMENT
  * Client specified an invalid argument. Check error message and error details for more information.
  * Invalid requests[0].updateSheetProperties: This action would increase the number of cells in the workbook above the limit of 5000000 cells.
Backtrace:
    x
 1. +-base::source(...)
 2. | +-base::withVisible(eval(ei, envir))
 3. | \-base::eval(ei, envir)
 4. |   \-base::eval(ei, envir)
 5. \-googlesheets4::write_sheet(db, ss = meta$id, sheet = "cases&deaths_age_sex")
 6.   \-gargle::response_process(resp_raw)
 7.     \-gargle:::stop_request_failed(error_message(resp), resp)
Execution halted
Lade nötiges Paket: pacman
Auto-refreshing stale OAuth token.
Reading from "spreadsheets_rows"
Range "'input'"
Parsed with column specification:
cols(
  ObjectId = col_double(),
  IdBundesland = col_double(),
  Bundesland = col_character(),
  Landkreis = col_character(),
  Altersgruppe = col_character(),
  Geschlecht = col_character(),
  AnzahlFall = col_double(),
  AnzahlTodesfall = col_double(),
  Meldedatum = col_character(),
  IdLandkreis = col_character(),
  Datenstand = col_character(),
  NeuerFall = col_double(),
  NeuerTodesfall = col_double(),
  Refdatum = col_character(),
  NeuGenesen = col_double(),
  AnzahlGenesen = col_double(),
  IstErkrankungsbeginn = col_double(),
  Altersgruppe2 = col_character()
)
`summarise()` regrouping output by 'Region', 'Sex', 'Measure', 'date_f' (override with `.groups` argument)
Joining, by = c("Region", "Measure", "Sex", "Age", "date_f")
`summarise()` regrouping output by 'date_f', 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Region' (override with `.groups` argument)
Writing to "Germany input template"
Writing to sheet "database"
Writing to "Hydra auto update log"
Appending 1 row(s) to "log"
Auto-refreshing stale OAuth token.
Files trashed:
  * DE08.11.2020cases&deaths: 1tW_l-_4fiBkSH2i709ZtjAkehYISjH1kwBlykkGhDPo
Created Drive file:
  * DE08.11.2020cases&deaths: 179555zA0m1I58wAmh55Y1HoKkbho5HUQkh1hKvh7O38
with MIME type:
  * application/vnd.google-apps.spreadsheet
Writing to "DE08.11.2020cases&deaths"
Writing to sheet "cases&deaths_age_sex"
Error: Expected content type 'application/json' not 'text/html'.
<!DOCTYPE html>
<html lang=en>
  <meta charset=utf-8>
  <meta name=viewport content="initial-scale=1, minimum-scale=1, width=device-width">
  <title>Error 502 (Server Error)!!1</title>
  <style>
  ...
Backtrace:
     x
  1. +-base::source(...)
  2. | +-base::withVisible(eval(ei, envir))
  3. | \-base::eval(ei, envir)
  4. |   \-base::eval(ei, envir)
  5. \-googlesheets4::write_sheet(db, ss = meta$id, sheet = "cases&deaths_age_sex")
  6.   \-gargle::response_process(resp_raw)
  7.     +-gargle:::stop_request_failed(error_message(resp), resp)
  8.     | +-rlang::abort(...)
  9.     | | \-rlang:::validate_signal_message(message, class)
 10.     | \-glue::glue_collapse(message, sep = "\n")
 11.     \-gargle:::error_message(resp)
 12.       \-gargle::response_as_json(resp)
 13.         \-gargle:::check_for_json(resp)
 14.           \-gargle:::stop_request_failed(message, resp)
Execution halted
Lade nötiges Paket: pacman
Auto-refreshing stale OAuth token.
Reading from "spreadsheets_rows"
Range "'input'"
Parsed with column specification:
cols(
  ObjectId = col_double(),
  IdBundesland = col_double(),
  Bundesland = col_character(),
  Landkreis = col_character(),
  Altersgruppe = col_character(),
  Geschlecht = col_character(),
  AnzahlFall = col_double(),
  AnzahlTodesfall = col_double(),
  Meldedatum = col_character(),
  IdLandkreis = col_character(),
  Datenstand = col_character(),
  NeuerFall = col_double(),
  NeuerTodesfall = col_double(),
  Refdatum = col_character(),
  NeuGenesen = col_double(),
  AnzahlGenesen = col_double(),
  IstErkrankungsbeginn = col_double(),
  Altersgruppe2 = col_character()
)
`summarise()` regrouping output by 'Region', 'Sex', 'Measure', 'date_f' (override with `.groups` argument)
Joining, by = c("Region", "Measure", "Sex", "Age", "date_f")
`summarise()` regrouping output by 'date_f', 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Region' (override with `.groups` argument)
Writing to "Germany input template"
Writing to sheet "database"
Error: Client error: (429) RESOURCE_EXHAUSTED
  * Either out of resource quota or reaching rate limiting. The client should look for google.rpc.QuotaFailure error detail for more information.
  * Quota exceeded for quota group 'ReadGroup' and limit 'Read requests per 100 seconds' of service 'sheets.googleapis.com' for consumer 'project_number:603366585132'.

Error details:
  * Error details of type 'google.rpc.Help' are not implemented yet.
  * Workaround: use `tryCatch()` and inspect error payload yourself.
  * Please open an issue at https://github.com/r-lib/gargle/issues, so we can fix.
Backtrace:
     x
  1. +-base::source(...)
  2. | +-base::withVisible(eval(ei, envir))
  3. | \-base::eval(ei, envir)
  4. |   \-base::eval(ei, envir)
  5. \-global::log_update(pp = "Germany", N = nrow(db_full))
  6.   \-googlesheets4::sheet_append(log_this, ss = ss, sheet = "log")
  7.     \-googlesheets4::gs4_get(ssid)
  8.       \-googlesheets4:::gs4_get_impl_(as_sheets_id(ss))
  9.         \-gar
Execution halted
Lade nötiges Paket: pacman
Auto-refreshing stale OAuth token.
Reading from "spreadsheets_rows"
Range "'input'"
Parsed with column specification:
cols(
  ObjectId = col_double(),
  IdBundesland = col_double(),
  Bundesland = col_character(),
  Landkreis = col_character(),
  Altersgruppe = col_character(),
  Geschlecht = col_character(),
  AnzahlFall = col_double(),
  AnzahlTodesfall = col_double(),
  Meldedatum = col_character(),
  IdLandkreis = col_character(),
  Datenstand = col_character(),
  NeuerFall = col_double(),
  NeuerTodesfall = col_double(),
  Refdatum = col_character(),
  NeuGenesen = col_double(),
  AnzahlGenesen = col_double(),
  IstErkrankungsbeginn = col_double(),
  Altersgruppe2 = col_character()
)
`summarise()` regrouping output by 'Region', 'Sex', 'Measure', 'date_f' (override with `.groups` argument)
Joining, by = c("Region", "Measure", "Sex", "Age", "date_f")
`summarise()` regrouping output by 'date_f', 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Region' (override with `.groups` argument)
Writing to "Germany input template"
Writing to sheet "database"
Writing to "Hydra auto update log"
Appending 1 row(s) to "log"
Auto-refreshing stale OAuth token.
Created Drive file:
  * DE10.11.2020cases&deaths: 1ANCENtc5qJV1OZXdoCYPgoBo7hN0fS4plizFnc2nP54
with MIME type:
  * application/vnd.google-apps.spreadsheet
Writing to "DE10.11.2020cases&deaths"
Writing to sheet "cases&deaths_age_sex"
Deleting these sheet(s) from "DE10.11.2020cases&deaths":
* Sheet1
Lade nötiges Paket: pacman
Reading from "spreadsheets_rows"
Range "'input'"
Parsed with column specification:
cols(
  ObjectId = col_double(),
  IdBundesland = col_double(),
  Bundesland = col_character(),
  Landkreis = col_character(),
  Altersgruppe = col_character(),
  Geschlecht = col_character(),
  AnzahlFall = col_double(),
  AnzahlTodesfall = col_double(),
  Meldedatum = col_character(),
  IdLandkreis = col_character(),
  Datenstand = col_character(),
  NeuerFall = col_double(),
  NeuerTodesfall = col_double(),
  Refdatum = col_character(),
  NeuGenesen = col_double(),
  AnzahlGenesen = col_double(),
  IstErkrankungsbeginn = col_double(),
  Altersgruppe2 = col_character()
)
`summarise()` regrouping output by 'Region', 'Sex', 'Measure', 'date_f' (override with `.groups` argument)
Joining, by = c("Region", "Measure", "Sex", "Age", "date_f")
`summarise()` regrouping output by 'date_f', 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Region' (override with `.groups` argument)
Writing to "Germany input template"
Writing to sheet "database"
Writing to "Hydra auto update log"
Appending 1 row(s) to "log"
Auto-refreshing stale OAuth token.
Files trashed:
  * DE11.11.2020cases&deaths: 1JSmB5tM8odUj0RBxkT-UXslCHLo4JvS0YRj-bfTpa94
Created Drive file:
  * DE11.11.2020cases&deaths: 1fIRH6T8zILQX3BicvOYC2V8xSrlxgyKRwaDTQ3S8ycU
with MIME type:
  * application/vnd.google-apps.spreadsheet
Error: Client error: (429) RESOURCE_EXHAUSTED
  * Either out of resource quota or reaching rate limiting. The client should look for google.rpc.QuotaFailure error detail for more information.
  * Quota exceeded for quota group 'ReadGroup' and limit 'Read requests per 100 seconds' of service 'sheets.googleapis.com' for consumer 'project_number:603366585132'.

Error details:
  * Error details of type 'google.rpc.Help' are not implemented yet.
  * Workaround: use `tryCatch()` and inspect error payload yourself.
  * Please open an issue at https://github.com/r-lib/gargle/issues, so we can fix.
Backtrace:
    x
 1. +-base::source(...)
 2. | +-base::withVisible(eval(ei, envir))
 3. | \-base::eval(ei, envir)
 4. |   \-base::eval(ei, envir)
 5. \-googlesheets4::write_sheet(db, ss = meta$id, sheet = "cases&deaths_age_sex")
 6.   \-googlesheets4::gs4_get(ssid)
 7.     \-googlesheets4:::gs4_get_impl_(as_sheets_id(ss))
 8.       \-gargle::response_process(raw_resp)
 9.         \-gargle:::stop_req
Execution halted
Lade nötiges Paket: pacman
Auto-refreshing stale OAuth token.
Reading from "spreadsheets_rows"
Range "'input'"
Parsed with column specification:
cols(
  ObjectId = col_double(),
  IdBundesland = col_double(),
  Bundesland = col_character(),
  Landkreis = col_character(),
  Altersgruppe = col_character(),
  Geschlecht = col_character(),
  AnzahlFall = col_double(),
  AnzahlTodesfall = col_double(),
  Meldedatum = col_character(),
  IdLandkreis = col_character(),
  Datenstand = col_character(),
  NeuerFall = col_double(),
  NeuerTodesfall = col_double(),
  Refdatum = col_character(),
  NeuGenesen = col_double(),
  AnzahlGenesen = col_double(),
  IstErkrankungsbeginn = col_double(),
  Altersgruppe2 = col_character()
)
`summarise()` regrouping output by 'Region', 'Sex', 'Measure', 'date_f' (override with `.groups` argument)
Joining, by = c("Region", "Measure", "Sex", "Age", "date_f")
`summarise()` regrouping output by 'date_f', 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Region' (override with `.groups` argument)
Writing to "Germany input template"
Writing to sheet "database"
Writing to "Hydra auto update log"
Appending 1 row(s) to "log"
Auto-refreshing stale OAuth token.
Files trashed:
  * DE12.11.2020cases&deaths: 1k8ufnFcBxp1Vd3_viJetmUF2oDE91psRCa4SdmXRhcE
Created Drive file:
  * DE12.11.2020cases&deaths: 15dYhx4XpwzXlwSev-KdHViW_1cTniaMjWhC72pazaLM
with MIME type:
  * application/vnd.google-apps.spreadsheet
Writing to "DE12.11.2020cases&deaths"
Writing to sheet "cases&deaths_age_sex"
Error: Expected content type 'application/json' not 'text/html'.
<!DOCTYPE html>
<html lang=en>
  <meta charset=utf-8>
  <meta name=viewport content="initial-scale=1, minimum-scale=1, width=device-width">
  <title>Error 502 (Server Error)!!1</title>
  <style>
  ...
Backtrace:
     x
  1. +-base::source(...)
  2. | +-base::withVisible(eval(ei, envir))
  3. | \-base::eval(ei, envir)
  4. |   \-base::eval(ei, envir)
  5. \-googlesheets4::write_sheet(db, ss = meta$id, sheet = "cases&deaths_age_sex")
  6.   \-gargle::response_process(resp_raw)
  7.     +-gargle:::stop_request_failed(error_message(resp), resp)
  8.     | +-rlang::abort(...)
  9.     | | \-rlang:::validate_signal_message(message, class)
 10.     | \-glue::glue_collapse(message, sep = "\n")
 11.     \-gargle:::error_message(resp)
 12.       \-gargle::response_as_json(resp)
 13.         \-gargle:::check_for_json(resp)
 14.           \-gargle:::stop_request_failed(message, resp)
Execution halted
Lade nötiges Paket: pacman
Auto-refreshing stale OAuth token.
Reading from "spreadsheets_rows"
Range "'input'"
Parsed with column specification:
cols(
  ObjectId = col_double(),
  IdBundesland = col_double(),
  Bundesland = col_character(),
  Landkreis = col_character(),
  Altersgruppe = col_character(),
  Geschlecht = col_character(),
  AnzahlFall = col_double(),
  AnzahlTodesfall = col_double(),
  Meldedatum = col_character(),
  IdLandkreis = col_character(),
  Datenstand = col_character(),
  NeuerFall = col_double(),
  NeuerTodesfall = col_double(),
  Refdatum = col_character(),
  NeuGenesen = col_double(),
  AnzahlGenesen = col_double(),
  IstErkrankungsbeginn = col_double(),
  Altersgruppe2 = col_character()
)
`summarise()` regrouping output by 'Region', 'Sex', 'Measure', 'date_f' (override with `.groups` argument)
Joining, by = c("Region", "Measure", "Sex", "Age", "date_f")
`summarise()` regrouping output by 'date_f', 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Region' (override with `.groups` argument)
Writing to "Germany input template"
Writing to sheet "database"
Error: Client error: (429) RESOURCE_EXHAUSTED
  * Either out of resource quota or reaching rate limiting. The client should look for google.rpc.QuotaFailure error detail for more information.
  * Quota exceeded for quota group 'ReadGroup' and limit 'Read requests per 100 seconds' of service 'sheets.googleapis.com' for consumer 'project_number:603366585132'.

Error details:
  * Error details of type 'google.rpc.Help' are not implemented yet.
  * Workaround: use `tryCatch()` and inspect error payload yourself.
  * Please open an issue at https://github.com/r-lib/gargle/issues, so we can fix.
Backtrace:
     x
  1. +-base::source(...)
  2. | +-base::withVisible(eval(ei, envir))
  3. | \-base::eval(ei, envir)
  4. |   \-base::eval(ei, envir)
  5. \-global::log_update(pp = "Germany", N = nrow(db_full))
  6.   \-googlesheets4::sheet_append(log_this, ss = ss, sheet = "log")
  7.     \-googlesheets4::gs4_get(ssid)
  8.       \-googlesheets4:::gs4_get_impl_(as_sheets_id(ss))
  9.         \-gar
Execution halted
Lade nötiges Paket: pacman
Auto-refreshing stale OAuth token.
Reading from "spreadsheets_rows"
Range "'input'"
Parsed with column specification:
cols(
  ObjectId = col_double(),
  IdBundesland = col_double(),
  Bundesland = col_character(),
  Landkreis = col_character(),
  Altersgruppe = col_character(),
  Geschlecht = col_character(),
  AnzahlFall = col_double(),
  AnzahlTodesfall = col_double(),
  Meldedatum = col_character(),
  IdLandkreis = col_character(),
  Datenstand = col_character(),
  NeuerFall = col_double(),
  NeuerTodesfall = col_double(),
  Refdatum = col_character(),
  NeuGenesen = col_double(),
  AnzahlGenesen = col_double(),
  IstErkrankungsbeginn = col_double(),
  Altersgruppe2 = col_character()
)
`summarise()` regrouping output by 'Region', 'Sex', 'Measure', 'date_f' (override with `.groups` argument)
Joining, by = c("Region", "Measure", "Sex", "Age", "date_f")
`summarise()` regrouping output by 'date_f', 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Region' (override with `.groups` argument)
Writing to "Germany input template"
Writing to sheet "database"
Writing to "Hydra auto update log"
Appending 1 row(s) to "log"
Auto-refreshing stale OAuth token.
Files trashed:
  * DE14.11.2020cases&deaths: 1UYvi8O_f53j57C4bcuqLQzsL4KELDVvbqzAji_araFk
Created Drive file:
  * DE14.11.2020cases&deaths: 1gL8arwpwE0cvTx-e5tMc33qFbhr9x4msVxmT2f_PRw0
with MIME type:
  * application/vnd.google-apps.spreadsheet
Writing to "DE14.11.2020cases&deaths"
Writing to sheet "cases&deaths_age_sex"
Error: Client error: (400) INVALID_ARGUMENT
  * Client specified an invalid argument. Check error message and error details for more information.
  * Invalid requests[0].updateSheetProperties: This action would increase the number of cells in the workbook above the limit of 5000000 cells.
Backtrace:
    x
 1. +-base::source(...)
 2. | +-base::withVisible(eval(ei, envir))
 3. | \-base::eval(ei, envir)
 4. |   \-base::eval(ei, envir)
 5. \-googlesheets4::write_sheet(db, ss = meta$id, sheet = "cases&deaths_age_sex")
 6.   \-gargle::response_process(resp_raw)
 7.     \-gargle:::stop_request_failed(error_message(resp), resp)
Execution halted
Lade nötiges Paket: pacman
Auto-refreshing stale OAuth token.
Reading from "spreadsheets_rows"
Range "'input'"
Parsed with column specification:
cols(
  ObjectId = col_double(),
  IdBundesland = col_double(),
  Bundesland = col_character(),
  Landkreis = col_character(),
  Altersgruppe = col_character(),
  Geschlecht = col_character(),
  AnzahlFall = col_double(),
  AnzahlTodesfall = col_double(),
  Meldedatum = col_character(),
  IdLandkreis = col_character(),
  Datenstand = col_character(),
  NeuerFall = col_double(),
  NeuerTodesfall = col_double(),
  Refdatum = col_character(),
  NeuGenesen = col_double(),
  AnzahlGenesen = col_double(),
  IstErkrankungsbeginn = col_double(),
  Altersgruppe2 = col_character()
)
`summarise()` regrouping output by 'Region', 'Sex', 'Measure', 'date_f' (override with `.groups` argument)
Joining, by = c("Region", "Measure", "Sex", "Age", "date_f")
`summarise()` regrouping output by 'date_f', 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Region' (override with `.groups` argument)
Writing to "Germany input template"
Writing to sheet "database"
Writing to "Hydra auto update log"
Appending 1 row(s) to "log"
Auto-refreshing stale OAuth token.
Files trashed:
  * DE15.11.2020cases&deaths: 11x0_PFxCe4qpYsoKPBmrnTCob-YlzB-eNHnrAdnTG5M
Created Drive file:
  * DE15.11.2020cases&deaths: 1LSrugnih0bNAMOvCCFvaiFsY4BYm2vpRPNmv_MTUpDw
with MIME type:
  * application/vnd.google-apps.spreadsheet
Writing to "DE15.11.2020cases&deaths"
Writing to sheet "cases&deaths_age_sex"
Error: Client error: (400) INVALID_ARGUMENT
  * Client specified an invalid argument. Check error message and error details for more information.
  * Invalid requests[0].updateSheetProperties: This action would increase the number of cells in the workbook above the limit of 5000000 cells.
Backtrace:
    x
 1. +-base::source(...)
 2. | +-base::withVisible(eval(ei, envir))
 3. | \-base::eval(ei, envir)
 4. |   \-base::eval(ei, envir)
 5. \-googlesheets4::write_sheet(db, ss = meta$id, sheet = "cases&deaths_age_sex")
 6.   \-gargle::response_process(resp_raw)
 7.     \-gargle:::stop_request_failed(error_message(resp), resp)
Execution halted
Lade nötiges Paket: pacman
Reading from "spreadsheets_rows"
Range "'input'"
Parsed with column specification:
cols(
  ObjectId = col_double(),
  IdBundesland = col_double(),
  Bundesland = col_character(),
  Landkreis = col_character(),
  Altersgruppe = col_character(),
  Geschlecht = col_character(),
  AnzahlFall = col_double(),
  AnzahlTodesfall = col_double(),
  Meldedatum = col_character(),
  IdLandkreis = col_character(),
  Datenstand = col_character(),
  NeuerFall = col_double(),
  NeuerTodesfall = col_double(),
  Refdatum = col_character(),
  NeuGenesen = col_double(),
  AnzahlGenesen = col_double(),
  IstErkrankungsbeginn = col_double(),
  Altersgruppe2 = col_character()
)
`summarise()` regrouping output by 'Region', 'Sex', 'Measure', 'date_f' (override with `.groups` argument)
Joining, by = c("Region", "Measure", "Sex", "Age", "date_f")
`summarise()` regrouping output by 'date_f', 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Region' (override with `.groups` argument)
Writing to "Germany input template"
Writing to sheet "database"
Writing to "Hydra auto update log"
Appending 1 row(s) to "log"
Auto-refreshing stale OAuth token.
Files trashed:
  * DE16.11.2020cases&deaths: 1sMa9HefMprrABDVKvu763tp8hG8Ki22fxgyyMKRWNQA
Created Drive file:
  * DE16.11.2020cases&deaths: 1tX_CONpZkjOcke32I_AmLQmBt_5AO0hu_kx4MckGYzY
with MIME type:
  * application/vnd.google-apps.spreadsheet
Writing to "DE16.11.2020cases&deaths"
Writing to sheet "cases&deaths_age_sex"
Auto-refreshing stale OAuth token.
Error: Expected content type 'application/json' not 'text/html'.
<!DOCTYPE html>
<html lang=en>
  <meta charset=utf-8>
  <meta name=viewport content="initial-scale=1, minimum-scale=1, width=device-width">
  <title>Error 502 (Server Error)!!1</title>
  <style>
  ...
Backtrace:
     x
  1. +-base::source(...)
  2. | +-base::withVisible(eval(ei, envir))
  3. | \-base::eval(ei, envir)
  4. |   \-base::eval(ei, envir)
  5. \-googlesheets4::write_sheet(db, ss = meta$id, sheet = "cases&deaths_age_sex")
  6.   \-gargle::response_process(resp_raw)
  7.     +-gargle:::stop_request_failed(error_message(resp), resp)
  8.     | +-rlang::abort(...)
  9.     | | \-rlang:::validate_signal_message(message, class)
 10.     | \-glue::glue_collapse(message, sep = "\n")
 11.     \-gargle:::error_message(resp)
 12.       \-gargle::response_as_json(resp)
 13.         \-gargle:::check_for_json(resp)
 14.           \-gargle:::stop_request_failed(message, resp)
Execution halted
Lade nötiges Paket: pacman
Auto-refreshing stale OAuth token.
Reading from "spreadsheets_rows"
Range "'input'"
Parsed with column specification:
cols(
  ObjectId = col_double(),
  IdBundesland = col_double(),
  Bundesland = col_character(),
  Landkreis = col_character(),
  Altersgruppe = col_character(),
  Geschlecht = col_character(),
  AnzahlFall = col_double(),
  AnzahlTodesfall = col_double(),
  Meldedatum = col_character(),
  IdLandkreis = col_character(),
  Datenstand = col_character(),
  NeuerFall = col_double(),
  NeuerTodesfall = col_double(),
  Refdatum = col_character(),
  NeuGenesen = col_double(),
  AnzahlGenesen = col_double(),
  IstErkrankungsbeginn = col_double(),
  Altersgruppe2 = col_character()
)
`summarise()` regrouping output by 'Region', 'Sex', 'Measure', 'date_f' (override with `.groups` argument)
Joining, by = c("Region", "Measure", "Sex", "Age", "date_f")
`summarise()` regrouping output by 'date_f', 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Region' (override with `.groups` argument)
Writing to "Germany input template"
Writing to sheet "database"
Error: Client error: (429) RESOURCE_EXHAUSTED
  * Either out of resource quota or reaching rate limiting. The client should look for google.rpc.QuotaFailure error detail for more information.
  * Quota exceeded for quota group 'ReadGroup' and limit 'Read requests per 100 seconds' of service 'sheets.googleapis.com' for consumer 'project_number:603366585132'.

Error details:
  * Error details of type 'google.rpc.Help' are not implemented yet.
  * Workaround: use `tryCatch()` and inspect error payload yourself.
  * Please open an issue at https://github.com/r-lib/gargle/issues, so we can fix.
Backtrace:
     x
  1. +-base::source(...)
  2. | +-base::withVisible(eval(ei, envir))
  3. | \-base::eval(ei, envir)
  4. |   \-base::eval(ei, envir)
  5. \-global::log_update(pp = "Germany", N = nrow(db_full))
  6.   \-googlesheets4::sheet_append(log_this, ss = ss, sheet = "log")
  7.     \-googlesheets4::gs4_get(ssid)
  8.       \-googlesheets4:::gs4_get_impl_(as_sheets_id(ss))
  9.         \-gar
Execution halted
Lade nötiges Paket: pacman
Auto-refreshing stale OAuth token.
Reading from "spreadsheets_rows"
Range "'input'"
Parsed with column specification:
cols(
  ObjectId = col_double(),
  IdBundesland = col_double(),
  Bundesland = col_character(),
  Landkreis = col_character(),
  Altersgruppe = col_character(),
  Geschlecht = col_character(),
  AnzahlFall = col_double(),
  AnzahlTodesfall = col_double(),
  Meldedatum = col_character(),
  IdLandkreis = col_character(),
  Datenstand = col_character(),
  NeuerFall = col_double(),
  NeuerTodesfall = col_double(),
  Refdatum = col_character(),
  NeuGenesen = col_double(),
  AnzahlGenesen = col_double(),
  IstErkrankungsbeginn = col_double(),
  Altersgruppe2 = col_character()
)
`summarise()` regrouping output by 'Region', 'Sex', 'Measure', 'date_f' (override with `.groups` argument)
Joining, by = c("Region", "Measure", "Sex", "Age", "date_f")
`summarise()` regrouping output by 'date_f', 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Region' (override with `.groups` argument)
Writing to "Germany input template"
Writing to sheet "database"
Writing to "Hydra auto update log"
Appending 1 row(s) to "log"
Auto-refreshing stale OAuth token.
Files trashed:
  * DE18.11.2020cases&deaths: 1CMd2e_mBIiDFB_-fKLuh7MWZ7iNZGsAciwWGMzsF-Bg
Created Drive file:
  * DE18.11.2020cases&deaths: 1uay3c1CZx2U8OKP4SPrbO4tuElp3X_GCflIGWsKTOGo
with MIME type:
  * application/vnd.google-apps.spreadsheet
Writing to "DE18.11.2020cases&deaths"
Writing to sheet "cases&deaths_age_sex"
Error: Client error: (400) INVALID_ARGUMENT
  * Client specified an invalid argument. Check error message and error details for more information.
  * Invalid requests[0].updateSheetProperties: This action would increase the number of cells in the workbook above the limit of 5000000 cells.
Backtrace:
    x
 1. +-base::source(...)
 2. | +-base::withVisible(eval(ei, envir))
 3. | \-base::eval(ei, envir)
 4. |   \-base::eval(ei, envir)
 5. \-googlesheets4::write_sheet(db, ss = meta$id, sheet = "cases&deaths_age_sex")
 6.   \-gargle::response_process(resp_raw)
 7.     \-gargle:::stop_request_failed(error_message(resp), resp)
Execution halted
Loading required package: pacman
Auto-refreshing stale OAuth token.
Reading from "spreadsheets_rows"
Range "'input'"
Parsed with column specification:
cols(
  ObjectId = col_double(),
  IdBundesland = col_double(),
  Bundesland = col_character(),
  Landkreis = col_character(),
  Altersgruppe = col_character(),
  Geschlecht = col_character(),
  AnzahlFall = col_double(),
  AnzahlTodesfall = col_double(),
  Meldedatum = col_character(),
  IdLandkreis = col_character(),
  Datenstand = col_character(),
  NeuerFall = col_double(),
  NeuerTodesfall = col_double(),
  Refdatum = col_character(),
  NeuGenesen = col_double(),
  AnzahlGenesen = col_double(),
  IstErkrankungsbeginn = col_double(),
  Altersgruppe2 = col_character()
)
`summarise()` regrouping output by 'Region', 'Sex', 'Measure', 'date_f' (override with `.groups` argument)
Joining, by = c("Region", "Measure", "Sex", "Age", "date_f")
`summarise()` regrouping output by 'date_f', 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Region' (override with `.groups` argument)
Writing to "Germany input template"
Writing to sheet "database"
Error: Client error: (429) RESOURCE_EXHAUSTED
  * Either out of resource quota or reaching rate limiting. The client should look for google.rpc.QuotaFailure error detail for more information.
  * Quota exceeded for quota group 'ReadGroup' and limit 'Read requests per 100 seconds' of service 'sheets.googleapis.com' for consumer 'project_number:603366585132'.

Error details:
  * Error details of type 'google.rpc.Help' are not implemented yet.
  * Workaround: use `tryCatch()` and inspect error payload yourself.
  * Please open an issue at https://github.com/r-lib/gargle/issues, so we can fix.
Backtrace:
     x
  1. +-base::source(...)
  2. | +-base::withVisible(eval(ei, envir))
  3. | \-base::eval(ei, envir)
  4. |   \-base::eval(ei, envir)
  5. \-global::log_update(pp = "Germany", N = nrow(db_full))
  6.   \-googlesheets4::sheet_append(log_this, ss = ss, sheet = "log")
  7.     \-googlesheets4::gs4_get(ssid)
  8.       \-googlesheets4:::gs4_get_impl_(as_sheets_id(ss))
  9.         \-gar
Execution halted
Loading required package: pacman
Auto-refreshing stale OAuth token.
Reading from "spreadsheets_rows"
Range "'input'"
Parsed with column specification:
cols(
  ObjectId = col_double(),
  IdBundesland = col_double(),
  Bundesland = col_character(),
  Landkreis = col_character(),
  Altersgruppe = col_character(),
  Geschlecht = col_character(),
  AnzahlFall = col_double(),
  AnzahlTodesfall = col_double(),
  Meldedatum = col_character(),
  IdLandkreis = col_character(),
  Datenstand = col_character(),
  NeuerFall = col_double(),
  NeuerTodesfall = col_double(),
  Refdatum = col_character(),
  NeuGenesen = col_double(),
  AnzahlGenesen = col_double(),
  IstErkrankungsbeginn = col_double(),
  Altersgruppe2 = col_character()
)
`summarise()` regrouping output by 'Region', 'Sex', 'Measure', 'date_f' (override with `.groups` argument)
Joining, by = c("Region", "Measure", "Sex", "Age", "date_f")
`summarise()` regrouping output by 'date_f', 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Region' (override with `.groups` argument)
Writing to "Germany input template"
Writing to sheet "database"
Error: Client error: (429) RESOURCE_EXHAUSTED
  * Either out of resource quota or reaching rate limiting. The client should look for google.rpc.QuotaFailure error detail for more information.
  * Quota exceeded for quota group 'ReadGroup' and limit 'Read requests per 100 seconds' of service 'sheets.googleapis.com' for consumer 'project_number:603366585132'.

Error details:
  * Error details of type 'google.rpc.Help' are not implemented yet.
  * Workaround: use `tryCatch()` and inspect error payload yourself.
  * Please open an issue at https://github.com/r-lib/gargle/issues, so we can fix.
Backtrace:
     x
  1. +-base::source(...)
  2. | +-base::withVisible(eval(ei, envir))
  3. | \-base::eval(ei, envir)
  4. |   \-base::eval(ei, envir)
  5. \-global::log_update(pp = "Germany", N = nrow(db_full))
  6.   \-googlesheets4::sheet_append(log_this, ss = ss, sheet = "log")
  7.     \-googlesheets4::gs4_get(ssid)
  8.       \-googlesheets4:::gs4_get_impl_(as_sheets_id(ss))
  9.         \-gar
Execution halted
Loading required package: pacman
Auto-refreshing stale OAuth token.
Reading from "spreadsheets_rows"
Range "'input'"
Parsed with column specification:
cols(
  ObjectId = col_double(),
  IdBundesland = col_double(),
  Bundesland = col_character(),
  Landkreis = col_character(),
  Altersgruppe = col_character(),
  Geschlecht = col_character(),
  AnzahlFall = col_double(),
  AnzahlTodesfall = col_double(),
  Meldedatum = col_character(),
  IdLandkreis = col_character(),
  Datenstand = col_character(),
  NeuerFall = col_double(),
  NeuerTodesfall = col_double(),
  Refdatum = col_character(),
  NeuGenesen = col_double(),
  AnzahlGenesen = col_double(),
  IstErkrankungsbeginn = col_double(),
  Altersgruppe2 = col_character()
)
`summarise()` regrouping output by 'Region', 'Sex', 'Measure', 'date_f' (override with `.groups` argument)
Joining, by = c("Region", "Measure", "Sex", "Age", "date_f")
`summarise()` regrouping output by 'date_f', 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Region' (override with `.groups` argument)
Writing to "Germany input template"
Writing to sheet "database"
Writing to "Hydra auto update log"
Appending 1 row(s) to "log"
Auto-refreshing stale OAuth token.
Files trashed:
  * DE21.11.2020cases&deaths: 1-c0jZPGqYZkf0HhjE_c_a86qehT8T4QenGVbClfOu4c
Created Drive file:
  * DE21.11.2020cases&deaths: 1skGkxiedu3vkNlgVtcmL_9Gr0yWrHJAeY4nwb1d3vt0
with MIME type:
  * application/vnd.google-apps.spreadsheet
Writing to "DE21.11.2020cases&deaths"
Writing to sheet "cases&deaths_age_sex"
Error: Expected content type 'application/json' not 'text/html'.
<!DOCTYPE html>
<html lang=en>
  <meta charset=utf-8>
  <meta name=viewport content="initial-scale=1, minimum-scale=1, width=device-width">
  <title>Error 502 (Server Error)!!1</title>
  <style>
  ...
Backtrace:
     x
  1. +-base::source(...)
  2. | +-base::withVisible(eval(ei, envir))
  3. | \-base::eval(ei, envir)
  4. |   \-base::eval(ei, envir)
  5. \-googlesheets4::write_sheet(db, ss = meta$id, sheet = "cases&deaths_age_sex")
  6.   \-gargle::response_process(resp_raw)
  7.     +-gargle:::stop_request_failed(error_message(resp), resp)
  8.     | +-rlang::abort(...)
  9.     | | \-rlang:::validate_signal_message(message, class)
 10.     | \-glue::glue_collapse(message, sep = "\n")
 11.     \-gargle:::error_message(resp)
 12.       \-gargle::response_as_json(resp)
 13.         \-gargle:::check_for_json(resp)
 14.           \-gargle:::stop_request_failed(message, resp)
Execution halted
Loading required package: pacman
Auto-refreshing stale OAuth token.
Reading from "spreadsheets_rows"
Range "'input'"
Parsed with column specification:
cols(
  ObjectId = col_double(),
  IdBundesland = col_double(),
  Bundesland = col_character(),
  Landkreis = col_character(),
  Altersgruppe = col_character(),
  Geschlecht = col_character(),
  AnzahlFall = col_double(),
  AnzahlTodesfall = col_double(),
  Meldedatum = col_character(),
  IdLandkreis = col_character(),
  Datenstand = col_character(),
  NeuerFall = col_double(),
  NeuerTodesfall = col_double(),
  Refdatum = col_character(),
  NeuGenesen = col_double(),
  AnzahlGenesen = col_double(),
  IstErkrankungsbeginn = col_double(),
  Altersgruppe2 = col_character()
)
`summarise()` regrouping output by 'Region', 'Sex', 'Measure', 'date_f' (override with `.groups` argument)
Joining, by = c("Region", "Measure", "Sex", "Age", "date_f")
`summarise()` regrouping output by 'date_f', 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Region' (override with `.groups` argument)
Writing to "Germany input template"
Writing to sheet "database"
Writing to "Hydra auto update log"
Appending 1 row(s) to "log"
Auto-refreshing stale OAuth token.
Files trashed:
  * DE22.11.2020cases&deaths: 1WEEPRjadCdt1LoFE2EdftdTMBZRp9giY58LBhyj_mhE
Created Drive file:
  * DE22.11.2020cases&deaths: 15WAp7UjUgjmRAesrV1PwNZRSGMl3ISj9cjomDWiANHI
with MIME type:
  * application/vnd.google-apps.spreadsheet
Writing to "DE22.11.2020cases&deaths"
Writing to sheet "cases&deaths_age_sex"
Error: Client error: (400) INVALID_ARGUMENT
  * Client specified an invalid argument. Check error message and error details for more information.
  * Invalid requests[0].updateSheetProperties: This action would increase the number of cells in the workbook above the limit of 5000000 cells.
Backtrace:
    x
 1. +-base::source(...)
 2. | +-base::withVisible(eval(ei, envir))
 3. | \-base::eval(ei, envir)
 4. |   \-base::eval(ei, envir)
 5. \-googlesheets4::write_sheet(db, ss = meta$id, sheet = "cases&deaths_age_sex")
 6.   \-gargle::response_process(resp_raw)
 7.     \-gargle:::stop_request_failed(error_message(resp), resp)
Execution halted
Loading required package: pacman
Auto-refreshing stale OAuth token.
Reading from "spreadsheets_rows"
Range "'input'"
Parsed with column specification:
cols(
  ObjectId = col_double(),
  IdBundesland = col_double(),
  Bundesland = col_character(),
  Landkreis = col_character(),
  Altersgruppe = col_character(),
  Geschlecht = col_character(),
  AnzahlFall = col_double(),
  AnzahlTodesfall = col_double(),
  Meldedatum = col_character(),
  IdLandkreis = col_character(),
  Datenstand = col_character(),
  NeuerFall = col_double(),
  NeuerTodesfall = col_double(),
  Refdatum = col_character(),
  NeuGenesen = col_double(),
  AnzahlGenesen = col_double(),
  IstErkrankungsbeginn = col_double(),
  Altersgruppe2 = col_character()
)
`summarise()` regrouping output by 'Region', 'Sex', 'Measure', 'date_f' (override with `.groups` argument)
Joining, by = c("Region", "Measure", "Sex", "Age", "date_f")
`summarise()` regrouping output by 'date_f', 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Region' (override with `.groups` argument)
Writing to "Germany input template"
Writing to sheet "database"
Writing to "Hydra auto update log"
Appending 1 row(s) to "log"
Auto-refreshing stale OAuth token.
Files trashed:
  * DE23.11.2020cases&deaths: 1AzrM1Q8r5fh3tqX9qsyhC8MqWhkC0r-WzVzpLJcB0PI
Created Drive file:
  * DE23.11.2020cases&deaths: 1c7CUgM5pYAoFIxUtqrhQBCy6OaBfqQuHdeRCiKhEW_w
with MIME type:
  * application/vnd.google-apps.spreadsheet
Writing to "DE23.11.2020cases&deaths"
Writing to sheet "cases&deaths_age_sex"
Error: Client error: (400) INVALID_ARGUMENT
  * Client specified an invalid argument. Check error message and error details for more information.
  * Invalid requests[0].updateSheetProperties: This action would increase the number of cells in the workbook above the limit of 5000000 cells.
Backtrace:
    x
 1. +-base::source(...)
 2. | +-base::withVisible(eval(ei, envir))
 3. | \-base::eval(ei, envir)
 4. |   \-base::eval(ei, envir)
 5. \-googlesheets4::write_sheet(db, ss = meta$id, sheet = "cases&deaths_age_sex")
 6.   \-gargle::response_process(resp_raw)
 7.     \-gargle:::stop_request_failed(error_message(resp), resp)
Execution halted
Loading required package: pacman
Auto-refreshing stale OAuth token.
Reading from "spreadsheets_rows"
Range "'input'"
Parsed with column specification:
cols(
  ObjectId = col_double(),
  IdBundesland = col_double(),
  Bundesland = col_character(),
  Landkreis = col_character(),
  Altersgruppe = col_character(),
  Geschlecht = col_character(),
  AnzahlFall = col_double(),
  AnzahlTodesfall = col_double(),
  Meldedatum = col_character(),
  IdLandkreis = col_character(),
  Datenstand = col_character(),
  NeuerFall = col_double(),
  NeuerTodesfall = col_double(),
  Refdatum = col_character(),
  NeuGenesen = col_double(),
  AnzahlGenesen = col_double(),
  IstErkrankungsbeginn = col_double(),
  Altersgruppe2 = col_character()
)
`summarise()` regrouping output by 'Region', 'Sex', 'Measure', 'date_f' (override with `.groups` argument)
Joining, by = c("Region", "Measure", "Sex", "Age", "date_f")
`summarise()` regrouping output by 'date_f', 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Region' (override with `.groups` argument)
Writing to "Germany input template"
Writing to sheet "database"
Error: Client error: (429) RESOURCE_EXHAUSTED
  * Either out of resource quota or reaching rate limiting. The client should look for google.rpc.QuotaFailure error detail for more information.
  * Quota exceeded for quota group 'ReadGroup' and limit 'Read requests per 100 seconds' of service 'sheets.googleapis.com' for consumer 'project_number:603366585132'.

Error details:
  * Error details of type 'google.rpc.Help' are not implemented yet.
  * Workaround: use `tryCatch()` and inspect error payload yourself.
  * Please open an issue at https://github.com/r-lib/gargle/issues, so we can fix.
Backtrace:
     x
  1. +-base::source(...)
  2. | +-base::withVisible(eval(ei, envir))
  3. | \-base::eval(ei, envir)
  4. |   \-base::eval(ei, envir)
  5. \-global::log_update(pp = "Germany", N = nrow(db_full))
  6.   \-googlesheets4::sheet_append(log_this, ss = ss, sheet = "log")
  7.     \-googlesheets4::gs4_get(ssid)
  8.       \-googlesheets4:::gs4_get_impl_(as_sheets_id(ss))
  9.         \-gar
Execution halted
Loading required package: pacman
Auto-refreshing stale OAuth token.
Reading from "spreadsheets_rows"
Range "'input'"
Parsed with column specification:
cols(
  ObjectId = col_double(),
  IdBundesland = col_double(),
  Bundesland = col_character(),
  Landkreis = col_character(),
  Altersgruppe = col_character(),
  Geschlecht = col_character(),
  AnzahlFall = col_double(),
  AnzahlTodesfall = col_double(),
  Meldedatum = col_character(),
  IdLandkreis = col_character(),
  Datenstand = col_character(),
  NeuerFall = col_double(),
  NeuerTodesfall = col_double(),
  Refdatum = col_character(),
  NeuGenesen = col_double(),
  AnzahlGenesen = col_double(),
  IstErkrankungsbeginn = col_double(),
  Altersgruppe2 = col_character()
)
`summarise()` regrouping output by 'Region', 'Sex', 'Measure', 'date_f' (override with `.groups` argument)
Joining, by = c("Region", "Measure", "Sex", "Age", "date_f")
`summarise()` regrouping output by 'date_f', 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Region' (override with `.groups` argument)
Writing to "Germany input template"
Writing to sheet "database"
Writing to "Hydra auto update log"
Appending 1 row(s) to "log"
Auto-refreshing stale OAuth token.
Files trashed:
  * DE25.11.2020cases&deaths: 1IvoB1pn8-elF5aeKG6fIKeQeFPHXCC-aakMJFj04Wp4
Created Drive file:
  * DE25.11.2020cases&deaths: 1Gr4tGt_E3xpqzQn_P5R3WnYLEbuZJ2DjxQohtvM_BJc
with MIME type:
  * application/vnd.google-apps.spreadsheet
Writing to "DE25.11.2020cases&deaths"
Writing to sheet "cases&deaths_age_sex"
Error: Client error: (400) INVALID_ARGUMENT
  * Client specified an invalid argument. Check error message and error details for more information.
  * Invalid requests[0].updateSheetProperties: This action would increase the number of cells in the workbook above the limit of 5000000 cells.
Backtrace:
    x
 1. +-base::source(...)
 2. | +-base::withVisible(eval(ei, envir))
 3. | \-base::eval(ei, envir)
 4. |   \-base::eval(ei, envir)
 5. \-googlesheets4::write_sheet(db, ss = meta$id, sheet = "cases&deaths_age_sex")
 6.   \-gargle::response_process(resp_raw)
 7.     \-gargle:::stop_request_failed(error_message(resp), resp)
Execution halted
Loading required package: pacman
Auto-refreshing stale OAuth token.
Reading from "spreadsheets_rows"
Range "'input'"
Parsed with column specification:
cols(
  ObjectId = col_double(),
  IdBundesland = col_double(),
  Bundesland = col_character(),
  Landkreis = col_character(),
  Altersgruppe = col_character(),
  Geschlecht = col_character(),
  AnzahlFall = col_double(),
  AnzahlTodesfall = col_double(),
  Meldedatum = col_character(),
  IdLandkreis = col_character(),
  Datenstand = col_character(),
  NeuerFall = col_double(),
  NeuerTodesfall = col_double(),
  Refdatum = col_character(),
  NeuGenesen = col_double(),
  AnzahlGenesen = col_double(),
  IstErkrankungsbeginn = col_double(),
  Altersgruppe2 = col_character()
)
`summarise()` regrouping output by 'Region', 'Sex', 'Measure', 'date_f' (override with `.groups` argument)
Joining, by = c("Region", "Measure", "Sex", "Age", "date_f")
`summarise()` regrouping output by 'date_f', 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Region' (override with `.groups` argument)
Writing to "Germany input template"
Writing to sheet "database"
Writing to "Hydra auto update log"
Appending 1 row(s) to "log"
Auto-refreshing stale OAuth token.
Files trashed:
  * DE26.11.2020cases&deaths: 1OdSNqEqmxa8pdTPqGvcJUZM06EgB4B-LiNAdp-IZAXw
Created Drive file:
  * DE26.11.2020cases&deaths: 1hTcqoXyzs9HF474kjIsnN5HylPwRTHQeYWXlP8u5Mbs
with MIME type:
  * application/vnd.google-apps.spreadsheet
Error: Client error: (429) RESOURCE_EXHAUSTED
  * Either out of resource quota or reaching rate limiting. The client should look for google.rpc.QuotaFailure error detail for more information.
  * Quota exceeded for quota group 'ReadGroup' and limit 'Read requests per 100 seconds' of service 'sheets.googleapis.com' for consumer 'project_number:603366585132'.

Error details:
  * Error details of type 'google.rpc.Help' are not implemented yet.
  * Workaround: use `tryCatch()` and inspect error payload yourself.
  * Please open an issue at https://github.com/r-lib/gargle/issues, so we can fix.
Backtrace:
    x
 1. +-base::source(...)
 2. | +-base::withVisible(eval(ei, envir))
 3. | \-base::eval(ei, envir)
 4. |   \-base::eval(ei, envir)
 5. \-googlesheets4::write_sheet(db, ss = meta$id, sheet = "cases&deaths_age_sex")
 6.   \-googlesheets4::gs4_get(ssid)
 7.     \-googlesheets4:::gs4_get_impl_(as_sheets_id(ss))
 8.       \-gargle::response_process(raw_resp)
 9.         \-gargle:::stop_req
Execution halted
