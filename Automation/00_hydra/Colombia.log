-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.3.0     v purrr   0.3.4
v tibble  3.0.1     v dplyr   0.8.5
v tidyr   1.1.0     v stringr 1.4.0
v readr   1.3.1     v forcats 0.5.0
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()
Warnmeldungen:
1: Paket 'tidyverse' wurde unter R Version 3.6.3 erstellt 
2: Paket 'ggplot2' wurde unter R Version 3.6.3 erstellt 
3: Paket 'tibble' wurde unter R Version 3.6.3 erstellt 
4: Paket 'tidyr' wurde unter R Version 3.6.3 erstellt 
5: Paket 'readr' wurde unter R Version 3.6.3 erstellt 
6: Paket 'purrr' wurde unter R Version 3.6.3 erstellt 
7: Paket 'dplyr' wurde unter R Version 3.6.3 erstellt 
8: Paket 'stringr' wurde unter R Version 3.6.3 erstellt 
9: Paket 'forcats' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'lubridate'

The following objects are masked from 'package:dplyr':

    intersect, setdiff, union

The following objects are masked from 'package:base':

    date, intersect, setdiff, union

Warnmeldung:
Paket 'lubridate' wurde unter R Version 3.6.3 erstellt 
Warnmeldung:
Paket 'googlesheets4' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'googledrive'

The following objects are masked from 'package:googlesheets4':

    request_generate, request_make

Warnmeldung:
Paket 'googledrive' wurde unter R Version 3.6.3 erstellt 
Parsed with column specification:
cols(
  .default = col_character(),
  `ID de caso` = col_double(),
  `Fecha de notificación` = col_datetime(format = ""),
  Edad = col_double(),
  `Fecha de muerte` = col_datetime(format = ""),
  `Fecha diagnostico` = col_datetime(format = ""),
  `Fecha recuperado` = col_datetime(format = ""),
  `fecha reporte web` = col_datetime(format = ""),
  `Codigo departamento` = col_double(),
  `Codigo pais` = col_double()
)
See spec(...) for full column specifications.
Warnung: 7 parsing failures.
  row               col   expected   actual                                                                        file
95230 Fecha diagnostico date like  SIN DATO 'https://www.datos.gov.co/api/views/gt2j-8ykr/rows.csv?accessType=DOWNLOAD'
95286 Fecha diagnostico date like  SIN DATO 'https://www.datos.gov.co/api/views/gt2j-8ykr/rows.csv?accessType=DOWNLOAD'
97103 Fecha diagnostico date like  SIN DATO 'https://www.datos.gov.co/api/views/gt2j-8ykr/rows.csv?accessType=DOWNLOAD'
97105 Fecha diagnostico date like  SIN DATO 'https://www.datos.gov.co/api/views/gt2j-8ykr/rows.csv?accessType=DOWNLOAD'
97107 Fecha diagnostico date like  SIN DATO 'https://www.datos.gov.co/api/views/gt2j-8ykr/rows.csv?accessType=DOWNLOAD'
..... ................. .......... ........ ...........................................................................
See problems(...) for more details.

Parsed with column specification:
cols(
  .default = col_double(),
  Fecha = col_character(),
  `Positividad acumulada` = col_number()
)
See spec(...) for full column specifications.
[1] "Leve"         "Asintomático" "Fallecido"    "Moderado"     "Grave"       
[6] "N/A"         
 [1] "Bogotá D.C."                                            
 [2] "Valle del Cauca"                                        
 [3] "Antioquia"                                              
 [4] "Cartagena D.T. y C."                                    
 [5] "Huila"                                                  
 [6] "Meta"                                                   
 [7] "Risaralda"                                              
 [8] "Norte de Santander"                                     
 [9] "Caldas"                                                 
[10] "Cundinamarca"                                           
[11] "Barranquilla D.E."                                      
[12] "Santander"                                              
[13] "Quindío"                                                
[14] "Tolima"                                                 
[15] "Cauca"                                                  
[16] "Santa Marta D.T. y C."                                  
[17] "Cesar"                                                  
[18] "Archipiélago de San Andrés Providencia y Santa Catalina"
[19] "Casanare"                                               
[20] "Nariño"                                                 
[21] "Atlántico"                                              
[22] "Boyacá"                                                 
[23] "Córdoba"                                                
[24] "Bolívar"                                                
[25] "Sucre"                                                  
[26] "Magdalena"                                              
[27] "La Guajira"                                             
[28] "Buenaventura D.E."                                      
[29] "Chocó"                                                  
[30] "Amazonas"                                               
[31] "Caquetá"                                                
[32] "Putumayo"                                               
[33] "Arauca"                                                 
[34] "Vaupés"                                                 
[35] "Guainía"                                                
[36] "Vichada"                                                
[37] "Guaviare"                                               
[1] "M" "F"
  [1] "2020-04-05" "2020-04-06" "2020-03-23" "2020-03-22" "2020-03-16"
  [6] "2020-03-26" "2020-03-25" "2020-04-04" "2020-04-15" "2020-04-09"
 [11] "2020-03-30" "2020-03-28" "2020-06-10" "2020-04-02" "2020-04-08"
 [16] "2020-03-27" "2020-04-12" "2020-04-03" "2020-04-24" "2020-04-21"
 [21] "2020-04-07" "2020-04-14" "2020-04-01" "2020-04-19" "2020-03-31"
 [26] "2020-04-10" "2020-04-18" "2020-04-11" "2020-03-29" "2020-04-28"
 [31] "2020-05-04" "2020-04-17" "2020-04-16" "2020-04-13" "2020-04-25"
 [36] "2020-03-24" "2020-05-01" "2020-05-31" "2020-04-29" "2020-05-11"
 [41] "2020-04-27" "2020-04-20" "2020-04-26" "2020-05-09" "2020-04-22"
 [46] "2020-05-07" "2020-04-23" "2020-05-02" "2020-04-30" "2020-05-06"
 [51] "2020-06-03" "2020-05-23" "2020-06-05" "2020-05-05" "2020-05-18"
 [56] "2020-05-03" "2020-05-08" "2020-05-17" "2020-05-29" "2020-05-22"
 [61] "2020-05-21" "2020-05-13" "2020-05-27" "2020-05-10" "2020-05-12"
 [66] "2020-06-02" "2020-06-29" "2020-05-28" "2020-06-01" "2020-05-15"
 [71] "2020-05-20" "2020-06-16" "2020-06-06" "2020-06-12" "2020-06-13"
 [76] "2020-05-26" "2020-05-14" "2020-05-19" "2020-05-30" "2020-05-24"
 [81] "2020-05-16" "2020-06-09" "2020-06-07" "2020-05-25" "2020-06-19"
 [86] "2020-06-14" "2020-06-25" "2020-06-17" "2020-06-15" "2020-06-08"
 [91] "2020-06-04" "2020-06-23" "2020-06-30" "2020-06-24" "2020-06-18"
 [96] "2020-06-21" "2020-06-11" "2020-06-22" "2020-06-20" "2020-07-01"
[101] "2020-06-27" "2020-06-26" "2020-06-28"
 [1] "Amazonas"        "Antioquia"       "Atlantico"       "Bogota"         
 [5] "Bolivar"         "Boyaca"          "Caldas"          "Caqueta"        
 [9] "Cauca"           "Cesar"           "Choco"           "Cordoba"        
[13] "Cundinamarca"    "Guainia"         "Guajira"         "Huila"          
[17] "Magdalena"       "Meta"            "Nariño"          "Nte Santander"  
[21] "Putumayo"        "Quindio"         "Risaralda"       "Santa Marta"    
[25] "Santander"       "Sucre"           "Tolima"          "Valle del Cauca"
[29] "Vaupes"         
 [1] "Bogota"          "Valle del Cauca" "resto"           "Bolivar"        
 [5] "Cundinamarca"    "Atlantico"       "Nariño"          "Cordoba"        
 [9] "Sucre"           "Magdalena"       "Choco"           "Amazonas"       
# A tibble: 2 x 2
  Measure `sum(Value)`
  <chr>          <dbl>
1 Cases         106110
2 Deaths          3627
# A tibble: 24 x 3
# Groups:   Region [12]
   Region    Measure `sum(Value)`
   <chr>     <chr>          <dbl>
 1 Amazonas  Cases           2325
 2 Amazonas  Deaths            89
 3 Atlantico Cases          25181
 4 Atlantico Deaths          1288
 5 Bogota    Cases          32726
 6 Bogota    Deaths           728
 7 Bolivar   Cases           9629
 8 Bolivar   Deaths           385
 9 Choco     Cases           1740
10 Choco     Deaths            51
# ... with 14 more rows
[1] "f" "m"
 [1] "Bogota"          "Valle del Cauca" "resto"           "Bolivar"        
 [5] "Cundinamarca"    "Atlantico"       "Nariño"          "Cordoba"        
 [9] "Sucre"           "Magdalena"       "Choco"           "Amazonas"       
  [1] "2020-03-06" "2020-03-09" "2020-03-11" "2020-03-12" "2020-03-13"
  [6] "2020-03-14" "2020-03-15" "2020-03-16" "2020-03-17" "2020-03-18"
 [11] "2020-03-19" "2020-03-20" "2020-03-21" "2020-03-22" "2020-03-23"
 [16] "2020-03-24" "2020-03-27" "2020-03-25" "2020-03-26" "2020-03-28"
 [21] "2020-03-29" "2020-03-30" "2020-03-31" "2020-04-01" "2020-04-02"
 [26] "2020-04-03" "2020-04-04" "2020-04-05" "2020-04-06" "2020-04-07"
 [31] "2020-04-08" "2020-04-09" "2020-04-10" "2020-04-11" "2020-04-12"
 [36] "2020-04-13" "2020-04-14" "2020-04-19" "2020-04-15" "2020-04-28"
 [41] "2020-04-16" "2020-04-17" "2020-04-18" "2020-04-20" "2020-04-22"
 [46] "2020-04-21" "2020-04-23" "2020-05-01" "2020-04-24" "2020-05-05"
 [51] "2020-04-25" "2020-04-26" "2020-04-27" "2020-04-29" "2020-04-30"
 [56] "2020-05-02" "2020-05-04" "2020-05-03" NA           "2020-05-06"
 [61] "2020-05-07" "2020-05-08" "2020-05-09" "2020-05-10" "2020-05-11"
 [66] "2020-05-12" "2020-05-13" "2020-05-14" "2020-05-15" "2020-05-16"
 [71] "2020-05-17" "2020-05-18" "2020-05-19" "2020-05-20" "2020-05-29"
 [76] "2020-05-21" "2020-05-22" "2020-05-23" "2020-06-01" "2020-05-24"
 [81] "2020-05-25" "2020-05-26" "2020-05-27" "2020-05-28" "2020-05-30"
 [86] "2020-05-31" "2020-06-03" "2020-06-02" "2020-06-05" "2020-06-04"
 [91] "2020-06-06" "2020-06-07" "2020-06-08" "2020-06-28" "2020-06-09"
 [96] "2020-06-10" "2020-06-11" "2020-06-12" "2020-06-16" "2020-06-13"
[101] "2020-06-14" "2020-06-15" "2020-06-17" "2020-06-20" "2020-06-25"
[106] "2020-06-18" "2020-06-23" "2020-06-19" "2020-07-02" "2020-06-21"
[111] "2020-06-29" "2020-06-24" "2020-06-22" "2020-06-26" "2020-06-27"
[116] "2020-06-30" "2020-07-01"
  [1] "19"  "34"  "50"  "55"  "25"  "27"  "85"  "22"  "28"  "36"  "42"  "74" 
 [13] "68"  "48"  "30"  "61"  "73"  "54"  "26"  "23"  "18"  "49"  "65"  "59" 
 [25] "72"  "45"  "29"  "21"  "79"  "52"  "71"  "24"  "44"  "38"  "31"  "41" 
 [37] "67"  "62"  "58"  "37"  "20"  "32"  "64"  "40"  "46"  "39"  "9"   "53" 
 [49] "56"  "51"  "69"  "16"  "57"  "60"  "33"  "76"  "47"  "35"  "88"  "70" 
 [61] "81"  "17"  "63"  "80"  "84"  "87"  "83"  "43"  "77"  "15"  "66"  "3"  
 [73] "82"  "12"  "8"   "1"   "5"   "6"   "75"  "2"   "0"   "13"  "4"   "78" 
 [85] "10"  "94"  "7"   "95"  "11"  "93"  "92"  "90"  "97"  "91"  "86"  "14" 
 [97] "96"  "98"  "89"  "103" "100" "99"  "102" "106" "101" "104" "111" "122"
[1] "2020-03-06"
[1] "2020-03-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-31"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-14"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-15"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-16"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-17"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-18"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-19"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-14"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-15"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-16"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-17"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-18"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-19"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-31"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-14"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-15"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-16"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-17"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-18"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-19"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
Joining, by = "Region"
# A tibble: 1 x 3
  Region  Cases Deaths
  <chr>   <dbl>  <dbl>
1 All    103715   3627
Adding missing grouping variables: `Region`
# A tibble: 22 x 3
# Groups:   Region [11]
   Region    Measure Value
   <chr>     <chr>   <dbl>
 1 Amazonas  Cases    2249
 2 Amazonas  Deaths     89
 3 Atlantico Cases   24003
 4 Atlantico Deaths   1288
 5 Bogota    Cases   32708
 6 Bogota    Deaths    728
 7 Bolivar   Cases    9297
 8 Bolivar   Deaths    385
 9 Choco     Cases    1681
10 Choco     Deaths     51
# ... with 12 more rows
Fehler in unique(db_colombia_full$Region) : 
  Objekt 'db_colombia_full' nicht gefunden
Ausführung angehalten
-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.3.0     v purrr   0.3.4
v tibble  3.0.1     v dplyr   0.8.5
v tidyr   1.1.0     v stringr 1.4.0
v readr   1.3.1     v forcats 0.5.0
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()
Warnmeldungen:
1: Paket 'tidyverse' wurde unter R Version 3.6.3 erstellt 
2: Paket 'ggplot2' wurde unter R Version 3.6.3 erstellt 
3: Paket 'tibble' wurde unter R Version 3.6.3 erstellt 
4: Paket 'tidyr' wurde unter R Version 3.6.3 erstellt 
5: Paket 'readr' wurde unter R Version 3.6.3 erstellt 
6: Paket 'purrr' wurde unter R Version 3.6.3 erstellt 
7: Paket 'dplyr' wurde unter R Version 3.6.3 erstellt 
8: Paket 'stringr' wurde unter R Version 3.6.3 erstellt 
9: Paket 'forcats' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'lubridate'

The following objects are masked from 'package:dplyr':

    intersect, setdiff, union

The following objects are masked from 'package:base':

    date, intersect, setdiff, union

Warnmeldung:
Paket 'lubridate' wurde unter R Version 3.6.3 erstellt 
Warnmeldung:
Paket 'googlesheets4' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'googledrive'

The following objects are masked from 'package:googlesheets4':

    request_generate, request_make

Warnmeldung:
Paket 'googledrive' wurde unter R Version 3.6.3 erstellt 
Parsed with column specification:
cols(
  .default = col_character(),
  `ID de caso` = col_double(),
  `Fecha de notificación` = col_datetime(format = ""),
  Edad = col_double(),
  `Fecha de muerte` = col_datetime(format = ""),
  `Fecha diagnostico` = col_datetime(format = ""),
  `Fecha recuperado` = col_datetime(format = ""),
  `fecha reporte web` = col_datetime(format = ""),
  `Codigo departamento` = col_double(),
  `Codigo pais` = col_double()
)
See spec(...) for full column specifications.
Warnung: 7 parsing failures.
  row               col   expected   actual                                                                        file
95230 Fecha diagnostico date like  SIN DATO 'https://www.datos.gov.co/api/views/gt2j-8ykr/rows.csv?accessType=DOWNLOAD'
95286 Fecha diagnostico date like  SIN DATO 'https://www.datos.gov.co/api/views/gt2j-8ykr/rows.csv?accessType=DOWNLOAD'
97103 Fecha diagnostico date like  SIN DATO 'https://www.datos.gov.co/api/views/gt2j-8ykr/rows.csv?accessType=DOWNLOAD'
97105 Fecha diagnostico date like  SIN DATO 'https://www.datos.gov.co/api/views/gt2j-8ykr/rows.csv?accessType=DOWNLOAD'
97107 Fecha diagnostico date like  SIN DATO 'https://www.datos.gov.co/api/views/gt2j-8ykr/rows.csv?accessType=DOWNLOAD'
..... ................. .......... ........ ...........................................................................
See problems(...) for more details.

Parsed with column specification:
cols(
  .default = col_double(),
  Fecha = col_character(),
  `Positividad acumulada` = col_number()
)
See spec(...) for full column specifications.
[1] "Leve"         "Asintomático" "Fallecido"    "Moderado"     "Grave"       
[6] "N/A"         
 [1] "Bogotá D.C."                                            
 [2] "Valle del Cauca"                                        
 [3] "Antioquia"                                              
 [4] "Cartagena D.T. y C."                                    
 [5] "Huila"                                                  
 [6] "Meta"                                                   
 [7] "Risaralda"                                              
 [8] "Norte de Santander"                                     
 [9] "Caldas"                                                 
[10] "Cundinamarca"                                           
[11] "Barranquilla D.E."                                      
[12] "Santander"                                              
[13] "Quindío"                                                
[14] "Tolima"                                                 
[15] "Cauca"                                                  
[16] "Santa Marta D.T. y C."                                  
[17] "Cesar"                                                  
[18] "Archipiélago de San Andrés Providencia y Santa Catalina"
[19] "Casanare"                                               
[20] "Nariño"                                                 
[21] "Atlántico"                                              
[22] "Boyacá"                                                 
[23] "Córdoba"                                                
[24] "Bolívar"                                                
[25] "Sucre"                                                  
[26] "Magdalena"                                              
[27] "La Guajira"                                             
[28] "Buenaventura D.E."                                      
[29] "Chocó"                                                  
[30] "Amazonas"                                               
[31] "Caquetá"                                                
[32] "Putumayo"                                               
[33] "Arauca"                                                 
[34] "Vaupés"                                                 
[35] "Guainía"                                                
[36] "Vichada"                                                
[37] "Guaviare"                                               
[1] "M" "F"
  [1] "2020-04-05" "2020-04-06" "2020-03-23" "2020-03-22" "2020-03-16"
  [6] "2020-03-26" "2020-03-25" "2020-04-04" "2020-04-15" "2020-04-09"
 [11] "2020-03-30" "2020-03-28" "2020-06-10" "2020-04-02" "2020-04-08"
 [16] "2020-03-27" "2020-04-12" "2020-04-03" "2020-04-24" "2020-04-21"
 [21] "2020-04-07" "2020-04-14" "2020-04-01" "2020-04-19" "2020-03-31"
 [26] "2020-04-10" "2020-04-18" "2020-04-11" "2020-03-29" "2020-04-28"
 [31] "2020-05-04" "2020-04-17" "2020-04-16" "2020-04-13" "2020-04-25"
 [36] "2020-03-24" "2020-05-01" "2020-05-31" "2020-04-29" "2020-05-11"
 [41] "2020-04-27" "2020-04-20" "2020-04-26" "2020-05-09" "2020-04-22"
 [46] "2020-05-07" "2020-04-23" "2020-05-02" "2020-04-30" "2020-05-06"
 [51] "2020-06-03" "2020-05-23" "2020-06-05" "2020-05-05" "2020-05-18"
 [56] "2020-05-03" "2020-05-08" "2020-05-17" "2020-05-29" "2020-05-22"
 [61] "2020-05-21" "2020-05-13" "2020-05-27" "2020-05-10" "2020-05-12"
 [66] "2020-06-02" "2020-06-29" "2020-05-28" "2020-06-01" "2020-05-15"
 [71] "2020-05-20" "2020-06-16" "2020-06-06" "2020-06-12" "2020-06-13"
 [76] "2020-05-26" "2020-05-14" "2020-05-19" "2020-05-30" "2020-05-24"
 [81] "2020-05-16" "2020-06-09" "2020-06-07" "2020-05-25" "2020-06-19"
 [86] "2020-06-14" "2020-06-25" "2020-06-17" "2020-06-15" "2020-06-08"
 [91] "2020-06-04" "2020-06-23" "2020-06-30" "2020-06-24" "2020-06-18"
 [96] "2020-06-21" "2020-06-11" "2020-06-22" "2020-06-20" "2020-07-01"
[101] "2020-06-27" "2020-06-26" "2020-06-28"
 [1] "Amazonas"        "Antioquia"       "Atlantico"       "Bogota"         
 [5] "Bolivar"         "Boyaca"          "Caldas"          "Caqueta"        
 [9] "Cauca"           "Cesar"           "Choco"           "Cordoba"        
[13] "Cundinamarca"    "Guainia"         "Guajira"         "Huila"          
[17] "Magdalena"       "Meta"            "Nariño"          "Nte Santander"  
[21] "Putumayo"        "Quindio"         "Risaralda"       "Santa Marta"    
[25] "Santander"       "Sucre"           "Tolima"          "Valle del Cauca"
[29] "Vaupes"         
 [1] "Bogota"          "Valle del Cauca" "resto"           "Bolivar"        
 [5] "Cundinamarca"    "Atlantico"       "Nariño"          "Cordoba"        
 [9] "Sucre"           "Magdalena"       "Choco"           "Amazonas"       
# A tibble: 2 x 2
  Measure `sum(Value)`
  <chr>          <dbl>
1 Cases         106110
2 Deaths          3627
# A tibble: 24 x 3
# Groups:   Region [12]
   Region    Measure `sum(Value)`
   <chr>     <chr>          <dbl>
 1 Amazonas  Cases           2325
 2 Amazonas  Deaths            89
 3 Atlantico Cases          25181
 4 Atlantico Deaths          1288
 5 Bogota    Cases          32726
 6 Bogota    Deaths           728
 7 Bolivar   Cases           9629
 8 Bolivar   Deaths           385
 9 Choco     Cases           1740
10 Choco     Deaths            51
# ... with 14 more rows
[1] "f" "m"
 [1] "Bogota"          "Valle del Cauca" "resto"           "Bolivar"        
 [5] "Cundinamarca"    "Atlantico"       "Nariño"          "Cordoba"        
 [9] "Sucre"           "Magdalena"       "Choco"           "Amazonas"       
  [1] "2020-03-06" "2020-03-09" "2020-03-11" "2020-03-12" "2020-03-13"
  [6] "2020-03-14" "2020-03-15" "2020-03-16" "2020-03-17" "2020-03-18"
 [11] "2020-03-19" "2020-03-20" "2020-03-21" "2020-03-22" "2020-03-23"
 [16] "2020-03-24" "2020-03-27" "2020-03-25" "2020-03-26" "2020-03-28"
 [21] "2020-03-29" "2020-03-30" "2020-03-31" "2020-04-01" "2020-04-02"
 [26] "2020-04-03" "2020-04-04" "2020-04-05" "2020-04-06" "2020-04-07"
 [31] "2020-04-08" "2020-04-09" "2020-04-10" "2020-04-11" "2020-04-12"
 [36] "2020-04-13" "2020-04-14" "2020-04-19" "2020-04-15" "2020-04-28"
 [41] "2020-04-16" "2020-04-17" "2020-04-18" "2020-04-20" "2020-04-22"
 [46] "2020-04-21" "2020-04-23" "2020-05-01" "2020-04-24" "2020-05-05"
 [51] "2020-04-25" "2020-04-26" "2020-04-27" "2020-04-29" "2020-04-30"
 [56] "2020-05-02" "2020-05-04" "2020-05-03" NA           "2020-05-06"
 [61] "2020-05-07" "2020-05-08" "2020-05-09" "2020-05-10" "2020-05-11"
 [66] "2020-05-12" "2020-05-13" "2020-05-14" "2020-05-15" "2020-05-16"
 [71] "2020-05-17" "2020-05-18" "2020-05-19" "2020-05-20" "2020-05-29"
 [76] "2020-05-21" "2020-05-22" "2020-05-23" "2020-06-01" "2020-05-24"
 [81] "2020-05-25" "2020-05-26" "2020-05-27" "2020-05-28" "2020-05-30"
 [86] "2020-05-31" "2020-06-03" "2020-06-02" "2020-06-05" "2020-06-04"
 [91] "2020-06-06" "2020-06-07" "2020-06-08" "2020-06-28" "2020-06-09"
 [96] "2020-06-10" "2020-06-11" "2020-06-12" "2020-06-16" "2020-06-13"
[101] "2020-06-14" "2020-06-15" "2020-06-17" "2020-06-20" "2020-06-25"
[106] "2020-06-18" "2020-06-23" "2020-06-19" "2020-07-02" "2020-06-21"
[111] "2020-06-29" "2020-06-24" "2020-06-22" "2020-06-26" "2020-06-27"
[116] "2020-06-30" "2020-07-01"
  [1] "19"  "34"  "50"  "55"  "25"  "27"  "85"  "22"  "28"  "36"  "42"  "74" 
 [13] "68"  "48"  "30"  "61"  "73"  "54"  "26"  "23"  "18"  "49"  "65"  "59" 
 [25] "72"  "45"  "29"  "21"  "79"  "52"  "71"  "24"  "44"  "38"  "31"  "41" 
 [37] "67"  "62"  "58"  "37"  "20"  "32"  "64"  "40"  "46"  "39"  "9"   "53" 
 [49] "56"  "51"  "69"  "16"  "57"  "60"  "33"  "76"  "47"  "35"  "88"  "70" 
 [61] "81"  "17"  "63"  "80"  "84"  "87"  "83"  "43"  "77"  "15"  "66"  "3"  
 [73] "82"  "12"  "8"   "1"   "5"   "6"   "75"  "2"   "0"   "13"  "4"   "78" 
 [85] "10"  "94"  "7"   "95"  "11"  "93"  "92"  "90"  "97"  "91"  "86"  "14" 
 [97] "96"  "98"  "89"  "103" "100" "99"  "102" "106" "101" "104" "111" "122"
[1] "2020-03-06"
[1] "2020-03-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-31"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-14"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-15"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-16"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-17"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-18"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-19"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-14"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-15"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-16"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-17"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-18"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-19"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-31"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-14"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-15"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-16"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-17"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-18"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-19"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
Joining, by = "Region"
# A tibble: 1 x 3
  Region  Cases Deaths
  <chr>   <dbl>  <dbl>
1 All    103715   3627
Adding missing grouping variables: `Region`
# A tibble: 22 x 3
# Groups:   Region [11]
   Region    Measure Value
   <chr>     <chr>   <dbl>
 1 Amazonas  Cases    2249
 2 Amazonas  Deaths     89
 3 Atlantico Cases   24003
 4 Atlantico Deaths   1288
 5 Bogota    Cases   32708
 6 Bogota    Deaths    728
 7 Bolivar   Cases    9297
 8 Bolivar   Deaths    385
 9 Choco     Cases    1681
10 Choco     Deaths     51
# ... with 12 more rows
[1] "All"

       Choco      Cordoba Cundinamarca    Magdalena       Nariño        Sucre 
         820         1640         4510         7790        16810         3690 
Writing to "Colombia input"
Writing to sheet "database"
Writing to "Colombia_Bogota input"
Writing to sheet "database"
Writing to "Colombia_Atlantico input"
Writing to sheet "database"
Writing to "Colombia_Bolivar input"
Writing to sheet "database"
Writing to "Colombia_Valle del Cauca input"
Writing to sheet "database"
Writing to "Colombia_Amazonas input"
Writing to sheet "database"
Writing to "Colombia_others input"
Writing to sheet "database"
Created Drive file:
  * CO03.07.2020cases&deaths: 1usgj00ZqhwvQCTAc2Xis9tt2ATQ1LQjSp5M_L3wfdH0
with MIME type:
  * application/vnd.google-apps.spreadsheet
Writing to "CO03.07.2020cases&deaths"
Writing to sheet "cases&deaths_age_sex"
Auto-refreshing stale OAuth token.
Writing to "CO03.07.2020cases&deaths"
Writing to sheet "tests"
Deleting these sheet(s) from "CO03.07.2020cases&deaths":
* Sheet1
-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.3.0     v purrr   0.3.4
v tibble  3.0.1     v dplyr   0.8.5
v tidyr   1.1.0     v stringr 1.4.0
v readr   1.3.1     v forcats 0.5.0
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()
Warnmeldungen:
1: Paket 'tidyverse' wurde unter R Version 3.6.3 erstellt 
2: Paket 'ggplot2' wurde unter R Version 3.6.3 erstellt 
3: Paket 'tibble' wurde unter R Version 3.6.3 erstellt 
4: Paket 'tidyr' wurde unter R Version 3.6.3 erstellt 
5: Paket 'readr' wurde unter R Version 3.6.3 erstellt 
6: Paket 'purrr' wurde unter R Version 3.6.3 erstellt 
7: Paket 'dplyr' wurde unter R Version 3.6.3 erstellt 
8: Paket 'stringr' wurde unter R Version 3.6.3 erstellt 
9: Paket 'forcats' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'lubridate'

The following objects are masked from 'package:dplyr':

    intersect, setdiff, union

The following objects are masked from 'package:base':

    date, intersect, setdiff, union

Warnmeldung:
Paket 'lubridate' wurde unter R Version 3.6.3 erstellt 
Warnmeldung:
Paket 'googlesheets4' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'googledrive'

The following objects are masked from 'package:googlesheets4':

    request_generate, request_make

Warnmeldung:
Paket 'googledrive' wurde unter R Version 3.6.3 erstellt 
Parsed with column specification:
cols(
  .default = col_character(),
  `ID de caso` = col_double(),
  `Fecha de notificación` = col_datetime(format = ""),
  Edad = col_double(),
  `Fecha de muerte` = col_datetime(format = ""),
  `Fecha diagnostico` = col_datetime(format = ""),
  `Fecha recuperado` = col_datetime(format = ""),
  `fecha reporte web` = col_datetime(format = ""),
  `Codigo departamento` = col_double(),
  `Codigo pais` = col_double()
)
See spec(...) for full column specifications.
Warnung: 2497 parsing failures.
  row               col   expected   actual                                                                        file
 7618 Fecha diagnostico date like  SIN DATO 'https://www.datos.gov.co/api/views/gt2j-8ykr/rows.csv?accessType=DOWNLOAD'
10370 Fecha diagnostico date like  SIN DATO 'https://www.datos.gov.co/api/views/gt2j-8ykr/rows.csv?accessType=DOWNLOAD'
11699 Fecha diagnostico date like  SIN DATO 'https://www.datos.gov.co/api/views/gt2j-8ykr/rows.csv?accessType=DOWNLOAD'
13281 Fecha diagnostico date like  SIN DATO 'https://www.datos.gov.co/api/views/gt2j-8ykr/rows.csv?accessType=DOWNLOAD'
22982 Fecha diagnostico date like  SIN DATO 'https://www.datos.gov.co/api/views/gt2j-8ykr/rows.csv?accessType=DOWNLOAD'
..... ................. .......... ........ ...........................................................................
See problems(...) for more details.

Parsed with column specification:
cols(
  .default = col_double(),
  Fecha = col_character(),
  `Positividad acumulada` = col_number()
)
See spec(...) for full column specifications.
[1] "Leve"         "Asintomático" "Fallecido"    "Moderado"     "Grave"       
[6] "N/A"         
 [1] "Bogotá D.C."                                            
 [2] "Valle del Cauca"                                        
 [3] "Antioquia"                                              
 [4] "Cartagena D.T. y C."                                    
 [5] "Huila"                                                  
 [6] "Meta"                                                   
 [7] "Risaralda"                                              
 [8] "Norte de Santander"                                     
 [9] "Caldas"                                                 
[10] "Cundinamarca"                                           
[11] "Barranquilla D.E."                                      
[12] "Santander"                                              
[13] "Quindío"                                                
[14] "Tolima"                                                 
[15] "Cauca"                                                  
[16] "Santa Marta D.T. y C."                                  
[17] "Cesar"                                                  
[18] "Archipiélago de San Andrés Providencia y Santa Catalina"
[19] "Casanare"                                               
[20] "Nariño"                                                 
[21] "Atlántico"                                              
[22] "Boyacá"                                                 
[23] "Córdoba"                                                
[24] "Bolívar"                                                
[25] "Sucre"                                                  
[26] "Magdalena"                                              
[27] "La Guajira"                                             
[28] "Buenaventura D.E."                                      
[29] "Chocó"                                                  
[30] "Amazonas"                                               
[31] "Caquetá"                                                
[32] "Putumayo"                                               
[33] "Arauca"                                                 
[34] "Vaupés"                                                 
[35] "Guainía"                                                
[36] "Vichada"                                                
[37] "Guaviare"                                               
[1] "M" "F"
  [1] "2020-04-05" "2020-04-06" "2020-03-23" "2020-03-22" "2020-03-16"
  [6] "2020-03-26" "2020-03-25" "2020-04-04" "2020-04-15" "2020-04-09"
 [11] "2020-03-30" "2020-03-28" "2020-06-10" "2020-04-02" "2020-04-08"
 [16] "2020-03-27" "2020-04-12" "2020-04-03" "2020-04-24" "2020-04-21"
 [21] "2020-04-07" "2020-04-14" "2020-04-01" "2020-04-19" "2020-03-31"
 [26] "2020-04-10" "2020-04-18" "2020-04-11" "2020-03-29" "2020-04-28"
 [31] "2020-05-04" "2020-04-17" "2020-04-16" "2020-04-13" "2020-04-25"
 [36] "2020-03-24" "2020-05-01" "2020-05-31" "2020-04-29" "2020-05-11"
 [41] "2020-04-27" "2020-04-20" "2020-04-26" "2020-05-09" "2020-04-22"
 [46] "2020-05-07" "2020-04-23" "2020-05-02" "2020-04-30" "2020-05-06"
 [51] "2020-06-03" "2020-05-23" "2020-06-05" "2020-05-05" "2020-05-18"
 [56] "2020-05-03" "2020-05-08" "2020-05-17" "2020-05-29" "2020-05-22"
 [61] "2020-05-21" "2020-05-13" "2020-05-27" "2020-05-10" "2020-05-12"
 [66] "2020-06-02" "2020-06-29" "2020-05-28" "2020-06-01" "2020-05-15"
 [71] "2020-05-20" "2020-06-16" "2020-06-06" "2020-06-12" "2020-06-13"
 [76] "2020-05-26" "2020-05-14" "2020-05-19" "2020-05-30" "2020-05-24"
 [81] "2020-05-16" "2020-06-09" "2020-06-07" "2020-05-25" "2020-06-19"
 [86] "2020-06-14" "2020-06-25" "2020-06-17" "2020-06-15" "2020-06-08"
 [91] "2020-06-04" "2020-06-23" "2020-06-30" "2020-06-24" "2020-06-18"
 [96] "2020-06-21" "2020-06-11" "2020-06-22" "2020-06-20" "2020-07-01"
[101] "2020-06-27" "2020-06-26" "2020-07-02" "2020-06-28"
 [1] "Amazonas"        "Antioquia"       "Atlantico"       "Bogota"         
 [5] "Bolivar"         "Boyaca"          "Caldas"          "Caqueta"        
 [9] "Cauca"           "Cesar"           "Choco"           "Cordoba"        
[13] "Cundinamarca"    "Guainia"         "Guajira"         "Huila"          
[17] "Magdalena"       "Meta"            "Nariño"          "Nte Santander"  
[21] "Putumayo"        "Quindio"         "Risaralda"       "Santa Marta"    
[25] "Santander"       "Sucre"           "Tolima"          "Valle del Cauca"
[29] "Vaupes"         
 [1] "Bogota"          "Valle del Cauca" "resto"           "Bolivar"        
 [5] "Cundinamarca"    "Atlantico"       "Santa Marta"     "Nariño"         
 [9] "Cordoba"         "Sucre"           "Magdalena"       "Choco"          
[13] "Amazonas"       
# A tibble: 2 x 2
  Measure `sum(Value)`
  <chr>          <dbl>
1 Cases         109505
2 Deaths          3763
# A tibble: 26 x 3
# Groups:   Region [13]
   Region    Measure `sum(Value)`
   <chr>     <chr>          <dbl>
 1 Amazonas  Cases           2328
 2 Amazonas  Deaths            89
 3 Atlantico Cases          25788
 4 Atlantico Deaths          1334
 5 Bogota    Cases          34131
 6 Bogota    Deaths           758
 7 Bolivar   Cases           9854
 8 Bolivar   Deaths           392
 9 Choco     Cases           1754
10 Choco     Deaths            53
# ... with 16 more rows
[1] "f" "m"
 [1] "Bogota"          "Valle del Cauca" "resto"           "Bolivar"        
 [5] "Cundinamarca"    "Atlantico"       "Santa Marta"     "Nariño"         
 [9] "Cordoba"         "Sucre"           "Magdalena"       "Choco"          
[13] "Amazonas"       
  [1] "2020-03-06" "2020-03-09" "2020-03-11" "2020-03-12" "2020-03-13"
  [6] "2020-03-14" "2020-03-15" "2020-03-16" "2020-03-17" "2020-03-18"
 [11] "2020-03-19" "2020-03-20" "2020-03-21" "2020-03-22" "2020-03-23"
 [16] "2020-03-24" "2020-03-27" "2020-03-25" "2020-03-26" "2020-03-28"
 [21] "2020-03-29" "2020-03-30" "2020-03-31" "2020-04-01" "2020-04-02"
 [26] "2020-04-03" "2020-04-04" "2020-04-05" "2020-04-06" "2020-04-07"
 [31] "2020-04-08" "2020-04-09" "2020-04-10" "2020-04-11" "2020-04-12"
 [36] "2020-04-13" "2020-04-14" "2020-04-19" "2020-04-15" "2020-04-28"
 [41] "2020-04-16" "2020-04-17" "2020-04-18" "2020-04-20" "2020-04-22"
 [46] "2020-04-21" "2020-04-23" "2020-05-01" "2020-04-24" "2020-05-05"
 [51] "2020-04-25" "2020-04-26" "2020-04-27" "2020-04-29" "2020-04-30"
 [56] "2020-05-02" "2020-05-04" "2020-05-03" NA           "2020-05-06"
 [61] "2020-05-07" "2020-05-08" "2020-05-09" "2020-05-10" "2020-05-11"
 [66] "2020-05-12" "2020-05-13" "2020-05-14" "2020-05-15" "2020-05-16"
 [71] "2020-05-17" "2020-05-18" "2020-05-19" "2020-05-20" "2020-05-29"
 [76] "2020-05-21" "2020-05-22" "2020-05-23" "2020-06-01" "2020-05-24"
 [81] "2020-05-25" "2020-05-26" "2020-05-27" "2020-05-28" "2020-05-30"
 [86] "2020-05-31" "2020-06-03" "2020-06-02" "2020-06-05" "2020-06-04"
 [91] "2020-06-06" "2020-06-07" "2020-06-08" "2020-06-28" "2020-06-09"
 [96] "2020-06-10" "2020-06-11" "2020-06-12" "2020-06-16" "2020-06-13"
[101] "2020-06-14" "2020-06-15" "2020-06-17" "2020-06-20" "2020-06-25"
[106] "2020-06-18" "2020-06-23" "2020-06-19" "2020-07-02" "2020-06-21"
[111] "2020-06-29" "2020-06-24" "2020-06-22" "2020-06-26" "2020-06-27"
[116] "2020-06-30" "2020-07-01" "2020-07-03"
  [1] "19"  "34"  "50"  "55"  "25"  "27"  "85"  "22"  "28"  "36"  "42"  "74" 
 [13] "68"  "48"  "30"  "61"  "73"  "54"  "26"  "23"  "18"  "49"  "65"  "59" 
 [25] "72"  "45"  "29"  "21"  "79"  "52"  "71"  "24"  "44"  "38"  "31"  "41" 
 [37] "67"  "62"  "58"  "37"  "20"  "32"  "64"  "40"  "46"  "39"  "9"   "53" 
 [49] "56"  "51"  "69"  "16"  "57"  "60"  "33"  "76"  "47"  "35"  "88"  "70" 
 [61] "81"  "17"  "63"  "80"  "84"  "87"  "83"  "43"  "77"  "15"  "66"  "3"  
 [73] "82"  "12"  "8"   "1"   "5"   "6"   "75"  "2"   "0"   "13"  "4"   "78" 
 [85] "10"  "94"  "7"   "95"  "11"  "93"  "92"  "90"  "97"  "91"  "86"  "14" 
 [97] "96"  "98"  "89"  "103" "100" "99"  "102" "106" "101" "104" "111" "122"
[1] "2020-03-06"
[1] "2020-03-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-31"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-14"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-15"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-16"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-17"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-18"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-19"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-14"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-15"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-16"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-17"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-18"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-19"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-31"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-14"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-15"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-16"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-17"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-18"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-19"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
Joining, by = "Region"
# A tibble: 1 x 3
  Region  Cases Deaths
  <chr>   <dbl>  <dbl>
1 All    107008   3763
Adding missing grouping variables: `Region`
# A tibble: 24 x 3
# Groups:   Region [12]
   Region    Measure Value
   <chr>     <chr>   <dbl>
 1 Amazonas  Cases    2252
 2 Amazonas  Deaths     89
 3 Atlantico Cases   24566
 4 Atlantico Deaths   1334
 5 Bogota    Cases   34112
 6 Bogota    Deaths    758
 7 Bolivar   Cases    9495
 8 Bolivar   Deaths    392
 9 Choco     Cases    1694
10 Choco     Deaths     53
# ... with 14 more rows
[1] "All"

       Choco      Cordoba Cundinamarca    Magdalena       Nariño  Santa Marta 
        2460         2050         4920         8200        17220         1230 
       Sucre 
        4100 
Auto-refreshing stale OAuth token.
Writing to "Colombia input"
Writing to sheet "database"
Writing to "Colombia_Bogota input"
Writing to sheet "database"
Writing to "Colombia_Atlantico input"
Writing to sheet "database"
Writing to "Colombia_Bolivar input"
Writing to sheet "database"
Writing to "Colombia_Valle del Cauca input"
Writing to sheet "database"
Writing to "Colombia_Amazonas input"
Writing to sheet "database"
Writing to "Colombia_others input"
Writing to sheet "database"
Auto-refreshing stale OAuth token.
Created Drive file:
  * CO04.07.2020cases&deaths: 128oGwTwHbJrfpiNzSOe_fpOX2MbTxrUMOSD_pRRtN4E
with MIME type:
  * application/vnd.google-apps.spreadsheet
Writing to "CO04.07.2020cases&deaths"
Writing to sheet "cases&deaths_age_sex"
Writing to "CO04.07.2020cases&deaths"
Writing to sheet "tests"
Deleting these sheet(s) from "CO04.07.2020cases&deaths":
* Sheet1
-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.3.0     v purrr   0.3.4
v tibble  3.0.1     v dplyr   0.8.5
v tidyr   1.1.0     v stringr 1.4.0
v readr   1.3.1     v forcats 0.5.0
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()
Warnmeldungen:
1: Paket 'tidyverse' wurde unter R Version 3.6.3 erstellt 
2: Paket 'ggplot2' wurde unter R Version 3.6.3 erstellt 
3: Paket 'tibble' wurde unter R Version 3.6.3 erstellt 
4: Paket 'tidyr' wurde unter R Version 3.6.3 erstellt 
5: Paket 'readr' wurde unter R Version 3.6.3 erstellt 
6: Paket 'purrr' wurde unter R Version 3.6.3 erstellt 
7: Paket 'dplyr' wurde unter R Version 3.6.3 erstellt 
8: Paket 'stringr' wurde unter R Version 3.6.3 erstellt 
9: Paket 'forcats' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'lubridate'

The following objects are masked from 'package:dplyr':

    intersect, setdiff, union

The following objects are masked from 'package:base':

    date, intersect, setdiff, union

Warnmeldung:
Paket 'lubridate' wurde unter R Version 3.6.3 erstellt 
Warnmeldung:
Paket 'googlesheets4' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'googledrive'

The following objects are masked from 'package:googlesheets4':

    request_generate, request_make

Warnmeldung:
Paket 'googledrive' wurde unter R Version 3.6.3 erstellt 
Parsed with column specification:
cols(
  .default = col_character(),
  `ID de caso` = col_double(),
  `Fecha de notificación` = col_datetime(format = ""),
  Edad = col_double(),
  `Fecha de muerte` = col_datetime(format = ""),
  `Fecha diagnostico` = col_datetime(format = ""),
  `Fecha recuperado` = col_datetime(format = ""),
  `fecha reporte web` = col_datetime(format = ""),
  `Codigo departamento` = col_double(),
  `Codigo pais` = col_double()
)
See spec(...) for full column specifications.
Warnung: 2619 parsing failures.
  row               col   expected   actual                                                                        file
 7618 Fecha diagnostico date like  SIN DATO 'https://www.datos.gov.co/api/views/gt2j-8ykr/rows.csv?accessType=DOWNLOAD'
10370 Fecha diagnostico date like  SIN DATO 'https://www.datos.gov.co/api/views/gt2j-8ykr/rows.csv?accessType=DOWNLOAD'
11699 Fecha diagnostico date like  SIN DATO 'https://www.datos.gov.co/api/views/gt2j-8ykr/rows.csv?accessType=DOWNLOAD'
13281 Fecha diagnostico date like  SIN DATO 'https://www.datos.gov.co/api/views/gt2j-8ykr/rows.csv?accessType=DOWNLOAD'
22982 Fecha diagnostico date like  SIN DATO 'https://www.datos.gov.co/api/views/gt2j-8ykr/rows.csv?accessType=DOWNLOAD'
..... ................. .......... ........ ...........................................................................
See problems(...) for more details.

Parsed with column specification:
cols(
  .default = col_double(),
  Fecha = col_character(),
  `Positividad acumulada` = col_number()
)
See spec(...) for full column specifications.
[1] "Leve"         "Asintomático" "Fallecido"    "Moderado"     "Grave"       
[6] "N/A"         
 [1] "Bogotá D.C."                                            
 [2] "Valle del Cauca"                                        
 [3] "Antioquia"                                              
 [4] "Cartagena D.T. y C."                                    
 [5] "Huila"                                                  
 [6] "Meta"                                                   
 [7] "Risaralda"                                              
 [8] "Norte de Santander"                                     
 [9] "Caldas"                                                 
[10] "Cundinamarca"                                           
[11] "Barranquilla D.E."                                      
[12] "Santander"                                              
[13] "Quindío"                                                
[14] "Tolima"                                                 
[15] "Cauca"                                                  
[16] "Santa Marta D.T. y C."                                  
[17] "Cesar"                                                  
[18] "Archipiélago de San Andrés Providencia y Santa Catalina"
[19] "Casanare"                                               
[20] "Nariño"                                                 
[21] "Atlántico"                                              
[22] "Boyacá"                                                 
[23] "Córdoba"                                                
[24] "Bolívar"                                                
[25] "Sucre"                                                  
[26] "Magdalena"                                              
[27] "La Guajira"                                             
[28] "Buenaventura D.E."                                      
[29] "Chocó"                                                  
[30] "Amazonas"                                               
[31] "Caquetá"                                                
[32] "Putumayo"                                               
[33] "Arauca"                                                 
[34] "Vaupés"                                                 
[35] "Guainía"                                                
[36] "Vichada"                                                
[37] "Guaviare"                                               
[1] "M" "F"
  [1] "2020-04-05" "2020-04-06" "2020-03-23" "2020-03-22" "2020-03-16"
  [6] "2020-03-26" "2020-03-25" "2020-04-04" "2020-04-15" "2020-04-09"
 [11] "2020-03-30" "2020-03-28" "2020-06-10" "2020-04-02" "2020-04-08"
 [16] "2020-03-27" "2020-04-12" "2020-04-03" "2020-04-24" "2020-04-21"
 [21] "2020-04-07" "2020-04-14" "2020-04-01" "2020-04-19" "2020-03-31"
 [26] "2020-04-10" "2020-04-18" "2020-04-11" "2020-03-29" "2020-04-28"
 [31] "2020-05-04" "2020-04-17" "2020-04-16" "2020-04-13" "2020-04-25"
 [36] "2020-03-24" "2020-05-01" "2020-05-31" "2020-04-29" "2020-05-11"
 [41] "2020-04-27" "2020-04-20" "2020-04-26" "2020-05-09" "2020-04-22"
 [46] "2020-05-07" "2020-04-23" "2020-05-02" "2020-04-30" "2020-05-06"
 [51] "2020-06-03" "2020-05-23" "2020-06-05" "2020-05-05" "2020-05-18"
 [56] "2020-05-03" "2020-05-08" "2020-05-17" "2020-05-29" "2020-05-22"
 [61] "2020-05-21" "2020-05-13" "2020-05-27" "2020-05-10" "2020-05-12"
 [66] "2020-06-02" "2020-06-29" "2020-05-28" "2020-06-01" "2020-05-15"
 [71] "2020-05-20" "2020-06-16" "2020-06-06" "2020-06-12" "2020-06-13"
 [76] "2020-05-26" "2020-05-14" "2020-05-19" "2020-05-30" "2020-05-24"
 [81] "2020-05-16" "2020-06-09" "2020-06-07" "2020-05-25" "2020-06-19"
 [86] "2020-06-14" "2020-06-25" "2020-06-17" "2020-06-15" "2020-06-08"
 [91] "2020-06-04" "2020-06-23" "2020-06-30" "2020-06-24" "2020-06-18"
 [96] "2020-06-21" "2020-06-11" "2020-06-22" "2020-06-20" "2020-07-01"
[101] "2020-07-03" "2020-06-27" "2020-06-26" "2020-07-02" "2020-06-28"
[106] "2020-07-04"
 [1] "Amazonas"        "Antioquia"       "Atlantico"       "Bogota"         
 [5] "Bolivar"         "Boyaca"          "Caldas"          "Caqueta"        
 [9] "Cauca"           "Cesar"           "Choco"           "Cordoba"        
[13] "Cundinamarca"    "Guainia"         "Guajira"         "Huila"          
[17] "Magdalena"       "Meta"            "Nariño"          "Nte Santander"  
[21] "Putumayo"        "Quindio"         "Risaralda"       "Santa Marta"    
[25] "Santander"       "Sucre"           "Tolima"          "Valle del Cauca"
[29] "Vaupes"         
 [1] "Bogota"          "Valle del Cauca" "resto"           "Bolivar"        
 [5] "Cundinamarca"    "Atlantico"       "Santa Marta"     "Nariño"         
 [9] "Cordoba"         "Sucre"           "Magdalena"       "Choco"          
[13] "Amazonas"       
# A tibble: 2 x 2
  Measure `sum(Value)`
  <chr>          <dbl>
1 Cases         113389
2 Deaths          3928
# A tibble: 26 x 3
# Groups:   Region [13]
   Region    Measure `sum(Value)`
   <chr>     <chr>          <dbl>
 1 Amazonas  Cases           2335
 2 Amazonas  Deaths            89
 3 Atlantico Cases          26406
 4 Atlantico Deaths          1408
 5 Bogota    Cases          35266
 6 Bogota    Deaths           793
 7 Bolivar   Cases          10134
 8 Bolivar   Deaths           399
 9 Choco     Cases           1833
10 Choco     Deaths            53
# ... with 16 more rows
[1] "f" "m"
 [1] "Bogota"          "Valle del Cauca" "resto"           "Bolivar"        
 [5] "Cundinamarca"    "Atlantico"       "Santa Marta"     "Nariño"         
 [9] "Cordoba"         "Sucre"           "Magdalena"       "Choco"          
[13] "Amazonas"       
  [1] "2020-03-06" "2020-03-09" "2020-03-11" "2020-03-12" "2020-03-13"
  [6] "2020-03-14" "2020-03-15" "2020-03-16" "2020-03-17" "2020-03-18"
 [11] "2020-03-19" "2020-03-20" "2020-03-21" "2020-03-22" "2020-03-23"
 [16] "2020-03-24" "2020-03-27" "2020-03-25" "2020-03-26" "2020-03-28"
 [21] "2020-03-29" "2020-03-30" "2020-03-31" "2020-04-01" "2020-04-02"
 [26] "2020-04-03" "2020-04-04" "2020-04-05" "2020-04-06" "2020-04-07"
 [31] "2020-04-08" "2020-04-09" "2020-04-10" "2020-04-11" "2020-04-12"
 [36] "2020-04-13" "2020-04-14" "2020-04-19" "2020-04-15" "2020-04-28"
 [41] "2020-04-16" "2020-04-17" "2020-04-18" "2020-04-20" "2020-04-22"
 [46] "2020-04-21" "2020-04-23" "2020-05-01" "2020-04-24" "2020-05-05"
 [51] "2020-04-25" "2020-04-26" "2020-04-27" "2020-04-29" "2020-04-30"
 [56] "2020-05-02" "2020-05-04" "2020-05-03" NA           "2020-05-06"
 [61] "2020-05-07" "2020-05-08" "2020-05-09" "2020-05-10" "2020-05-11"
 [66] "2020-05-12" "2020-05-13" "2020-05-14" "2020-05-15" "2020-05-16"
 [71] "2020-05-17" "2020-05-18" "2020-05-19" "2020-05-20" "2020-05-29"
 [76] "2020-05-21" "2020-05-22" "2020-05-23" "2020-06-01" "2020-05-24"
 [81] "2020-05-25" "2020-05-26" "2020-05-27" "2020-05-28" "2020-05-30"
 [86] "2020-05-31" "2020-06-03" "2020-06-02" "2020-06-05" "2020-06-04"
 [91] "2020-06-06" "2020-06-07" "2020-06-08" "2020-06-28" "2020-06-09"
 [96] "2020-06-10" "2020-06-11" "2020-06-12" "2020-06-16" "2020-06-13"
[101] "2020-06-14" "2020-06-15" "2020-06-17" "2020-06-20" "2020-06-25"
[106] "2020-06-18" "2020-06-23" "2020-06-19" "2020-07-02" "2020-06-21"
[111] "2020-06-29" "2020-06-24" "2020-06-22" "2020-06-26" "2020-06-27"
[116] "2020-06-30" "2020-07-01" "2020-07-03" "2020-07-04"
  [1] "19"  "34"  "50"  "55"  "25"  "27"  "85"  "22"  "28"  "36"  "42"  "74" 
 [13] "68"  "48"  "30"  "61"  "73"  "54"  "26"  "23"  "18"  "49"  "65"  "59" 
 [25] "72"  "45"  "29"  "21"  "79"  "52"  "71"  "24"  "44"  "38"  "31"  "41" 
 [37] "67"  "62"  "58"  "37"  "20"  "32"  "64"  "40"  "46"  "39"  "9"   "53" 
 [49] "56"  "51"  "69"  "16"  "57"  "60"  "33"  "76"  "47"  "35"  "88"  "70" 
 [61] "81"  "17"  "63"  "80"  "84"  "87"  "83"  "43"  "77"  "15"  "66"  "3"  
 [73] "82"  "12"  "8"   "1"   "5"   "6"   "75"  "2"   "0"   "13"  "4"   "78" 
 [85] "10"  "94"  "7"   "95"  "11"  "93"  "92"  "90"  "97"  "91"  "86"  "14" 
 [97] "96"  "98"  "89"  "103" "100" "99"  "102" "106" "101" "104" "111"
[1] "2020-03-06"
[1] "2020-03-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-31"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-14"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-15"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-16"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-17"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-18"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-19"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-14"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-15"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-16"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-17"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-18"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-19"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-31"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-14"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-15"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-16"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-17"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-18"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-19"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
Joining, by = "Region"
# A tibble: 1 x 3
  Region  Cases Deaths
  <chr>   <dbl>  <dbl>
1 All    110773   3928
Adding missing grouping variables: `Region`
# A tibble: 24 x 3
# Groups:   Region [12]
   Region    Measure Value
   <chr>     <chr>   <dbl>
 1 Amazonas  Cases    2254
 2 Amazonas  Deaths     89
 3 Atlantico Cases   25128
 4 Atlantico Deaths   1408
 5 Bogota    Cases   35247
 6 Bogota    Deaths    793
 7 Bolivar   Cases    9765
 8 Bolivar   Deaths    399
 9 Choco     Cases    1770
10 Choco     Deaths     53
# ... with 14 more rows
[1] "All"

       Choco      Cordoba Cundinamarca    Magdalena       Nariño  Santa Marta 
        2870         2870         5330         8610        17630         1640 
       Sucre 
        4510 
Auto-refreshing stale OAuth token.
Writing to "Colombia input"
Writing to sheet "database"
Writing to "Colombia_Bogota input"
Writing to sheet "database"
Writing to "Colombia_Atlantico input"
Writing to sheet "database"
Writing to "Colombia_Bolivar input"
Writing to sheet "database"
Writing to "Colombia_Valle del Cauca input"
Writing to sheet "database"
Writing to "Colombia_Amazonas input"
Writing to sheet "database"
Writing to "Colombia_others input"
Writing to sheet "database"
Auto-refreshing stale OAuth token.
Created Drive file:
  * CO05.07.2020cases&deaths: 1qd-sRBW9_0zTGtKxzKGRFi2-oadevKY_-2vmR_SeiB8
with MIME type:
  * application/vnd.google-apps.spreadsheet
Writing to "CO05.07.2020cases&deaths"
Writing to sheet "cases&deaths_age_sex"
Writing to "CO05.07.2020cases&deaths"
Writing to sheet "tests"
Deleting these sheet(s) from "CO05.07.2020cases&deaths":
* Sheet1
-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.3.0     v purrr   0.3.4
v tibble  3.0.1     v dplyr   0.8.5
v tidyr   1.1.0     v stringr 1.4.0
v readr   1.3.1     v forcats 0.5.0
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()
Warnmeldungen:
1: Paket 'tidyverse' wurde unter R Version 3.6.3 erstellt 
2: Paket 'ggplot2' wurde unter R Version 3.6.3 erstellt 
3: Paket 'tibble' wurde unter R Version 3.6.3 erstellt 
4: Paket 'tidyr' wurde unter R Version 3.6.3 erstellt 
5: Paket 'readr' wurde unter R Version 3.6.3 erstellt 
6: Paket 'purrr' wurde unter R Version 3.6.3 erstellt 
7: Paket 'dplyr' wurde unter R Version 3.6.3 erstellt 
8: Paket 'stringr' wurde unter R Version 3.6.3 erstellt 
9: Paket 'forcats' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'lubridate'

The following objects are masked from 'package:dplyr':

    intersect, setdiff, union

The following objects are masked from 'package:base':

    date, intersect, setdiff, union

Warnmeldung:
Paket 'lubridate' wurde unter R Version 3.6.3 erstellt 
Warnmeldung:
Paket 'googlesheets4' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'googledrive'

The following objects are masked from 'package:googlesheets4':

    request_generate, request_make

Warnmeldung:
Paket 'googledrive' wurde unter R Version 3.6.3 erstellt 
Parsed with column specification:
cols(
  .default = col_character(),
  `ID de caso` = col_double(),
  `Fecha de notificación` = col_datetime(format = ""),
  Edad = col_double(),
  `Fecha de muerte` = col_datetime(format = ""),
  `Fecha diagnostico` = col_datetime(format = ""),
  `Fecha recuperado` = col_datetime(format = ""),
  `fecha reporte web` = col_datetime(format = ""),
  `Codigo departamento` = col_double(),
  `Codigo pais` = col_double()
)
See spec(...) for full column specifications.
Warnung: 2766 parsing failures.
  row               col   expected   actual                                                                        file
 7618 Fecha diagnostico date like  SIN DATO 'https://www.datos.gov.co/api/views/gt2j-8ykr/rows.csv?accessType=DOWNLOAD'
10370 Fecha diagnostico date like  SIN DATO 'https://www.datos.gov.co/api/views/gt2j-8ykr/rows.csv?accessType=DOWNLOAD'
11699 Fecha diagnostico date like  SIN DATO 'https://www.datos.gov.co/api/views/gt2j-8ykr/rows.csv?accessType=DOWNLOAD'
13281 Fecha diagnostico date like  SIN DATO 'https://www.datos.gov.co/api/views/gt2j-8ykr/rows.csv?accessType=DOWNLOAD'
22982 Fecha diagnostico date like  SIN DATO 'https://www.datos.gov.co/api/views/gt2j-8ykr/rows.csv?accessType=DOWNLOAD'
..... ................. .......... ........ ...........................................................................
See problems(...) for more details.

Parsed with column specification:
cols(
  .default = col_double(),
  Fecha = col_character(),
  `Positividad acumulada` = col_number()
)
See spec(...) for full column specifications.
[1] "Leve"         "Asintomático" "Fallecido"    "Moderado"     "Grave"       
[6] "N/A"         
 [1] "Bogotá D.C."                                            
 [2] "Valle del Cauca"                                        
 [3] "Antioquia"                                              
 [4] "Cartagena D.T. y C."                                    
 [5] "Huila"                                                  
 [6] "Meta"                                                   
 [7] "Risaralda"                                              
 [8] "Norte de Santander"                                     
 [9] "Caldas"                                                 
[10] "Cundinamarca"                                           
[11] "Barranquilla D.E."                                      
[12] "Santander"                                              
[13] "Quindío"                                                
[14] "Tolima"                                                 
[15] "Cauca"                                                  
[16] "Santa Marta D.T. y C."                                  
[17] "Cesar"                                                  
[18] "Archipiélago de San Andrés Providencia y Santa Catalina"
[19] "Casanare"                                               
[20] "Nariño"                                                 
[21] "Atlántico"                                              
[22] "Boyacá"                                                 
[23] "Córdoba"                                                
[24] "Bolívar"                                                
[25] "Sucre"                                                  
[26] "Magdalena"                                              
[27] "La Guajira"                                             
[28] "Buenaventura D.E."                                      
[29] "Chocó"                                                  
[30] "Amazonas"                                               
[31] "Caquetá"                                                
[32] "Putumayo"                                               
[33] "Arauca"                                                 
[34] "Vaupés"                                                 
[35] "Guainía"                                                
[36] "Vichada"                                                
[37] "Guaviare"                                               
[1] "M" "F"
  [1] "2020-04-05" "2020-04-06" "2020-03-23" "2020-03-22" "2020-03-16"
  [6] "2020-03-26" "2020-03-25" "2020-04-04" "2020-04-15" "2020-04-09"
 [11] "2020-03-30" "2020-03-28" "2020-06-10" "2020-04-02" "2020-04-08"
 [16] "2020-03-27" "2020-04-12" "2020-04-03" "2020-04-24" "2020-04-21"
 [21] "2020-04-07" "2020-04-14" "2020-04-01" "2020-04-19" "2020-03-31"
 [26] "2020-04-10" "2020-04-18" "2020-04-11" "2020-03-29" "2020-04-28"
 [31] "2020-05-04" "2020-04-17" "2020-04-16" "2020-04-13" "2020-04-25"
 [36] "2020-03-24" "2020-05-01" "2020-05-31" "2020-04-29" "2020-05-11"
 [41] "2020-04-27" "2020-04-20" "2020-04-26" "2020-05-09" "2020-04-22"
 [46] "2020-05-07" "2020-04-23" "2020-05-02" "2020-04-30" "2020-05-06"
 [51] "2020-06-03" "2020-05-23" "2020-06-05" "2020-05-05" "2020-05-18"
 [56] "2020-05-03" "2020-05-08" "2020-05-17" "2020-05-29" "2020-05-22"
 [61] "2020-05-21" "2020-05-13" "2020-05-27" "2020-05-10" "2020-05-12"
 [66] "2020-06-02" "2020-06-29" "2020-05-28" "2020-06-01" "2020-05-15"
 [71] "2020-05-20" "2020-06-16" "2020-06-06" "2020-06-12" "2020-06-13"
 [76] "2020-05-26" "2020-05-14" "2020-05-19" "2020-05-30" "2020-05-24"
 [81] "2020-05-16" "2020-06-09" "2020-06-07" "2020-05-25" "2020-06-19"
 [86] "2020-06-14" "2020-06-25" "2020-06-17" "2020-06-15" "2020-06-08"
 [91] "2020-06-04" "2020-06-23" "2020-06-30" "2020-06-24" "2020-06-18"
 [96] "2020-06-21" "2020-06-11" "2020-06-22" "2020-06-20" "2020-07-01"
[101] "2020-07-03" "2020-06-27" "2020-06-26" "2020-07-02" "2020-06-28"
[106] "2020-07-04"
 [1] "Amazonas"        "Antioquia"       "Atlantico"       "Bogota"         
 [5] "Bolivar"         "Boyaca"          "Caldas"          "Caqueta"        
 [9] "Cauca"           "Cesar"           "Choco"           "Cordoba"        
[13] "Cundinamarca"    "Guainia"         "Guajira"         "Huila"          
[17] "Magdalena"       "Meta"            "Nariño"          "Nte Santander"  
[21] "Putumayo"        "Quindio"         "Risaralda"       "Santa Marta"    
[25] "Santander"       "Sucre"           "Tolima"          "Valle del Cauca"
[29] "Vaupes"         
 [1] "Bogota"          "Valle del Cauca" "resto"           "Bolivar"        
 [5] "Cundinamarca"    "Atlantico"       "Santa Marta"     "Nariño"         
 [9] "Cordoba"         "Sucre"           "Magdalena"       "Choco"          
[13] "Amazonas"       
# A tibble: 2 x 2
  Measure `sum(Value)`
  <chr>          <dbl>
1 Cases         117110
2 Deaths          4051
# A tibble: 26 x 3
# Groups:   Region [13]
   Region    Measure `sum(Value)`
   <chr>     <chr>          <dbl>
 1 Amazonas  Cases           2364
 2 Amazonas  Deaths            89
 3 Atlantico Cases          27251
 4 Atlantico Deaths          1459
 5 Bogota    Cases          36554
 6 Bogota    Deaths           822
 7 Bolivar   Cases          10494
 8 Bolivar   Deaths           404
 9 Choco     Cases           1869
10 Choco     Deaths            55
# ... with 16 more rows
[1] "f" "m"
 [1] "Bogota"          "Valle del Cauca" "resto"           "Bolivar"        
 [5] "Cundinamarca"    "Atlantico"       "Santa Marta"     "Nariño"         
 [9] "Cordoba"         "Sucre"           "Magdalena"       "Choco"          
[13] "Amazonas"       
  [1] "2020-03-06" "2020-03-09" "2020-03-11" "2020-03-12" "2020-03-13"
  [6] "2020-03-14" "2020-03-15" "2020-03-16" "2020-03-17" "2020-03-18"
 [11] "2020-03-19" "2020-03-20" "2020-03-21" "2020-03-22" "2020-03-23"
 [16] "2020-03-24" "2020-03-27" "2020-03-25" "2020-03-26" "2020-03-28"
 [21] "2020-03-29" "2020-03-30" "2020-03-31" "2020-04-01" "2020-04-02"
 [26] "2020-04-03" "2020-04-04" "2020-04-05" "2020-04-06" "2020-04-07"
 [31] "2020-04-08" "2020-04-09" "2020-04-10" "2020-04-11" "2020-04-12"
 [36] "2020-04-13" "2020-04-14" "2020-04-19" "2020-04-15" "2020-04-28"
 [41] "2020-04-16" "2020-04-17" "2020-04-18" "2020-04-20" "2020-04-22"
 [46] "2020-04-21" "2020-04-23" "2020-05-01" "2020-04-24" "2020-05-05"
 [51] "2020-04-25" "2020-04-26" "2020-04-27" "2020-04-29" "2020-04-30"
 [56] "2020-05-02" "2020-05-04" "2020-05-03" NA           "2020-05-06"
 [61] "2020-05-07" "2020-05-08" "2020-05-09" "2020-05-10" "2020-05-11"
 [66] "2020-05-12" "2020-05-13" "2020-05-14" "2020-05-15" "2020-05-16"
 [71] "2020-05-17" "2020-05-18" "2020-05-19" "2020-05-20" "2020-05-29"
 [76] "2020-05-21" "2020-05-22" "2020-05-23" "2020-06-01" "2020-05-24"
 [81] "2020-05-25" "2020-05-26" "2020-05-27" "2020-05-28" "2020-05-30"
 [86] "2020-05-31" "2020-06-03" "2020-06-02" "2020-06-05" "2020-06-04"
 [91] "2020-06-06" "2020-06-07" "2020-06-08" "2020-06-28" "2020-06-09"
 [96] "2020-06-10" "2020-06-11" "2020-06-12" "2020-06-16" "2020-06-13"
[101] "2020-06-14" "2020-06-15" "2020-06-17" "2020-06-20" "2020-06-25"
[106] "2020-06-18" "2020-06-23" "2020-06-19" "2020-07-02" "2020-06-21"
[111] "2020-06-29" "2020-06-24" "2020-06-22" "2020-06-26" "2020-06-27"
[116] "2020-06-30" "2020-07-01" "2020-07-03" "2020-07-04" "2020-07-05"
  [1] "19"  "34"  "50"  "55"  "25"  "27"  "85"  "22"  "28"  "36"  "42"  "74" 
 [13] "68"  "48"  "30"  "61"  "73"  "54"  "26"  "23"  "18"  "49"  "65"  "59" 
 [25] "72"  "45"  "29"  "21"  "79"  "52"  "71"  "24"  "44"  "38"  "31"  "41" 
 [37] "67"  "62"  "58"  "37"  "20"  "32"  "64"  "40"  "46"  "39"  "9"   "53" 
 [49] "56"  "51"  "69"  "16"  "57"  "60"  "33"  "76"  "47"  "35"  "88"  "70" 
 [61] "81"  "17"  "63"  "80"  "84"  "87"  "83"  "43"  "77"  "15"  "66"  "3"  
 [73] "82"  "12"  "8"   "1"   "5"   "6"   "75"  "2"   "0"   "13"  "4"   "78" 
 [85] "10"  "94"  "7"   "95"  "11"  "93"  "92"  "90"  "97"  "91"  "86"  "14" 
 [97] "96"  "98"  "89"  "103" "100" "99"  "102" "106" "101" "104" "111"
[1] "2020-03-06"
[1] "2020-03-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-31"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-14"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-15"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-16"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-17"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-18"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-19"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-14"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-15"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-16"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-17"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-18"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-19"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-31"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-14"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-15"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-16"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-17"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-18"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-19"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
Joining, by = "Region"
# A tibble: 1 x 3
  Region  Cases Deaths
  <chr>   <dbl>  <dbl>
1 All    114357   4051
Adding missing grouping variables: `Region`
# A tibble: 24 x 3
# Groups:   Region [12]
   Region    Measure Value
   <chr>     <chr>   <dbl>
 1 Amazonas  Cases    2276
 2 Amazonas  Deaths     89
 3 Atlantico Cases   25920
 4 Atlantico Deaths   1459
 5 Bogota    Cases   36522
 6 Bogota    Deaths    822
 7 Bolivar   Cases   10107
 8 Bolivar   Deaths    404
 9 Choco     Cases    1806
10 Choco     Deaths     55
# ... with 14 more rows
[1] "All"

       Choco      Cordoba Cundinamarca    Magdalena       Nariño  Santa Marta 
        3280         3280         5740         9020        18040         2050 
       Sucre 
        4920 
Auto-refreshing stale OAuth token.
Fehler: Client error: (429) RESOURCE_EXHAUSTED
  * Either out of resource quota or reaching rate limiting. The client should look for google.rpc.QuotaFailure error detail for more information.
  * Quota exceeded for quota group 'ReadGroup' and limit 'Read requests per 100 seconds' of service 'sheets.googleapis.com' for consumer 'project_number:603366585132'.

Error details:
  * Error details of type 'google.rpc.Help' are not implemented yet.
  * Workaround: use `tryCatch()` and inspect error payload yourself.
  * Please open an issue at https://github.com/r-lib/gargle/issues, so we can fix.
Backtrace:
    x
 1. \-googlesheets4::write_sheet(...)
 2.   \-googlesheets4::gs4_get(ssid)
 3.     \-googlesheets4:::gs4_get_impl_(as_sheets_id(ss))
 4.       \-gargle::response_process(raw_resp)
 5.         \-gargle:::stop_request_failed(error_message(resp), resp)
Ausführung angehalten
-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.3.0     v purrr   0.3.4
v tibble  3.0.1     v dplyr   0.8.5
v tidyr   1.1.0     v stringr 1.4.0
v readr   1.3.1     v forcats 0.5.0
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()
Warnmeldungen:
1: Paket 'tidyverse' wurde unter R Version 3.6.3 erstellt 
2: Paket 'ggplot2' wurde unter R Version 3.6.3 erstellt 
3: Paket 'tibble' wurde unter R Version 3.6.3 erstellt 
4: Paket 'tidyr' wurde unter R Version 3.6.3 erstellt 
5: Paket 'readr' wurde unter R Version 3.6.3 erstellt 
6: Paket 'purrr' wurde unter R Version 3.6.3 erstellt 
7: Paket 'dplyr' wurde unter R Version 3.6.3 erstellt 
8: Paket 'stringr' wurde unter R Version 3.6.3 erstellt 
9: Paket 'forcats' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'lubridate'

The following objects are masked from 'package:dplyr':

    intersect, setdiff, union

The following objects are masked from 'package:base':

    date, intersect, setdiff, union

Warnmeldung:
Paket 'lubridate' wurde unter R Version 3.6.3 erstellt 
Warnmeldung:
Paket 'googlesheets4' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'googledrive'

The following objects are masked from 'package:googlesheets4':

    request_generate, request_make

Warnmeldung:
Paket 'googledrive' wurde unter R Version 3.6.3 erstellt 
Parsed with column specification:
cols(
  .default = col_character(),
  `ID de caso` = col_double(),
  `Fecha de notificación` = col_datetime(format = ""),
  Edad = col_double(),
  `Fecha de muerte` = col_datetime(format = ""),
  `Fecha diagnostico` = col_datetime(format = ""),
  `Fecha recuperado` = col_datetime(format = ""),
  `fecha reporte web` = col_datetime(format = ""),
  `Codigo departamento` = col_double(),
  `Codigo pais` = col_double()
)
See spec(...) for full column specifications.
Warnung: 13 parsing failures.
   row                   col   expected     actual                                                                        file
116756 Fecha de notificación date like  07/04/2020 'https://www.datos.gov.co/api/views/gt2j-8ykr/rows.csv?accessType=DOWNLOAD'
116757 Fecha de notificación date like  03/04/2020 'https://www.datos.gov.co/api/views/gt2j-8ykr/rows.csv?accessType=DOWNLOAD'
116758 Fecha de notificación date like  08/04/2020 'https://www.datos.gov.co/api/views/gt2j-8ykr/rows.csv?accessType=DOWNLOAD'
116759 Fecha de notificación date like  20/04/2020 'https://www.datos.gov.co/api/views/gt2j-8ykr/rows.csv?accessType=DOWNLOAD'
116760 Fecha de notificación date like  15/04/2020 'https://www.datos.gov.co/api/views/gt2j-8ykr/rows.csv?accessType=DOWNLOAD'
...... ..................... .......... .......... ...........................................................................
See problems(...) for more details.

Parsed with column specification:
cols(
  .default = col_double(),
  Fecha = col_character(),
  `Positividad acumulada` = col_number()
)
See spec(...) for full column specifications.
[1] "Leve"         "Asintomático" "Fallecido"    "Moderado"     "Grave"       
[6] "N/A"          "LEVE"        
 [1] "Bogotá D.C."                                            
 [2] "Valle del Cauca"                                        
 [3] "Antioquia"                                              
 [4] "Cartagena D.T. y C."                                    
 [5] "Huila"                                                  
 [6] "Meta"                                                   
 [7] "Risaralda"                                              
 [8] "Norte de Santander"                                     
 [9] "Caldas"                                                 
[10] "Cundinamarca"                                           
[11] "Barranquilla D.E."                                      
[12] "Santander"                                              
[13] "Quindío"                                                
[14] "Tolima"                                                 
[15] "Cauca"                                                  
[16] "Santa Marta D.T. y C."                                  
[17] "Cesar"                                                  
[18] "Archipiélago de San Andrés Providencia y Santa Catalina"
[19] "Casanare"                                               
[20] "Nariño"                                                 
[21] "Atlántico"                                              
[22] "Boyacá"                                                 
[23] "Córdoba"                                                
[24] "Bolívar"                                                
[25] "Sucre"                                                  
[26] "Magdalena"                                              
[27] "La Guajira"                                             
[28] "Buenaventura D.E."                                      
[29] "Chocó"                                                  
[30] "Amazonas"                                               
[31] "Caquetá"                                                
[32] "Putumayo"                                               
[33] "Arauca"                                                 
[34] "Vaupés"                                                 
[35] "Guainía"                                                
[36] "Vichada"                                                
[37] "Guaviare"                                               
[1] "M" "F"
  [1] "2020-04-05" "2020-04-06" "2020-03-23" "2020-03-22" "2020-03-16"
  [6] "2020-03-26" "2020-03-25" "2020-04-04" "2020-04-15" "2020-04-09"
 [11] "2020-03-30" "2020-03-28" "2020-06-10" "2020-04-02" "2020-04-08"
 [16] "2020-03-27" "2020-04-12" "2020-04-03" "2020-04-24" "2020-04-21"
 [21] "2020-04-07" "2020-04-14" "2020-04-01" "2020-04-19" "2020-03-31"
 [26] "2020-04-10" "2020-04-18" "2020-04-11" "2020-03-29" "2020-04-28"
 [31] "2020-05-04" "2020-04-17" "2020-04-16" "2020-04-13" "2020-04-25"
 [36] "2020-03-24" "2020-05-01" "2020-05-31" "2020-04-29" "2020-05-11"
 [41] "2020-04-27" "2020-04-20" "2020-04-26" "2020-05-09" "2020-04-22"
 [46] "2020-05-07" "2020-04-23" "2020-05-02" "2020-04-30" "2020-05-06"
 [51] "2020-06-03" "2020-05-23" "2020-06-05" "2020-05-05" "2020-05-18"
 [56] "2020-05-03" "2020-05-08" "2020-05-17" "2020-05-29" "2020-05-22"
 [61] "2020-05-21" "2020-05-13" "2020-05-27" "2020-05-10" "2020-05-12"
 [66] "2020-06-02" "2020-06-29" "2020-05-28" "2020-06-01" "2020-05-15"
 [71] "2020-05-20" "2020-06-16" "2020-06-06" "2020-06-12" "2020-06-13"
 [76] "2020-05-26" "2020-05-14" "2020-05-19" "2020-05-30" "2020-05-24"
 [81] "2020-05-16" "2020-06-09" "2020-06-07" "2020-05-25" "2020-06-19"
 [86] "2020-06-14" "2020-06-25" "2020-06-17" "2020-06-15" "2020-06-08"
 [91] "2020-06-24" "2020-06-04" "2020-06-23" "2020-06-30" "2020-06-18"
 [96] "2020-07-02" "2020-06-21" "2020-06-11" "2020-06-22" "2020-06-20"
[101] "2020-07-01" "2020-07-03" "2020-06-27" NA           "2020-06-26"
[106] "2020-06-28" "2020-07-05" "2020-07-04" "2020-07-06"
 [1] "Amazonas"        "Antioquia"       "Atlantico"       "Bogota"         
 [5] "Bolivar"         "Boyaca"          "Caldas"          "Caqueta"        
 [9] "Cauca"           "Cesar"           "Choco"           "Cordoba"        
[13] "Cundinamarca"    "Guainia"         "Guajira"         "Huila"          
[17] "Magdalena"       "Meta"            "Nariño"          "Nte Santander"  
[21] "Putumayo"        "Quindio"         "Risaralda"       "Santa Marta"    
[25] "Santander"       "Sucre"           "Tolima"          "Valle del Cauca"
[29] "Vaupes"         
 [1] "Bogota"          "Valle del Cauca" "Antioquia"       "Bolivar"        
 [5] "resto"           "Cundinamarca"    "Atlantico"       "Santa Marta"    
 [9] "Nariño"          "Cordoba"         "Sucre"           "Magdalena"      
[13] "Choco"           "Amazonas"       
# A tibble: 2 x 2
  Measure `sum(Value)`
  <chr>          <dbl>
1 Cases         120281
2 Deaths          4208
# A tibble: 28 x 3
# Groups:   Region [14]
   Region    Measure `sum(Value)`
   <chr>     <chr>          <dbl>
 1 Amazonas  Cases           2384
 2 Amazonas  Deaths            96
 3 Antioquia Cases           6385
 4 Antioquia Deaths            53
 5 Atlantico Cases          27920
 6 Atlantico Deaths          1520
 7 Bogota    Cases          37641
 8 Bogota    Deaths           858
 9 Bolivar   Cases          10723
10 Bolivar   Deaths           411
# ... with 18 more rows
[1] "f" "m"
 [1] "Bogota"          "Valle del Cauca" "Antioquia"       "Bolivar"        
 [5] "resto"           "Cundinamarca"    "Atlantico"       "Santa Marta"    
 [9] "Nariño"          "Cordoba"         "Sucre"           "Magdalena"      
[13] "Choco"           "Amazonas"       
  [1] "2020-03-06" "2020-03-09" "2020-03-11" "2020-03-12" "2020-03-13"
  [6] "2020-03-14" "2020-03-15" "2020-03-16" "2020-03-17" "2020-03-18"
 [11] "2020-03-19" "2020-03-20" "2020-03-21" "2020-03-22" "2020-03-23"
 [16] "2020-03-24" "2020-03-27" "2020-03-25" "2020-03-26" "2020-03-28"
 [21] "2020-03-29" "2020-03-30" "2020-03-31" "2020-04-01" "2020-04-02"
 [26] "2020-04-03" "2020-04-04" "2020-04-05" "2020-04-06" "2020-04-07"
 [31] "2020-04-08" "2020-04-09" "2020-04-10" "2020-04-11" "2020-04-12"
 [36] "2020-04-13" "2020-04-14" "2020-04-19" "2020-04-15" "2020-04-28"
 [41] "2020-04-16" "2020-04-17" "2020-04-18" "2020-04-20" "2020-04-22"
 [46] "2020-04-21" "2020-04-23" "2020-05-01" "2020-04-24" "2020-05-05"
 [51] "2020-04-25" "2020-04-26" "2020-04-27" "2020-04-29" "2020-04-30"
 [56] "2020-05-02" "2020-05-04" "2020-05-03" "1899-12-31" "2020-05-06"
 [61] "2020-05-07" "2020-05-08" "2020-05-09" "2020-05-10" "2020-05-11"
 [66] "2020-05-12" "2020-05-13" "2020-05-14" "2020-05-15" "2020-05-16"
 [71] "2020-05-17" "2020-05-18" "2020-05-19" "2020-05-20" "2020-05-29"
 [76] "2020-05-21" "2020-05-22" "2020-05-23" "2020-06-01" "2020-05-24"
 [81] "2020-05-25" "2020-05-26" "2020-05-27" "2020-05-28" "2020-05-30"
 [86] "2020-05-31" "2020-06-03" "2020-06-02" "2020-06-05" "2020-06-04"
 [91] "2020-06-06" "2020-06-07" "2020-06-08" "2020-06-28" "2020-06-09"
 [96] "2020-06-10" "2020-06-11" "2020-06-12" "2020-06-16" "2020-06-13"
[101] "2020-06-14" "2020-06-15" "2020-06-17" "2020-06-20" "2020-06-25"
[106] "2020-06-18" "2020-06-23" "2020-06-19" "2020-07-02" "2020-06-21"
[111] "2020-06-29" "2020-06-24" "2020-06-22" "2020-06-26" "2020-06-27"
[116] "2020-07-06" "2020-06-30" "2020-07-01" "2020-07-03" "2020-07-04"
[121] "2020-07-05" NA          
  [1] "19"  "34"  "50"  "55"  "25"  "27"  "85"  "22"  "28"  "36"  "42"  "74" 
 [13] "68"  "48"  "30"  "61"  "73"  "54"  "26"  "23"  "18"  "49"  "65"  "59" 
 [25] "72"  "45"  "29"  "21"  "79"  "52"  "71"  "24"  "44"  "38"  "31"  "41" 
 [37] "67"  "62"  "58"  "37"  "20"  "32"  "64"  "40"  "46"  "39"  "9"   "53" 
 [49] "56"  "51"  "69"  "16"  "57"  "60"  "33"  "76"  "47"  "35"  "88"  "70" 
 [61] "81"  "17"  "63"  "80"  "84"  "87"  "83"  "43"  "77"  "15"  "66"  "3"  
 [73] "82"  "12"  "8"   "1"   "5"   "6"   "75"  "2"   "0"   "13"  "4"   "78" 
 [85] "10"  "94"  "7"   "95"  "11"  "93"  "92"  "90"  "97"  "91"  "86"  "14" 
 [97] "96"  "98"  "89"  "103" "100" "99"  "102" "106" "101" "104" "111"
[1] "1899-12-31"
[1] "2020-03-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-31"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-14"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-15"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-16"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-17"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-18"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-19"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-14"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-15"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-16"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-17"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-18"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-19"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-31"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-14"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-15"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-16"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-17"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-18"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-19"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
Joining, by = "Region"
# A tibble: 1 x 3
  Region  Cases Deaths
  <chr>   <dbl>  <dbl>
1 All    120198   4207
Adding missing grouping variables: `Region`
# A tibble: 26 x 3
# Groups:   Region [13]
   Region    Measure Value
   <chr>     <chr>   <dbl>
 1 Amazonas  Cases    2372
 2 Amazonas  Deaths     96
 3 Antioquia Cases    6379
 4 Antioquia Deaths     53
 5 Atlantico Cases   27870
 6 Atlantico Deaths   1519
 7 Bogota    Cases   37641
 8 Bogota    Deaths    858
 9 Bolivar   Cases   10716
10 Bolivar   Deaths    411
# ... with 16 more rows
[1] "All"

   Antioquia        Choco      Cordoba Cundinamarca    Magdalena       Nariño 
        1230         3690         3690         6150         9430        18450 
 Santa Marta        Sucre 
        2870         5330 
Auto-refreshing stale OAuth token.
Writing to "Colombia input"
Writing to sheet "database"
Writing to "Colombia_Bogota input"
Writing to sheet "database"
Writing to "Colombia_Atlantico input"
Writing to sheet "database"
Writing to "Colombia_Bolivar input"
Writing to sheet "database"
Writing to "Colombia_Valle del Cauca input"
Writing to sheet "database"
Writing to "Colombia_Amazonas input"
Writing to sheet "database"
Writing to "Colombia_others input"
Writing to sheet "database"
Auto-refreshing stale OAuth token.
Created Drive file:
  * CO07.07.2020cases&deaths: 1aeoTXdVUlxxjGF-WB24mPsvd6qHU0b3lK5vfw9eLg6s
with MIME type:
  * application/vnd.google-apps.spreadsheet
Writing to "CO07.07.2020cases&deaths"
Writing to sheet "cases&deaths_age_sex"
Writing to "CO07.07.2020cases&deaths"
Fehler: Expected content type 'application/json' not 'text/html'.
<!DOCTYPE html>
<html lang=en>
  <meta charset=utf-8>
  <meta name=viewport content="initial-scale=1, minimum-scale=1, width=device-width">
  <title>Error 502 (Server Error)!!1</title>
  <style>
  ...
Ausführung angehalten
-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.3.0     v purrr   0.3.4
v tibble  3.0.1     v dplyr   0.8.5
v tidyr   1.1.0     v stringr 1.4.0
v readr   1.3.1     v forcats 0.5.0
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()
Warnmeldungen:
1: Paket 'tidyverse' wurde unter R Version 3.6.3 erstellt 
2: Paket 'ggplot2' wurde unter R Version 3.6.3 erstellt 
3: Paket 'tibble' wurde unter R Version 3.6.3 erstellt 
4: Paket 'tidyr' wurde unter R Version 3.6.3 erstellt 
5: Paket 'readr' wurde unter R Version 3.6.3 erstellt 
6: Paket 'purrr' wurde unter R Version 3.6.3 erstellt 
7: Paket 'dplyr' wurde unter R Version 3.6.3 erstellt 
8: Paket 'stringr' wurde unter R Version 3.6.3 erstellt 
9: Paket 'forcats' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'lubridate'

The following objects are masked from 'package:dplyr':

    intersect, setdiff, union

The following objects are masked from 'package:base':

    date, intersect, setdiff, union

Warnmeldung:
Paket 'lubridate' wurde unter R Version 3.6.3 erstellt 
Warnmeldung:
Paket 'googlesheets4' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'googledrive'

The following objects are masked from 'package:googlesheets4':

    request_generate, request_make

Warnmeldung:
Paket 'googledrive' wurde unter R Version 3.6.3 erstellt 
Parsed with column specification:
cols(
  .default = col_character(),
  `ID de caso` = col_double(),
  `Fecha de notificación` = col_datetime(format = ""),
  Edad = col_double(),
  `Fecha de muerte` = col_datetime(format = ""),
  `Fecha diagnostico` = col_datetime(format = ""),
  `Fecha recuperado` = col_datetime(format = ""),
  `fecha reporte web` = col_datetime(format = ""),
  `Codigo departamento` = col_double(),
  `Codigo pais` = col_double()
)
See spec(...) for full column specifications.
Warnung: 2945 parsing failures.
  row               col   expected   actual                                                                        file
 7618 Fecha diagnostico date like  SIN DATO 'https://www.datos.gov.co/api/views/gt2j-8ykr/rows.csv?accessType=DOWNLOAD'
10370 Fecha diagnostico date like  SIN DATO 'https://www.datos.gov.co/api/views/gt2j-8ykr/rows.csv?accessType=DOWNLOAD'
11699 Fecha diagnostico date like  SIN DATO 'https://www.datos.gov.co/api/views/gt2j-8ykr/rows.csv?accessType=DOWNLOAD'
13281 Fecha diagnostico date like  SIN DATO 'https://www.datos.gov.co/api/views/gt2j-8ykr/rows.csv?accessType=DOWNLOAD'
17966 Fecha diagnostico date like  SIN DATO 'https://www.datos.gov.co/api/views/gt2j-8ykr/rows.csv?accessType=DOWNLOAD'
..... ................. .......... ........ ...........................................................................
See problems(...) for more details.

Parsed with column specification:
cols(
  .default = col_double(),
  Fecha = col_character(),
  `Positividad acumulada` = col_number()
)
See spec(...) for full column specifications.
[1] "Leve"         "Asintomático" "Fallecido"    "Moderado"     "Grave"       
[6] "N/A"         
 [1] "Bogotá D.C."                                            
 [2] "Valle del Cauca"                                        
 [3] "Antioquia"                                              
 [4] "Cartagena D.T. y C."                                    
 [5] "Huila"                                                  
 [6] "Meta"                                                   
 [7] "Risaralda"                                              
 [8] "Norte de Santander"                                     
 [9] "Caldas"                                                 
[10] "Cundinamarca"                                           
[11] "Barranquilla D.E."                                      
[12] "Santander"                                              
[13] "Quindío"                                                
[14] "Tolima"                                                 
[15] "Cauca"                                                  
[16] "Santa Marta D.T. y C."                                  
[17] "Cesar"                                                  
[18] "Archipiélago de San Andrés Providencia y Santa Catalina"
[19] "Casanare"                                               
[20] "Nariño"                                                 
[21] "Atlántico"                                              
[22] "Boyacá"                                                 
[23] "Córdoba"                                                
[24] "Bolívar"                                                
[25] "Sucre"                                                  
[26] "Magdalena"                                              
[27] "La Guajira"                                             
[28] "Buenaventura D.E."                                      
[29] "Chocó"                                                  
[30] "Amazonas"                                               
[31] "Caquetá"                                                
[32] "Putumayo"                                               
[33] "Arauca"                                                 
[34] "Vaupés"                                                 
[35] "Guainía"                                                
[36] "Vichada"                                                
[37] "Guaviare"                                               
[1] "M" "F"
  [1] "2020-04-05" "2020-04-06" "2020-03-23" "2020-03-22" "2020-03-16"
  [6] "2020-03-26" "2020-03-25" "2020-04-04" "2020-04-15" "2020-04-09"
 [11] "2020-03-30" "2020-03-28" "2020-06-10" "2020-04-02" "2020-04-08"
 [16] "2020-03-27" "2020-04-12" "2020-04-03" "2020-04-24" "2020-04-21"
 [21] "2020-04-07" "2020-04-14" "2020-04-01" "2020-04-19" "2020-03-31"
 [26] "2020-04-10" "2020-04-18" "2020-04-11" "2020-03-29" "2020-04-28"
 [31] "2020-05-04" "2020-04-17" "2020-04-16" "2020-04-13" "2020-04-25"
 [36] "2020-03-24" "2020-05-01" "2020-05-31" "2020-04-29" "2020-05-11"
 [41] "2020-04-27" "2020-04-20" "2020-04-26" "2020-05-09" "2020-04-22"
 [46] "2020-05-07" "2020-04-23" "2020-05-02" "2020-04-30" "2020-05-06"
 [51] "2020-06-03" "2020-05-23" "2020-06-05" "2020-05-05" "2020-05-18"
 [56] "2020-05-03" "2020-05-08" "2020-05-17" "2020-05-29" "2020-05-22"
 [61] "2020-05-21" "2020-05-13" "2020-05-27" "2020-05-10" "2020-05-12"
 [66] "2020-06-02" "2020-06-29" "2020-05-28" "2020-06-01" "2020-05-15"
 [71] "2020-05-20" "2020-06-16" "2020-06-06" "2020-06-12" "2020-06-13"
 [76] "2020-05-26" "2020-05-14" "2020-05-19" "2020-05-30" "2020-05-24"
 [81] "2020-05-16" "2020-06-09" "2020-06-07" "2020-05-25" "2020-06-19"
 [86] "2020-06-14" "2020-06-25" "2020-06-17" "2020-06-15" "2020-06-08"
 [91] "2020-06-24" "2020-06-04" "2020-06-23" "2020-07-06" "2020-06-30"
 [96] "2020-06-18" "2020-07-02" "2020-06-21" "2020-06-11" "2020-06-22"
[101] "2020-06-20" "2020-07-01" "2020-07-03" "2020-06-27" "2020-06-26"
[106] "2020-06-28" "2020-07-05" "2020-07-04" "2020-07-07"
 [1] "Amazonas"        "Antioquia"       "Atlantico"       "Bogota"         
 [5] "Bolivar"         "Boyaca"          "Caldas"          "Caqueta"        
 [9] "Cauca"           "Cesar"           "Choco"           "Cordoba"        
[13] "Cundinamarca"    "Guainia"         "Guajira"         "Huila"          
[17] "Magdalena"       "Meta"            "Nariño"          "Nte Santander"  
[21] "Putumayo"        "Quindio"         "Risaralda"       "Santa Marta"    
[25] "Santander"       "Sucre"           "Tolima"          "Valle del Cauca"
[29] "Vaupes"         
 [1] "Bogota"          "Valle del Cauca" "Antioquia"       "Bolivar"        
 [5] "resto"           "Cundinamarca"    "Atlantico"       "Santa Marta"    
 [9] "Nariño"          "Cordoba"         "Sucre"           "Magdalena"      
[13] "Choco"           "Amazonas"       
# A tibble: 2 x 2
  Measure `sum(Value)`
  <chr>          <dbl>
1 Cases         124494
2 Deaths          4357
# A tibble: 28 x 3
# Groups:   Region [14]
   Region    Measure `sum(Value)`
   <chr>     <chr>          <dbl>
 1 Amazonas  Cases           2391
 2 Amazonas  Deaths            98
 3 Antioquia Cases           6773
 4 Antioquia Deaths            57
 5 Atlantico Cases          28732
 6 Atlantico Deaths          1591
 7 Bogota    Cases          39248
 8 Bogota    Deaths           880
 9 Bolivar   Cases          10945
10 Bolivar   Deaths           417
# ... with 18 more rows
[1] "f" "m"
 [1] "Bogota"          "Valle del Cauca" "Antioquia"       "Bolivar"        
 [5] "resto"           "Cundinamarca"    "Atlantico"       "Santa Marta"    
 [9] "Nariño"          "Cordoba"         "Sucre"           "Magdalena"      
[13] "Choco"           "Amazonas"       
  [1] "2020-03-06" "2020-03-09" "2020-03-11" "2020-03-12" "2020-03-13"
  [6] "2020-03-14" "2020-03-15" "2020-03-16" "2020-03-17" "2020-03-18"
 [11] "2020-03-19" "2020-03-20" "2020-03-21" "2020-03-22" "2020-03-23"
 [16] "2020-03-24" "2020-03-27" "2020-03-25" "2020-03-26" "2020-03-28"
 [21] "2020-03-29" "2020-03-30" "2020-03-31" "2020-04-01" "2020-04-02"
 [26] "2020-04-03" "2020-04-04" "2020-04-05" "2020-04-06" "2020-04-07"
 [31] "2020-04-08" "2020-04-09" "2020-04-10" "2020-04-11" "2020-04-12"
 [36] "2020-04-13" "2020-04-14" "2020-04-19" "2020-04-15" "2020-04-28"
 [41] "2020-04-16" "2020-04-17" "2020-04-18" "2020-04-20" "2020-04-22"
 [46] "2020-04-21" "2020-04-23" "2020-05-01" "2020-04-24" "2020-05-05"
 [51] "2020-04-25" "2020-04-26" "2020-04-27" "2020-04-29" "2020-04-30"
 [56] "2020-05-02" "2020-05-04" "2020-05-03" NA           "2020-05-06"
 [61] "2020-05-07" "2020-05-08" "2020-05-09" "2020-05-10" "2020-05-11"
 [66] "2020-05-12" "2020-05-13" "2020-07-05" "2020-05-14" "2020-05-15"
 [71] "2020-05-16" "2020-05-17" "2020-05-18" "2020-05-19" "2020-05-20"
 [76] "2020-05-29" "2020-05-21" "2020-05-22" "2020-07-07" "2020-05-23"
 [81] "2020-06-01" "2020-05-24" "2020-05-25" "2020-05-26" "2020-05-27"
 [86] "2020-05-28" "2020-05-30" "2020-05-31" "2020-06-03" "2020-06-02"
 [91] "2020-06-05" "2020-06-04" "2020-06-06" "2020-06-07" "2020-06-08"
 [96] "2020-06-28" "2020-06-09" "2020-06-10" "2020-06-11" "2020-06-12"
[101] "2020-06-16" "2020-06-13" "2020-06-14" "2020-06-15" "2020-06-17"
[106] "2020-06-20" "2020-06-25" "2020-06-18" "2020-06-23" "2020-06-19"
[111] "2020-07-02" "2020-06-21" "2020-06-29" "2020-06-24" "2020-06-22"
[116] "2020-06-26" "2020-06-27" "2020-07-06" "2020-06-30" "2020-07-01"
[121] "2020-07-03" "2020-07-04"
  [1] "19"  "34"  "50"  "55"  "25"  "27"  "85"  "22"  "28"  "36"  "42"  "74" 
 [13] "68"  "48"  "30"  "61"  "73"  "54"  "26"  "23"  "18"  "49"  "65"  "59" 
 [25] "72"  "45"  "29"  "21"  "79"  "52"  "71"  "24"  "44"  "38"  "31"  "41" 
 [37] "67"  "62"  "58"  "37"  "20"  "32"  "64"  "40"  "46"  "39"  "9"   "53" 
 [49] "56"  "51"  "69"  "16"  "57"  "60"  "33"  "76"  "47"  "35"  "88"  "70" 
 [61] "81"  "17"  "63"  "80"  "84"  "87"  "83"  "43"  "77"  "15"  "66"  "3"  
 [73] "82"  "12"  "8"   "1"   "5"   "6"   "75"  "2"   "0"   "13"  "4"   "78" 
 [85] "10"  "94"  "7"   "95"  "11"  "93"  "92"  "90"  "97"  "91"  "86"  "14" 
 [97] "96"  "98"  "89"  "103" "100" "99"  "102" "106" "101" "104" "111"
[1] "2020-03-06"
[1] "2020-03-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-31"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-14"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-15"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-16"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-17"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-18"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-19"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-14"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-15"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-16"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-17"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-18"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-19"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-31"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-14"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-15"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-16"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-17"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-18"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-19"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
Joining, by = "Region"
# A tibble: 1 x 3
  Region  Cases Deaths
  <chr>   <dbl>  <dbl>
1 All    121549   4357
Adding missing grouping variables: `Region`
# A tibble: 26 x 3
# Groups:   Region [13]
   Region    Measure Value
   <chr>     <chr>   <dbl>
 1 Amazonas  Cases    2288
 2 Amazonas  Deaths     98
 3 Antioquia Cases    6621
 4 Antioquia Deaths     57
 5 Atlantico Cases   27303
 6 Atlantico Deaths   1591
 7 Bogota    Cases   39215
 8 Bogota    Deaths    880
 9 Bolivar   Cases   10535
10 Bolivar   Deaths    417
# ... with 16 more rows
[1] "All"

   Antioquia        Choco      Cordoba Cundinamarca    Magdalena       Nariño 
        1640         4100         4100         6560         9840        18860 
 Santa Marta        Sucre 
        3690         5740 
Auto-refreshing stale OAuth token.
Fehler: Client error: (429) RESOURCE_EXHAUSTED
  * Either out of resource quota or reaching rate limiting. The client should look for google.rpc.QuotaFailure error detail for more information.
  * Quota exceeded for quota group 'ReadGroup' and limit 'Read requests per 100 seconds' of service 'sheets.googleapis.com' for consumer 'project_number:603366585132'.

Error details:
  * Error details of type 'google.rpc.Help' are not implemented yet.
  * Workaround: use `tryCatch()` and inspect error payload yourself.
  * Please open an issue at https://github.com/r-lib/gargle/issues, so we can fix.
Backtrace:
    x
 1. \-googlesheets4::write_sheet(...)
 2.   \-googlesheets4::gs4_get(ssid)
 3.     \-googlesheets4:::gs4_get_impl_(as_sheets_id(ss))
 4.       \-gargle::response_process(raw_resp)
 5.         \-gargle:::stop_request_failed(error_message(resp), resp)
Ausführung angehalten
-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.3.0     v purrr   0.3.4
v tibble  3.0.1     v dplyr   0.8.5
v tidyr   1.1.0     v stringr 1.4.0
v readr   1.3.1     v forcats 0.5.0
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()
Warnmeldungen:
1: Paket 'tidyverse' wurde unter R Version 3.6.3 erstellt 
2: Paket 'ggplot2' wurde unter R Version 3.6.3 erstellt 
3: Paket 'tibble' wurde unter R Version 3.6.3 erstellt 
4: Paket 'tidyr' wurde unter R Version 3.6.3 erstellt 
5: Paket 'readr' wurde unter R Version 3.6.3 erstellt 
6: Paket 'purrr' wurde unter R Version 3.6.3 erstellt 
7: Paket 'dplyr' wurde unter R Version 3.6.3 erstellt 
8: Paket 'stringr' wurde unter R Version 3.6.3 erstellt 
9: Paket 'forcats' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'lubridate'

The following objects are masked from 'package:dplyr':

    intersect, setdiff, union

The following objects are masked from 'package:base':

    date, intersect, setdiff, union

Warnmeldung:
Paket 'lubridate' wurde unter R Version 3.6.3 erstellt 
Warnmeldung:
Paket 'googlesheets4' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'googledrive'

The following objects are masked from 'package:googlesheets4':

    request_generate, request_make

Warnmeldung:
Paket 'googledrive' wurde unter R Version 3.6.3 erstellt 
Parsed with column specification:
cols(
  .default = col_character(),
  `ID de caso` = col_double(),
  `Fecha de notificación` = col_datetime(format = ""),
  Edad = col_double(),
  `Fecha de muerte` = col_datetime(format = ""),
  `Fecha diagnostico` = col_datetime(format = ""),
  `Fecha recuperado` = col_datetime(format = ""),
  `fecha reporte web` = col_datetime(format = ""),
  `Codigo departamento` = col_double(),
  `Codigo pais` = col_double()
)
See spec(...) for full column specifications.
Parsed with column specification:
cols(
  .default = col_double(),
  Fecha = col_character(),
  `Positividad acumulada` = col_number()
)
See spec(...) for full column specifications.
[1] "Leve"         "Asintomático" "Fallecido"    "Moderado"     "Grave"       
[6] "N/A"         
 [1] "Bogotá D.C."                                            
 [2] "Valle del Cauca"                                        
 [3] "Antioquia"                                              
 [4] "Cartagena D.T. y C."                                    
 [5] "Huila"                                                  
 [6] "Meta"                                                   
 [7] "Risaralda"                                              
 [8] "Norte de Santander"                                     
 [9] "Caldas"                                                 
[10] "Cundinamarca"                                           
[11] "Barranquilla D.E."                                      
[12] "Santander"                                              
[13] "Quindío"                                                
[14] "Tolima"                                                 
[15] "Cauca"                                                  
[16] "Santa Marta D.T. y C."                                  
[17] "Cesar"                                                  
[18] "Archipiélago de San Andrés Providencia y Santa Catalina"
[19] "Casanare"                                               
[20] "Nariño"                                                 
[21] "Atlántico"                                              
[22] "Boyacá"                                                 
[23] "Córdoba"                                                
[24] "Bolívar"                                                
[25] "Sucre"                                                  
[26] "Magdalena"                                              
[27] "La Guajira"                                             
[28] "Buenaventura D.E."                                      
[29] "Chocó"                                                  
[30] "Amazonas"                                               
[31] "Caquetá"                                                
[32] "Putumayo"                                               
[33] "Arauca"                                                 
[34] "Vaupés"                                                 
[35] "Guainía"                                                
[36] "Vichada"                                                
[37] "Guaviare"                                               
[1] "M" "F"
  [1] "2020-04-05" "2020-04-06" "2020-03-23" "2020-03-22" "2020-03-16"
  [6] "2020-03-26" "2020-03-25" "2020-04-04" "2020-04-15" "2020-04-09"
 [11] "2020-03-30" "2020-03-28" "2020-06-10" "2020-04-02" "2020-04-08"
 [16] "2020-03-27" "2020-04-12" "2020-04-03" "2020-04-24" "2020-04-21"
 [21] "2020-04-07" "2020-04-14" "2020-04-01" "2020-04-19" "2020-03-31"
 [26] "2020-04-10" "2020-04-18" "2020-04-11" "2020-03-29" "2020-04-28"
 [31] "2020-05-04" "2020-04-17" "2020-04-16" "2020-04-13" "2020-04-25"
 [36] "2020-03-24" "2020-05-01" "2020-05-31" "2020-04-29" "2020-05-11"
 [41] "2020-04-27" "2020-04-20" "2020-04-26" "2020-05-09" "2020-04-22"
 [46] "2020-05-07" "2020-04-23" "2020-05-02" "2020-04-30" "2020-05-06"
 [51] "2020-06-03" "2020-05-23" "2020-06-05" "2020-05-05" "2020-05-18"
 [56] "2020-05-03" "2020-05-08" "2020-05-17" "2020-05-29" "2020-05-22"
 [61] "2020-05-21" "2020-05-13" "2020-05-27" "2020-05-10" "2020-05-12"
 [66] "2020-06-02" "2020-06-29" "2020-05-28" "2020-06-01" "2020-05-15"
 [71] "2020-05-20" "2020-06-16" "2020-06-06" "2020-06-12" "2020-06-13"
 [76] "2020-05-26" "2020-05-14" "2020-05-19" "2020-05-30" "2020-05-24"
 [81] "2020-05-16" "2020-06-09" "2020-06-07" "2020-05-25" "2020-06-19"
 [86] "2020-06-14" "2020-06-25" "2020-06-17" "2020-06-15" "2020-06-08"
 [91] "2020-06-24" "2020-06-04" "2020-06-23" "2020-07-06" "2020-06-30"
 [96] "2020-06-18" "2020-07-02" "2020-06-21" "2020-06-11" "2020-06-22"
[101] "2020-06-20" "2020-07-01" "2020-07-03" "2020-06-27" "2020-06-26"
[106] "2020-07-07" "2020-06-28" "2020-07-05" "2020-07-04" "2020-07-08"
 [1] "Amazonas"        "Antioquia"       "Atlantico"       "Bogota"         
 [5] "Bolivar"         "Boyaca"          "Caldas"          "Caqueta"        
 [9] "Cauca"           "Cesar"           "Choco"           "Cordoba"        
[13] "Cundinamarca"    "Guainia"         "Guajira"         "Huila"          
[17] "Magdalena"       "Meta"            "Nariño"          "Nte Santander"  
[21] "Putumayo"        "Quindio"         "Risaralda"       "Santa Marta"    
[25] "Santander"       "Sucre"           "Tolima"          "Valle del Cauca"
[29] "Vaupes"         
 [1] "Bogota"          "Valle del Cauca" "Antioquia"       "Bolivar"        
 [5] "resto"           "Cundinamarca"    "Atlantico"       "Santa Marta"    
 [9] "Nariño"          "Cordoba"         "Sucre"           "Magdalena"      
[13] "Choco"           "Amazonas"       
# A tibble: 2 x 2
  Measure `sum(Value)`
  <chr>          <dbl>
1 Cases         128638
2 Deaths          4519
# A tibble: 28 x 3
# Groups:   Region [14]
   Region    Measure `sum(Value)`
   <chr>     <chr>          <dbl>
 1 Amazonas  Cases           2394
 2 Amazonas  Deaths            98
 3 Antioquia Cases           7246
 4 Antioquia Deaths            61
 5 Atlantico Cases          29572
 6 Atlantico Deaths          1640
 7 Bogota    Cases          40737
 8 Bogota    Deaths           914
 9 Bolivar   Cases          11254
10 Bolivar   Deaths           427
# ... with 18 more rows
[1] "f" "m"
 [1] "Bogota"          "Valle del Cauca" "Antioquia"       "Bolivar"        
 [5] "resto"           "Cundinamarca"    "Atlantico"       "Santa Marta"    
 [9] "Nariño"          "Cordoba"         "Sucre"           "Magdalena"      
[13] "Choco"           "Amazonas"       
  [1] "2020-03-06" "2020-03-09" "2020-03-11" "2020-03-12" "2020-03-13"
  [6] "2020-03-14" "2020-03-15" "2020-03-16" "2020-03-17" "2020-03-18"
 [11] "2020-03-19" "2020-03-20" "2020-03-21" "2020-03-22" "2020-03-23"
 [16] "2020-03-24" "2020-03-27" "2020-03-25" "2020-03-26" "2020-03-28"
 [21] "2020-03-29" "2020-03-30" "2020-03-31" "2020-04-01" "2020-04-02"
 [26] "2020-04-03" "2020-04-04" "2020-04-05" "2020-04-06" "2020-04-07"
 [31] "2020-04-08" "2020-04-09" "2020-04-10" "2020-04-11" "2020-04-12"
 [36] "2020-04-13" "2020-04-14" "2020-04-19" "2020-04-15" "2020-04-28"
 [41] "2020-04-16" "2020-04-17" "2020-04-18" "2020-04-20" "2020-04-22"
 [46] "2020-04-21" "2020-04-23" "2020-05-01" "2020-04-24" "2020-05-05"
 [51] "2020-04-25" "2020-04-26" "2020-04-27" "2020-04-29" "2020-04-30"
 [56] "2020-05-02" "2020-05-04" "2020-05-03" NA           "2020-05-06"
 [61] "2020-05-07" "2020-05-08" "2020-05-09" "2020-05-10" "2020-05-11"
 [66] "2020-05-12" "2020-05-13" "2020-07-05" "2020-05-14" "2020-05-15"
 [71] "2020-05-16" "2020-05-17" "2020-05-18" "2020-05-19" "2020-05-20"
 [76] "2020-05-29" "2020-05-21" "2020-05-22" "2020-07-07" "2020-05-23"
 [81] "2020-06-01" "2020-05-24" "2020-05-25" "2020-05-26" "2020-05-27"
 [86] "2020-05-28" "2020-05-30" "2020-05-31" "2020-06-03" "2020-06-02"
 [91] "2020-06-05" "2020-06-04" "2020-06-06" "2020-06-07" "2020-06-08"
 [96] "2020-06-28" "2020-06-09" "2020-06-10" "2020-06-11" "2020-06-12"
[101] "2020-06-16" "2020-06-13" "2020-06-14" "2020-06-15" "2020-06-17"
[106] "2020-06-20" "2020-06-25" "2020-06-18" "2020-06-23" "2020-06-19"
[111] "2020-07-02" "2020-06-21" "2020-06-29" "2020-06-24" "2020-06-22"
[116] "2020-06-26" "2020-06-27" "2020-07-06" "2020-06-30" "2020-07-01"
[121] "2020-07-03" "2020-07-04" "2020-07-08"
  [1] "19"  "34"  "50"  "55"  "25"  "27"  "85"  "22"  "28"  "36"  "42"  "74" 
 [13] "68"  "48"  "30"  "61"  "73"  "54"  "26"  "23"  "18"  "49"  "65"  "59" 
 [25] "72"  "45"  "29"  "21"  "79"  "52"  "71"  "24"  "44"  "38"  "31"  "41" 
 [37] "67"  "62"  "58"  "37"  "20"  "32"  "64"  "40"  "46"  "39"  "9"   "53" 
 [49] "56"  "51"  "69"  "16"  "57"  "60"  "33"  "76"  "47"  "35"  "88"  "70" 
 [61] "81"  "17"  "63"  "80"  "84"  "87"  "83"  "43"  "77"  "15"  "66"  "3"  
 [73] "82"  "12"  "8"   "1"   "5"   "6"   "75"  "2"   "0"   "13"  "4"   "78" 
 [85] "10"  "94"  "7"   "95"  "11"  "93"  "92"  "90"  "97"  "91"  "86"  "14" 
 [97] "96"  "98"  "89"  "103" "100" "99"  "102" "106" "101" "104" "111"
[1] "2020-03-06"
[1] "2020-03-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-31"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-14"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-15"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-16"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-17"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-18"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-19"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-14"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-15"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-16"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-17"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-18"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-19"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-31"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-14"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-15"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-16"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-17"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-18"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-19"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
Joining, by = "Region"
# A tibble: 1 x 3
  Region  Cases Deaths
  <chr>   <dbl>  <dbl>
1 All    125674   4519
Adding missing grouping variables: `Region`
# A tibble: 26 x 3
# Groups:   Region [13]
   Region    Measure Value
   <chr>     <chr>   <dbl>
 1 Amazonas  Cases    2291
 2 Amazonas  Deaths     98
 3 Antioquia Cases    7091
 4 Antioquia Deaths     61
 5 Atlantico Cases   28136
 6 Atlantico Deaths   1640
 7 Bogota    Cases   40704
 8 Bogota    Deaths    914
 9 Bolivar   Cases   10841
10 Bolivar   Deaths    427
# ... with 16 more rows
[1] "All"

   Antioquia        Choco      Cordoba Cundinamarca    Magdalena       Nariño 
        2460         4920         4510         6970        10250        19270 
 Santa Marta        Sucre 
        4510         6150 
Auto-refreshing stale OAuth token.
Writing to "Colombia input"
Writing to sheet "database"
Writing to "Colombia_Bogota input"
Writing to sheet "database"
Writing to "Colombia_Atlantico input"
Writing to sheet "database"
Writing to "Colombia_Bolivar input"
Writing to sheet "database"
Writing to "Colombia_Valle del Cauca input"
Writing to sheet "database"
Writing to "Colombia_Amazonas input"
Writing to sheet "database"
Writing to "Colombia_others input"
Writing to sheet "database"
Auto-refreshing stale OAuth token.
Files trashed:
  * CO09.07.2020cases&deaths: 1pl-OJvVG-M8hITWIDfTwu2uWmSHnJ6q1oQZGSfSy2ZM
Created Drive file:
  * CO09.07.2020cases&deaths: 1gpOYJ-vGb9ay5pGXarfAiKoBW919eP_OQqU0ZPgO_0o
with MIME type:
  * application/vnd.google-apps.spreadsheet
Writing to "CO09.07.2020cases&deaths"
Writing to sheet "cases&deaths_age_sex"
Writing to "CO09.07.2020cases&deaths"
Writing to sheet "tests"
Deleting these sheet(s) from "CO09.07.2020cases&deaths":
* Sheet1
-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.3.0     v purrr   0.3.4
v tibble  3.0.1     v dplyr   0.8.5
v tidyr   1.1.0     v stringr 1.4.0
v readr   1.3.1     v forcats 0.5.0
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()
Warnmeldungen:
1: Paket 'tidyverse' wurde unter R Version 3.6.3 erstellt 
2: Paket 'ggplot2' wurde unter R Version 3.6.3 erstellt 
3: Paket 'tibble' wurde unter R Version 3.6.3 erstellt 
4: Paket 'tidyr' wurde unter R Version 3.6.3 erstellt 
5: Paket 'readr' wurde unter R Version 3.6.3 erstellt 
6: Paket 'purrr' wurde unter R Version 3.6.3 erstellt 
7: Paket 'dplyr' wurde unter R Version 3.6.3 erstellt 
8: Paket 'stringr' wurde unter R Version 3.6.3 erstellt 
9: Paket 'forcats' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'lubridate'

The following objects are masked from 'package:dplyr':

    intersect, setdiff, union

The following objects are masked from 'package:base':

    date, intersect, setdiff, union

Warnmeldung:
Paket 'lubridate' wurde unter R Version 3.6.3 erstellt 
Warnmeldung:
Paket 'googlesheets4' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'googledrive'

The following objects are masked from 'package:googlesheets4':

    request_generate, request_make

Warnmeldung:
Paket 'googledrive' wurde unter R Version 3.6.3 erstellt 
Parsed with column specification:
cols(
  .default = col_character(),
  `ID de caso` = col_double(),
  `Fecha de notificación` = col_datetime(format = ""),
  Edad = col_double(),
  `Fecha de muerte` = col_datetime(format = ""),
  `Fecha diagnostico` = col_datetime(format = ""),
  `Fecha recuperado` = col_datetime(format = ""),
  `fecha reporte web` = col_datetime(format = ""),
  `Codigo departamento` = col_double(),
  `Codigo pais` = col_double()
)
See spec(...) for full column specifications.
Parsed with column specification:
cols(
  .default = col_double(),
  Fecha = col_character(),
  `Positividad acumulada` = col_number()
)
See spec(...) for full column specifications.
[1] "Leve"         "Asintomático" "Fallecido"    "Moderado"     "Grave"       
[6] "N/A"         
 [1] "Bogotá D.C."                                            
 [2] "Valle del Cauca"                                        
 [3] "Antioquia"                                              
 [4] "Cartagena D.T. y C."                                    
 [5] "Huila"                                                  
 [6] "Meta"                                                   
 [7] "Risaralda"                                              
 [8] "Norte de Santander"                                     
 [9] "Caldas"                                                 
[10] "Cundinamarca"                                           
[11] "Barranquilla D.E."                                      
[12] "Santander"                                              
[13] "Quindío"                                                
[14] "Tolima"                                                 
[15] "Cauca"                                                  
[16] "Santa Marta D.T. y C."                                  
[17] "Cesar"                                                  
[18] "Archipiélago de San Andrés Providencia y Santa Catalina"
[19] "Casanare"                                               
[20] "Nariño"                                                 
[21] "Atlántico"                                              
[22] "Boyacá"                                                 
[23] "Córdoba"                                                
[24] "Bolívar"                                                
[25] "Sucre"                                                  
[26] "Magdalena"                                              
[27] "La Guajira"                                             
[28] "Buenaventura D.E."                                      
[29] "Chocó"                                                  
[30] "Amazonas"                                               
[31] "Caquetá"                                                
[32] "Putumayo"                                               
[33] "Arauca"                                                 
[34] "Vaupés"                                                 
[35] "Guainía"                                                
[36] "Vichada"                                                
[37] "Guaviare"                                               
[1] "M" "F"
  [1] "2020-04-05" "2020-04-06" "2020-03-23" "2020-03-22" "2020-03-16"
  [6] "2020-03-26" "2020-03-25" "2020-04-04" "2020-04-15" "2020-04-09"
 [11] "2020-03-30" "2020-03-28" "2020-06-10" "2020-04-02" "2020-04-08"
 [16] "2020-03-27" "2020-04-12" "2020-04-03" "2020-04-24" "2020-04-21"
 [21] "2020-04-07" "2020-04-14" "2020-04-01" "2020-04-19" "2020-03-31"
 [26] "2020-04-10" "2020-04-18" "2020-04-11" "2020-03-29" "2020-04-28"
 [31] "2020-05-04" "2020-04-17" "2020-04-16" "2020-04-13" "2020-04-25"
 [36] "2020-03-24" "2020-05-01" "2020-05-31" "2020-04-29" "2020-05-11"
 [41] "2020-04-27" "2020-04-20" "2020-04-26" "2020-05-09" "2020-04-22"
 [46] "2020-05-07" "2020-04-23" "2020-05-02" "2020-04-30" "2020-05-06"
 [51] "2020-06-03" "2020-05-23" "2020-06-05" "2020-05-05" "2020-05-18"
 [56] "2020-05-03" "2020-05-08" "2020-05-17" "2020-05-29" "2020-05-22"
 [61] "2020-05-21" "2020-05-13" "2020-05-27" "2020-05-10" "2020-05-12"
 [66] "2020-06-02" "2020-06-29" "2020-05-28" "2020-06-01" "2020-05-15"
 [71] "2020-05-20" "2020-06-16" "2020-06-06" "2020-06-12" "2020-06-13"
 [76] "2020-05-26" "2020-05-14" "2020-05-19" "2020-05-30" "2020-05-24"
 [81] "2020-05-16" "2020-06-09" "2020-06-07" "2020-05-25" "2020-06-19"
 [86] "2020-06-14" "2020-06-25" "2020-06-17" "2020-06-15" "2020-06-08"
 [91] "2020-06-24" "2020-06-04" "2020-06-23" "2020-07-06" "2020-07-08"
 [96] "2020-06-30" "2020-06-18" "2020-07-02" "2020-06-21" "2020-06-11"
[101] "2020-06-22" "2020-06-20" "2020-07-01" "2020-07-03" "2020-06-27"
[106] "2020-06-26" "2020-07-09" "2020-07-07" "2020-06-28" "2020-07-05"
[111] "2020-07-04"
 [1] "Amazonas"        "Antioquia"       "Atlantico"       "Bogota"         
 [5] "Bolivar"         "Boyaca"          "Caldas"          "Caqueta"        
 [9] "Casanare"        "Cauca"           "Cesar"           "Choco"          
[13] "Cordoba"         "Cundinamarca"    "Guainia"         "Guajira"        
[17] "Huila"           "Magdalena"       "Meta"            "Nariño"         
[21] "Nte Santander"   "Putumayo"        "Quindio"         "Risaralda"      
[25] "Santa Marta"     "Santander"       "Sucre"           "Tolima"         
[29] "Valle del Cauca" "Vaupes"         
 [1] "Bogota"          "Valle del Cauca" "Antioquia"       "Bolivar"        
 [5] "resto"           "Cundinamarca"    "Atlantico"       "Santa Marta"    
 [9] "Nariño"          "Cordoba"         "Sucre"           "Magdalena"      
[13] "Choco"           "Amazonas"       
# A tibble: 2 x 2
  Measure `sum(Value)`
  <chr>          <dbl>
1 Cases         133973
2 Deaths          4701
# A tibble: 28 x 3
# Groups:   Region [14]
   Region    Measure `sum(Value)`
   <chr>     <chr>          <dbl>
 1 Amazonas  Cases           2399
 2 Amazonas  Deaths           100
 3 Antioquia Cases           7825
 4 Antioquia Deaths            67
 5 Atlantico Cases          30617
 6 Atlantico Deaths          1697
 7 Bogota    Cases          42347
 8 Bogota    Deaths           947
 9 Bolivar   Cases          11459
10 Bolivar   Deaths           430
# ... with 18 more rows
[1] "f" "m"
 [1] "Bogota"          "Valle del Cauca" "Antioquia"       "Bolivar"        
 [5] "resto"           "Cundinamarca"    "Atlantico"       "Santa Marta"    
 [9] "Nariño"          "Cordoba"         "Sucre"           "Magdalena"      
[13] "Choco"           "Amazonas"       
  [1] "2020-03-06" "2020-03-09" "2020-03-11" "2020-03-12" "2020-03-13"
  [6] "2020-03-14" "2020-03-15" "2020-03-16" "2020-03-17" "2020-03-18"
 [11] "2020-03-19" "2020-03-20" "2020-03-21" "2020-03-22" "2020-03-23"
 [16] "2020-03-24" "2020-03-27" "2020-03-25" "2020-03-26" "2020-03-28"
 [21] "2020-03-29" "2020-03-30" "2020-03-31" "2020-04-01" "2020-04-02"
 [26] "2020-04-03" "2020-04-04" "2020-04-05" "2020-04-06" "2020-04-07"
 [31] "2020-04-08" "2020-04-09" "2020-04-10" "2020-04-11" "2020-04-12"
 [36] "2020-04-13" "2020-04-14" "2020-04-19" "2020-04-15" "2020-04-28"
 [41] "2020-04-16" "2020-04-17" "2020-04-18" "2020-04-20" "2020-04-22"
 [46] "2020-04-21" "2020-04-23" "2020-05-01" "2020-04-24" "2020-05-05"
 [51] "2020-04-25" "2020-04-26" "2020-04-27" "2020-04-29" "2020-04-30"
 [56] "2020-05-02" "2020-05-04" "2020-05-03" NA           "2020-05-06"
 [61] "2020-05-07" "2020-05-08" "2020-05-09" "2020-05-10" "2020-05-11"
 [66] "2020-05-12" "2020-05-13" "2020-07-05" "2020-05-14" "2020-05-15"
 [71] "2020-05-16" "2020-05-17" "2020-05-18" "2020-05-19" "2020-05-20"
 [76] "2020-05-29" "2020-05-21" "2020-05-22" "2020-07-07" "2020-05-23"
 [81] "2020-06-01" "2020-05-24" "2020-05-25" "2020-05-26" "2020-05-27"
 [86] "2020-05-28" "2020-05-30" "2020-05-31" "2020-06-03" "2020-06-02"
 [91] "2020-06-05" "2020-06-04" "2020-06-06" "2020-06-07" "2020-06-08"
 [96] "2020-06-28" "2020-06-09" "2020-06-10" "2020-06-11" "2020-06-12"
[101] "2020-06-16" "2020-06-13" "2020-06-14" "2020-06-15" "2020-06-17"
[106] "2020-06-20" "2020-06-25" "2020-06-18" "2020-06-23" "2020-06-19"
[111] "2020-07-02" "2020-06-21" "2020-06-29" "2020-06-24" "2020-06-22"
[116] "2020-06-26" "2020-07-09" "2020-06-27" "2020-07-06" "2020-06-30"
[121] "2020-07-01" "2020-07-03" "2020-07-04" "2020-07-08" "2020-07-30"
  [1] "19"  "34"  "50"  "55"  "25"  "27"  "85"  "22"  "28"  "36"  "42"  "74" 
 [13] "68"  "48"  "30"  "61"  "73"  "54"  "26"  "23"  "18"  "49"  "65"  "59" 
 [25] "72"  "45"  "29"  "21"  "79"  "52"  "71"  "24"  "44"  "38"  "31"  "41" 
 [37] "67"  "62"  "58"  "37"  "20"  "32"  "64"  "40"  "46"  "39"  "9"   "53" 
 [49] "56"  "51"  "69"  "16"  "57"  "60"  "33"  "76"  "47"  "35"  "88"  "70" 
 [61] "81"  "17"  "63"  "80"  "84"  "87"  "83"  "43"  "77"  "15"  "66"  "3"  
 [73] "82"  "12"  "8"   "1"   "5"   "6"   "75"  "2"   "0"   "13"  "4"   "78" 
 [85] "10"  "94"  "7"   "95"  "11"  "93"  "92"  "90"  "97"  "91"  "86"  "14" 
 [97] "96"  "98"  "89"  "103" "100" "99"  "102" "106" "101" "104" "111"
[1] "2020-03-06"
[1] "2020-03-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-31"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-14"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-15"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-16"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-17"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-18"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-19"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-14"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-15"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-16"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-17"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-18"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-19"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-31"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-14"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-15"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-16"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-17"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-18"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-19"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-14"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-15"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-16"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-17"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-18"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-19"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
Joining, by = "Region"
# A tibble: 1 x 3
  Region  Cases Deaths
  <chr>   <dbl>  <dbl>
1 All    130884   4701
Adding missing grouping variables: `Region`
# A tibble: 26 x 3
# Groups:   Region [13]
   Region    Measure Value
   <chr>     <chr>   <dbl>
 1 Amazonas  Cases    2292
 2 Amazonas  Deaths    100
 3 Antioquia Cases    7658
 4 Antioquia Deaths     67
 5 Atlantico Cases   29114
 6 Atlantico Deaths   1697
 7 Bogota    Cases   42313
 8 Bogota    Deaths    947
 9 Bolivar   Cases   11039
10 Bolivar   Deaths    430
# ... with 16 more rows
[1] "All"

   Antioquia        Choco      Cordoba Cundinamarca    Magdalena       Nariño 
       11480        13940        13530        15990        19270        28290 
 Santa Marta        Sucre 
       13940        15170 
Auto-refreshing stale OAuth token.
Writing to "Colombia input"
Writing to sheet "database"
Writing to "Colombia_Bogota input"
Writing to sheet "database"
Writing to "Colombia_Atlantico input"
Writing to sheet "database"
Writing to "Colombia_Bolivar input"
Writing to sheet "database"
Writing to "Colombia_Valle del Cauca input"
Writing to sheet "database"
Writing to "Colombia_Amazonas input"
Writing to sheet "database"
Writing to "Colombia_others input"
Writing to sheet "database"
Auto-refreshing stale OAuth token.
Created Drive file:
  * CO10.07.2020cases&deaths: 18Apdwb18j4wcOtGYHC2gW3dde6R2A5Mj2LqHTEyy0Yg
with MIME type:
  * application/vnd.google-apps.spreadsheet
Writing to "CO10.07.2020cases&deaths"
Writing to sheet "cases&deaths_age_sex"
Fehler: Expected content type 'application/json' not 'text/html'.
<!DOCTYPE html>
<html lang=en>
  <meta charset=utf-8>
  <meta name=viewport content="initial-scale=1, minimum-scale=1, width=device-width">
  <title>Error 502 (Server Error)!!1</title>
  <style>
  ...
Ausführung angehalten
-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.3.0     v purrr   0.3.4
v tibble  3.0.1     v dplyr   0.8.5
v tidyr   1.1.0     v stringr 1.4.0
v readr   1.3.1     v forcats 0.5.0
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()
Warnmeldungen:
1: Paket 'tidyverse' wurde unter R Version 3.6.3 erstellt 
2: Paket 'ggplot2' wurde unter R Version 3.6.3 erstellt 
3: Paket 'tibble' wurde unter R Version 3.6.3 erstellt 
4: Paket 'tidyr' wurde unter R Version 3.6.3 erstellt 
5: Paket 'readr' wurde unter R Version 3.6.3 erstellt 
6: Paket 'purrr' wurde unter R Version 3.6.3 erstellt 
7: Paket 'dplyr' wurde unter R Version 3.6.3 erstellt 
8: Paket 'stringr' wurde unter R Version 3.6.3 erstellt 
9: Paket 'forcats' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'lubridate'

The following objects are masked from 'package:dplyr':

    intersect, setdiff, union

The following objects are masked from 'package:base':

    date, intersect, setdiff, union

Warnmeldung:
Paket 'lubridate' wurde unter R Version 3.6.3 erstellt 
Warnmeldung:
Paket 'googlesheets4' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'googledrive'

The following objects are masked from 'package:googlesheets4':

    request_generate, request_make

Warnmeldung:
Paket 'googledrive' wurde unter R Version 3.6.3 erstellt 
Parsed with column specification:
cols(
  .default = col_character(),
  `ID de caso` = col_double(),
  `Fecha de notificación` = col_datetime(format = ""),
  Edad = col_double(),
  `Fecha de muerte` = col_datetime(format = ""),
  `Fecha diagnostico` = col_datetime(format = ""),
  `Fecha recuperado` = col_datetime(format = ""),
  `fecha reporte web` = col_datetime(format = ""),
  `Codigo departamento` = col_double(),
  `Codigo pais` = col_double()
)
See spec(...) for full column specifications.
Parsed with column specification:
cols(
  .default = col_double(),
  Fecha = col_character(),
  `Positividad acumulada` = col_number()
)
See spec(...) for full column specifications.
[1] "Leve"         "Asintomático" "Fallecido"    "Moderado"     "Grave"       
[6] "N/A"         
 [1] "Bogotá D.C."                                            
 [2] "Valle del Cauca"                                        
 [3] "Antioquia"                                              
 [4] "Cartagena D.T. y C."                                    
 [5] "Huila"                                                  
 [6] "Meta"                                                   
 [7] "Risaralda"                                              
 [8] "Norte de Santander"                                     
 [9] "Caldas"                                                 
[10] "Cundinamarca"                                           
[11] "Barranquilla D.E."                                      
[12] "Santander"                                              
[13] "Quindío"                                                
[14] "Tolima"                                                 
[15] "Cauca"                                                  
[16] "Santa Marta D.T. y C."                                  
[17] "Cesar"                                                  
[18] "Archipiélago de San Andrés Providencia y Santa Catalina"
[19] "Casanare"                                               
[20] "Nariño"                                                 
[21] "Atlántico"                                              
[22] "Boyacá"                                                 
[23] "Córdoba"                                                
[24] "Bolívar"                                                
[25] "Sucre"                                                  
[26] "Magdalena"                                              
[27] "La Guajira"                                             
[28] "Buenaventura D.E."                                      
[29] "Chocó"                                                  
[30] "Amazonas"                                               
[31] "Caquetá"                                                
[32] "Putumayo"                                               
[33] "Arauca"                                                 
[34] "Vaupés"                                                 
[35] "Guainía"                                                
[36] "Vichada"                                                
[37] "Guaviare"                                               
[1] "M" "F"
  [1] "2020-04-05" "2020-04-06" "2020-03-23" "2020-03-22" "2020-03-16"
  [6] "2020-03-26" "2020-03-25" "2020-04-04" "2020-04-15" "2020-04-09"
 [11] "2020-03-30" "2020-03-28" "2020-06-10" "2020-04-02" "2020-04-08"
 [16] "2020-03-27" "2020-04-12" "2020-04-03" "2020-04-24" "2020-04-21"
 [21] "2020-04-07" "2020-04-14" "2020-04-01" "2020-04-19" "2020-03-31"
 [26] "2020-04-10" "2020-04-18" "2020-04-11" "2020-03-29" "2020-04-28"
 [31] "2020-05-04" "2020-04-17" "2020-04-16" "2020-04-13" "2020-04-25"
 [36] "2020-03-24" "2020-05-01" "2020-05-31" "2020-04-29" "2020-05-11"
 [41] "2020-04-27" "2020-04-20" "2020-04-26" "2020-05-09" "2020-04-22"
 [46] "2020-05-07" "2020-04-23" "2020-05-02" "2020-04-30" "2020-05-06"
 [51] "2020-06-03" "2020-05-23" "2020-06-05" "2020-05-05" "2020-05-18"
 [56] "2020-05-03" "2020-05-08" "2020-05-17" "2020-05-29" "2020-05-22"
 [61] "2020-05-21" "2020-05-13" "2020-05-27" "2020-05-10" "2020-05-12"
 [66] "2020-06-02" "2020-06-29" "2020-05-28" "2020-06-01" "2020-05-15"
 [71] "2020-05-20" "2020-06-16" "2020-06-06" "2020-06-12" "2020-06-13"
 [76] "2020-05-26" "2020-05-14" "2020-05-19" "2020-05-30" "2020-05-24"
 [81] "2020-05-16" "2020-06-09" "2020-06-07" "2020-05-25" "2020-06-19"
 [86] "2020-06-14" "2020-06-25" "2020-06-17" "2020-06-15" "2020-06-08"
 [91] "2020-06-24" "2020-06-04" "2020-06-23" "2020-07-06" "2020-07-08"
 [96] "2020-06-30" "2020-06-18" "2020-07-02" "2020-06-21" "2020-06-11"
[101] "2020-06-22" "2020-06-20" "2020-07-01" "2020-07-03" "2020-06-27"
[106] "2020-06-26" "2020-07-09" "2020-07-07" "2020-06-28" "2020-07-05"
[111] "2020-07-04" "2020-07-10"
 [1] "Amazonas"        "Antioquia"       "Atlantico"       "Bogota"         
 [5] "Bolivar"         "Boyaca"          "Caldas"          "Caqueta"        
 [9] "Casanare"        "Cauca"           "Cesar"           "Choco"          
[13] "Cordoba"         "Cundinamarca"    "Guainia"         "Guajira"        
[17] "Huila"           "Magdalena"       "Meta"            "Nariño"         
[21] "Nte Santander"   "Putumayo"        "Quindio"         "Risaralda"      
[25] "Santa Marta"     "Santander"       "Sucre"           "Tolima"         
[29] "Valle del Cauca" "Vaupes"         
 [1] "Bogota"          "Valle del Cauca" "Antioquia"       "Bolivar"        
 [5] "resto"           "Cundinamarca"    "Atlantico"       "Santa Marta"    
 [9] "Nariño"          "Cordoba"         "Sucre"           "Magdalena"      
[13] "Choco"           "Amazonas"       
# A tibble: 2 x 2
  Measure `sum(Value)`
  <chr>          <dbl>
1 Cases         140776
2 Deaths          4904
# A tibble: 28 x 3
# Groups:   Region [14]
   Region    Measure `sum(Value)`
   <chr>     <chr>          <dbl>
 1 Amazonas  Cases           2406
 2 Amazonas  Deaths           100
 3 Antioquia Cases           8451
 4 Antioquia Deaths            71
 5 Atlantico Cases          31882
 6 Atlantico Deaths          1756
 7 Bogota    Cases          45039
 8 Bogota    Deaths           987
 9 Bolivar   Cases          11733
10 Bolivar   Deaths           432
# ... with 18 more rows
[1] "f" "m"
 [1] "Bogota"          "Valle del Cauca" "Antioquia"       "Bolivar"        
 [5] "resto"           "Cundinamarca"    "Atlantico"       "Santa Marta"    
 [9] "Nariño"          "Cordoba"         "Sucre"           "Magdalena"      
[13] "Choco"           "Amazonas"       
  [1] "2020-03-06" "2020-03-09" "2020-03-11" "2020-03-12" "2020-03-13"
  [6] "2020-03-14" "2020-03-15" "2020-03-16" "2020-03-17" "2020-03-18"
 [11] "2020-03-19" "2020-03-20" "2020-03-21" "2020-03-22" "2020-03-23"
 [16] "2020-03-24" "2020-03-27" "2020-03-25" "2020-03-26" "2020-03-28"
 [21] "2020-03-29" "2020-03-30" "2020-03-31" "2020-04-01" "2020-04-02"
 [26] "2020-04-03" "2020-04-04" "2020-04-05" "2020-04-06" "2020-04-07"
 [31] "2020-04-08" "2020-04-09" "2020-04-10" "2020-04-11" "2020-04-12"
 [36] "2020-04-13" "2020-04-14" "2020-04-19" "2020-04-15" "2020-04-28"
 [41] "2020-04-16" "2020-04-17" "2020-04-18" "2020-04-20" "2020-04-22"
 [46] "2020-04-21" "2020-04-23" "2020-05-01" "2020-04-24" "2020-05-05"
 [51] "2020-04-25" "2020-04-26" "2020-04-27" "2020-04-29" "2020-04-30"
 [56] "2020-05-02" "2020-05-04" "2020-05-03" NA           "2020-05-06"
 [61] "2020-05-07" "2020-05-08" "2020-05-09" "2020-05-10" "2020-05-11"
 [66] "2020-05-12" "2020-05-13" "2020-07-05" "2020-05-14" "2020-05-15"
 [71] "2020-05-16" "2020-05-17" "2020-05-18" "2020-05-19" "2020-05-20"
 [76] "2020-05-29" "2020-05-21" "2020-05-22" "2020-07-07" "2020-05-23"
 [81] "2020-06-01" "2020-05-24" "2020-05-25" "2020-05-26" "2020-05-27"
 [86] "2020-05-28" "2020-05-30" "2020-05-31" "2020-06-03" "2020-06-02"
 [91] "2020-06-05" "2020-06-04" "2020-06-06" "2020-06-07" "2020-06-08"
 [96] "2020-06-28" "2020-06-09" "2020-06-10" "2020-06-11" "2020-06-12"
[101] "2020-06-16" "2020-06-13" "2020-06-14" "2020-06-15" "2020-06-17"
[106] "2020-06-20" "2020-06-25" "2020-06-18" "2020-06-23" "2020-06-19"
[111] "2020-07-02" "2020-06-21" "2020-06-29" "2020-06-24" "2020-06-22"
[116] "2020-06-26" "2020-07-09" "2020-06-27" "2020-07-06" "2020-06-30"
[121] "2020-07-01" "2020-07-03" "2020-07-04" "2020-07-08" "2020-07-10"
  [1] "19"  "34"  "50"  "55"  "25"  "27"  "85"  "22"  "28"  "36"  "42"  "74" 
 [13] "68"  "48"  "30"  "61"  "73"  "54"  "26"  "23"  "18"  "49"  "65"  "59" 
 [25] "72"  "45"  "29"  "21"  "79"  "52"  "71"  "24"  "44"  "38"  "31"  "41" 
 [37] "67"  "62"  "58"  "37"  "20"  "32"  "64"  "40"  "46"  "39"  "9"   "53" 
 [49] "56"  "51"  "69"  "16"  "57"  "60"  "33"  "76"  "47"  "35"  "88"  "70" 
 [61] "81"  "17"  "63"  "80"  "84"  "87"  "83"  "43"  "77"  "15"  "66"  "3"  
 [73] "82"  "12"  "8"   "1"   "5"   "6"   "75"  "2"   "0"   "13"  "4"   "78" 
 [85] "10"  "94"  "7"   "95"  "11"  "93"  "92"  "90"  "97"  "91"  "86"  "14" 
 [97] "96"  "98"  "89"  "103" "100" "99"  "102" "106" "101" "104" "111"
[1] "2020-03-06"
[1] "2020-03-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-31"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-14"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-15"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-16"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-17"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-18"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-19"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-14"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-15"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-16"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-17"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-18"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-19"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-31"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-14"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-15"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-16"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-17"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-18"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-19"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
Joining, by = "Region"
# A tibble: 1 x 3
  Region  Cases Deaths
  <chr>   <dbl>  <dbl>
1 All    137504   4904
Adding missing grouping variables: `Region`
# A tibble: 26 x 3
# Groups:   Region [13]
   Region    Measure Value
   <chr>     <chr>   <dbl>
 1 Amazonas  Cases    2296
 2 Amazonas  Deaths    100
 3 Antioquia Cases    8253
 4 Antioquia Deaths     71
 5 Atlantico Cases   30316
 6 Atlantico Deaths   1756
 7 Bogota    Cases   45001
 8 Bogota    Deaths    987
 9 Bolivar   Cases   11290
10 Bolivar   Deaths    432
# ... with 16 more rows
[1] "All"

   Antioquia        Choco      Cordoba Cundinamarca    Magdalena       Nariño 
        3280         5740         5740         8200        11070        20090 
 Santa Marta        Sucre 
        5740         6970 
Auto-refreshing stale OAuth token.
Writing to "Colombia input"
Writing to sheet "database"
Writing to "Colombia_Bogota input"
Writing to sheet "database"
Writing to "Colombia_Atlantico input"
Writing to sheet "database"
Writing to "Colombia_Bolivar input"
Writing to sheet "database"
Writing to "Colombia_Valle del Cauca input"
Writing to sheet "database"
Writing to "Colombia_Amazonas input"
Writing to sheet "database"
Writing to "Colombia_others input"
Writing to sheet "database"
Auto-refreshing stale OAuth token.
Created Drive file:
  * CO11.07.2020cases&deaths: 1qHzoevCQXKj5xyRZi66IVoYyJDENH44mOAEFZcTJ2ss
with MIME type:
  * application/vnd.google-apps.spreadsheet
Writing to "CO11.07.2020cases&deaths"
Writing to sheet "cases&deaths_age_sex"
Writing to "CO11.07.2020cases&deaths"
Writing to sheet "tests"
Deleting these sheet(s) from "CO11.07.2020cases&deaths":
* Sheet1
-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.3.0     v purrr   0.3.4
v tibble  3.0.1     v dplyr   0.8.5
v tidyr   1.1.0     v stringr 1.4.0
v readr   1.3.1     v forcats 0.5.0
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()
Warnmeldungen:
1: Paket 'tidyverse' wurde unter R Version 3.6.3 erstellt 
2: Paket 'ggplot2' wurde unter R Version 3.6.3 erstellt 
3: Paket 'tibble' wurde unter R Version 3.6.3 erstellt 
4: Paket 'tidyr' wurde unter R Version 3.6.3 erstellt 
5: Paket 'readr' wurde unter R Version 3.6.3 erstellt 
6: Paket 'purrr' wurde unter R Version 3.6.3 erstellt 
7: Paket 'dplyr' wurde unter R Version 3.6.3 erstellt 
8: Paket 'stringr' wurde unter R Version 3.6.3 erstellt 
9: Paket 'forcats' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'lubridate'

The following objects are masked from 'package:dplyr':

    intersect, setdiff, union

The following objects are masked from 'package:base':

    date, intersect, setdiff, union

Warnmeldung:
Paket 'lubridate' wurde unter R Version 3.6.3 erstellt 
Warnmeldung:
Paket 'googlesheets4' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'googledrive'

The following objects are masked from 'package:googlesheets4':

    request_generate, request_make

Warnmeldung:
Paket 'googledrive' wurde unter R Version 3.6.3 erstellt 
Parsed with column specification:
cols(
  .default = col_character(),
  `ID de caso` = col_double(),
  `Fecha de notificación` = col_datetime(format = ""),
  Edad = col_double(),
  `Fecha de muerte` = col_datetime(format = ""),
  `Fecha diagnostico` = col_datetime(format = ""),
  `Fecha recuperado` = col_datetime(format = ""),
  `fecha reporte web` = col_datetime(format = ""),
  `Codigo departamento` = col_double(),
  `Codigo pais` = col_double()
)
See spec(...) for full column specifications.
Parsed with column specification:
cols(
  .default = col_double(),
  Fecha = col_character(),
  `Positividad acumulada` = col_number()
)
See spec(...) for full column specifications.
[1] "Leve"         "Asintomático" "Fallecido"    "Moderado"     "Grave"       
[6] "N/A"         
 [1] "Bogotá D.C."                                            
 [2] "Valle del Cauca"                                        
 [3] "Antioquia"                                              
 [4] "Cartagena D.T. y C."                                    
 [5] "Huila"                                                  
 [6] "Meta"                                                   
 [7] "Risaralda"                                              
 [8] "Norte de Santander"                                     
 [9] "Caldas"                                                 
[10] "Cundinamarca"                                           
[11] "Barranquilla D.E."                                      
[12] "Santander"                                              
[13] "Quindío"                                                
[14] "Tolima"                                                 
[15] "Cauca"                                                  
[16] "Santa Marta D.T. y C."                                  
[17] "Cesar"                                                  
[18] "Archipiélago de San Andrés Providencia y Santa Catalina"
[19] "Casanare"                                               
[20] "Nariño"                                                 
[21] "Atlántico"                                              
[22] "Boyacá"                                                 
[23] "Córdoba"                                                
[24] "Bolívar"                                                
[25] "Sucre"                                                  
[26] "Magdalena"                                              
[27] "La Guajira"                                             
[28] "Buenaventura D.E."                                      
[29] "Chocó"                                                  
[30] "Amazonas"                                               
[31] "Caquetá"                                                
[32] "Putumayo"                                               
[33] "Arauca"                                                 
[34] "Vaupés"                                                 
[35] "Guainía"                                                
[36] "Vichada"                                                
[37] "Guaviare"                                               
[38] NA                                                       
[1] "M" "F"
  [1] "2020-04-05" "2020-04-06" "2020-03-23" "2020-03-22" "2020-03-16"
  [6] "2020-03-26" "2020-03-25" "2020-04-04" "2020-04-15" "2020-04-09"
 [11] "2020-03-30" "2020-03-28" "2020-06-10" "2020-04-02" "2020-04-08"
 [16] "2020-03-27" "2020-04-12" "2020-04-03" "2020-04-24" "2020-04-21"
 [21] "2020-04-07" "2020-04-14" "2020-04-01" "2020-04-19" "2020-03-31"
 [26] "2020-04-10" "2020-04-18" "2020-04-11" "2020-03-29" "2020-04-28"
 [31] "2020-05-04" "2020-04-17" "2020-04-16" "2020-04-13" "2020-04-25"
 [36] "2020-03-24" "2020-05-01" "2020-05-31" "2020-04-29" "2020-05-11"
 [41] "2020-04-27" "2020-04-20" "2020-04-26" "2020-05-09" "2020-04-22"
 [46] "2020-05-07" "2020-04-23" "2020-05-02" "2020-04-30" "2020-05-06"
 [51] "2020-06-03" "2020-05-23" "2020-06-05" "2020-05-05" "2020-05-18"
 [56] "2020-05-03" "2020-05-08" "2020-05-17" "2020-05-29" "2020-05-22"
 [61] "2020-05-21" "2020-05-13" "2020-05-27" "2020-05-10" "2020-05-12"
 [66] "2020-06-02" "2020-06-29" "2020-05-28" "2020-06-01" "2020-05-15"
 [71] "2020-05-20" "2020-06-16" "2020-06-06" "2020-06-12" "2020-06-13"
 [76] "2020-05-26" "2020-05-14" "2020-05-19" "2020-05-30" "2020-05-24"
 [81] "2020-05-16" "2020-06-09" "2020-06-07" "2020-05-25" "2020-06-19"
 [86] "2020-06-14" "2020-06-25" "2020-06-17" "2020-06-15" "2020-06-08"
 [91] "2020-06-24" "2020-06-04" "2020-06-23" "2020-07-06" "2020-07-08"
 [96] "2020-06-30" "2020-06-18" "2020-07-02" "2020-06-21" "2020-06-11"
[101] "2020-06-22" "2020-06-20" "2020-07-01" "2020-07-03" "2020-06-27"
[106] "2020-07-04" "2020-06-26" "2020-07-09" "2020-07-07" "2020-06-28"
[111] "2020-07-05" "2020-07-10" "2020-07-11"
 [1] "Amazonas"        "Antioquia"       "Atlantico"       "Bogota"         
 [5] "Bolivar"         "Boyaca"          "Caldas"          "Caqueta"        
 [9] "Casanare"        "Cauca"           "Cesar"           "Choco"          
[13] "Cordoba"         "Cundinamarca"    "Guainia"         "Guajira"        
[17] "Huila"           "Magdalena"       "Meta"            "Nariño"         
[21] "Nte Santander"   "Putumayo"        "Quindio"         "Risaralda"      
[25] "Santa Marta"     "Santander"       "Sucre"           "Tolima"         
[29] "Valle del Cauca" "Vaupes"         
 [1] "Bogota"          "Valle del Cauca" "Antioquia"       "Bolivar"        
 [5] "resto"           "Cundinamarca"    "Atlantico"       "Santa Marta"    
 [9] "Nariño"          "Cordoba"         "Sucre"           "Magdalena"      
[13] "Choco"           "Amazonas"       
# A tibble: 2 x 2
  Measure `sum(Value)`
  <chr>          <dbl>
1 Cases         145362
2 Deaths          5080
# A tibble: 28 x 3
# Groups:   Region [14]
   Region    Measure `sum(Value)`
   <chr>     <chr>          <dbl>
 1 Amazonas  Cases           2411
 2 Amazonas  Deaths           100
 3 Antioquia Cases           8744
 4 Antioquia Deaths            84
 5 Atlantico Cases          32635
 6 Atlantico Deaths          1799
 7 Bogota    Cases          47524
 8 Bogota    Deaths          1030
 9 Bolivar   Cases          11913
10 Bolivar   Deaths           440
# ... with 18 more rows
[1] "f" "m"
 [1] "Bogota"          "Valle del Cauca" "Antioquia"       "Bolivar"        
 [5] "resto"           "Cundinamarca"    "Atlantico"       "Santa Marta"    
 [9] "Nariño"          "Cordoba"         "Sucre"           "Magdalena"      
[13] "Choco"           "Amazonas"       
  [1] "2020-03-06" "2020-03-09" "2020-03-11" "2020-03-12" "2020-03-13"
  [6] "2020-03-14" "2020-03-15" "2020-03-16" "2020-03-17" "2020-03-18"
 [11] "2020-03-19" "2020-03-20" "2020-03-21" "2020-03-22" "2020-03-23"
 [16] "2020-03-24" "2020-03-27" "2020-03-25" "2020-03-26" "2020-03-28"
 [21] "2020-03-29" "2020-03-30" "2020-03-31" "2020-04-01" "2020-04-02"
 [26] "2020-04-03" "2020-04-04" "2020-04-05" "2020-04-06" "2020-04-07"
 [31] "2020-04-08" "2020-04-09" "2020-04-10" "2020-04-11" "2020-04-12"
 [36] "2020-04-13" "2020-04-14" "2020-04-19" "2020-04-15" "2020-04-28"
 [41] "2020-04-16" "2020-04-17" "2020-04-18" "2020-04-20" "2020-04-22"
 [46] "2020-04-21" "2020-04-23" "2020-05-01" "2020-04-24" "2020-05-05"
 [51] "2020-04-25" "2020-04-26" "2020-04-27" "2020-04-29" "2020-04-30"
 [56] "2020-05-02" "2020-05-04" "2020-05-03" NA           "2020-05-06"
 [61] "2020-05-07" "2020-05-08" "2020-05-09" "2020-05-10" "2020-05-11"
 [66] "2020-05-12" "2020-05-13" "2020-07-05" "2020-05-14" "2020-05-15"
 [71] "2020-05-16" "2020-05-17" "2020-05-18" "2020-05-19" "2020-05-20"
 [76] "2020-05-29" "2020-05-21" "2020-05-22" "2020-07-07" "2020-05-23"
 [81] "2020-06-01" "2020-05-24" "2020-05-25" "2020-05-26" "2020-05-27"
 [86] "2020-05-28" "2020-05-30" "2020-05-31" "2020-06-03" "2020-06-02"
 [91] "2020-06-05" "2020-06-04" "2020-06-06" "2020-06-07" "2020-06-08"
 [96] "2020-06-28" "2020-06-09" "2020-06-10" "2020-06-11" "2020-06-12"
[101] "2020-06-16" "2020-06-13" "2020-06-14" "2020-06-15" "2020-06-17"
[106] "2020-06-20" "2020-06-25" "2020-06-18" "2020-06-23" "2020-06-19"
[111] "2020-07-02" "2020-06-21" "2020-06-29" "2020-06-24" "2020-07-11"
[116] "2020-06-22" "2020-06-26" "2020-07-09" "2020-06-27" "2020-07-06"
[121] "2020-06-30" "2020-07-01" "2020-07-03" "2020-07-04" "2020-07-08"
[126] "2020-07-10"
  [1] "19"  "34"  "50"  "55"  "25"  "27"  "85"  "22"  "28"  "36"  "42"  "74" 
 [13] "68"  "48"  "30"  "61"  "73"  "54"  "26"  "23"  "18"  "49"  "65"  "59" 
 [25] "72"  "45"  "29"  "21"  "79"  "52"  "71"  "24"  "44"  "38"  "31"  "41" 
 [37] "67"  "62"  "58"  "37"  "20"  "32"  "64"  "40"  "46"  "39"  "9"   "53" 
 [49] "56"  "51"  "69"  "16"  "57"  "60"  "33"  "76"  "47"  "35"  "88"  "70" 
 [61] "81"  "17"  "63"  "80"  "84"  "87"  "83"  "43"  "77"  "15"  "66"  "3"  
 [73] "82"  "12"  "8"   "1"   "5"   "6"   "75"  "2"   "0"   "13"  "4"   "78" 
 [85] "10"  "94"  "7"   "95"  "11"  "93"  "92"  "90"  "97"  "91"  "86"  "14" 
 [97] "96"  "98"  "89"  "103" "100" "99"  "102" "106" "101" "104" "111"
[1] "2020-03-06"
[1] "2020-03-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-31"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-14"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-15"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-16"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-17"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-18"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-19"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-14"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-15"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-16"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-17"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-18"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-19"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-31"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-14"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-15"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-16"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-17"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-18"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-19"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
Joining, by = "Region"
# A tibble: 1 x 3
  Region  Cases Deaths
  <chr>   <dbl>  <dbl>
1 All    142090   5080
Adding missing grouping variables: `Region`
# A tibble: 26 x 3
# Groups:   Region [13]
   Region    Measure Value
   <chr>     <chr>   <dbl>
 1 Amazonas  Cases    2301
 2 Amazonas  Deaths    100
 3 Antioquia Cases    8546
 4 Antioquia Deaths     84
 5 Atlantico Cases   31069
 6 Atlantico Deaths   1799
 7 Bogota    Cases   47486
 8 Bogota    Deaths   1030
 9 Bolivar   Cases   11470
10 Bolivar   Deaths    440
# ... with 16 more rows
[1] "All"

   Antioquia        Choco      Cordoba Cundinamarca    Magdalena       Nariño 
        3690         6150         6150         8200        11480        20500 
 Santa Marta        Sucre 
        6150         7790 
Auto-refreshing stale OAuth token.
Writing to "Colombia input"
Writing to sheet "database"
Writing to "Colombia_Bogota input"
Writing to sheet "database"
Writing to "Colombia_Atlantico input"
Writing to sheet "database"
Writing to "Colombia_Bolivar input"
Writing to sheet "database"
Writing to "Colombia_Valle del Cauca input"
Writing to sheet "database"
Writing to "Colombia_Amazonas input"
Writing to sheet "database"
Writing to "Colombia_others input"
Writing to sheet "database"
Auto-refreshing stale OAuth token.
Created Drive file:
  * CO12.07.2020cases&deaths: 1HPO52KgWneAo-beINBAquciuuFHn_POXEaJ41pGV_Zk
with MIME type:
  * application/vnd.google-apps.spreadsheet
Writing to "CO12.07.2020cases&deaths"
Writing to sheet "cases&deaths_age_sex"
Fehler: Expected content type 'application/json' not 'text/html'.
<!DOCTYPE html>
<html lang=en>
  <meta charset=utf-8>
  <meta name=viewport content="initial-scale=1, minimum-scale=1, width=device-width">
  <title>Error 502 (Server Error)!!1</title>
  <style>
  ...
Ausführung angehalten
-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.3.0     v purrr   0.3.4
v tibble  3.0.1     v dplyr   0.8.5
v tidyr   1.1.0     v stringr 1.4.0
v readr   1.3.1     v forcats 0.5.0
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()
Warnmeldungen:
1: Paket 'tidyverse' wurde unter R Version 3.6.3 erstellt 
2: Paket 'ggplot2' wurde unter R Version 3.6.3 erstellt 
3: Paket 'tibble' wurde unter R Version 3.6.3 erstellt 
4: Paket 'tidyr' wurde unter R Version 3.6.3 erstellt 
5: Paket 'readr' wurde unter R Version 3.6.3 erstellt 
6: Paket 'purrr' wurde unter R Version 3.6.3 erstellt 
7: Paket 'dplyr' wurde unter R Version 3.6.3 erstellt 
8: Paket 'stringr' wurde unter R Version 3.6.3 erstellt 
9: Paket 'forcats' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'lubridate'

The following objects are masked from 'package:dplyr':

    intersect, setdiff, union

The following objects are masked from 'package:base':

    date, intersect, setdiff, union

Warnmeldung:
Paket 'lubridate' wurde unter R Version 3.6.3 erstellt 
Warnmeldung:
Paket 'googlesheets4' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'googledrive'

The following objects are masked from 'package:googlesheets4':

    request_generate, request_make

Warnmeldung:
Paket 'googledrive' wurde unter R Version 3.6.3 erstellt 
Parsed with column specification:
cols(
  .default = col_character(),
  `ID de caso` = col_double(),
  `Fecha de notificación` = col_datetime(format = ""),
  Edad = col_double(),
  `Fecha de muerte` = col_datetime(format = ""),
  `Fecha diagnostico` = col_datetime(format = ""),
  `Fecha recuperado` = col_datetime(format = ""),
  `fecha reporte web` = col_datetime(format = ""),
  `Codigo departamento` = col_double(),
  `Codigo pais` = col_double()
)
See spec(...) for full column specifications.
Parsed with column specification:
cols(
  .default = col_double(),
  Fecha = col_character(),
  `Positividad acumulada` = col_number()
)
See spec(...) for full column specifications.
[1] "Leve"         "Asintomático" "Fallecido"    "Moderado"     "Grave"       
[6] "N/A"         
 [1] "Bogotá D.C."                                            
 [2] "Valle del Cauca"                                        
 [3] "Antioquia"                                              
 [4] "Cartagena D.T. y C."                                    
 [5] "Huila"                                                  
 [6] "Meta"                                                   
 [7] "Risaralda"                                              
 [8] "Norte de Santander"                                     
 [9] "Caldas"                                                 
[10] "Cundinamarca"                                           
[11] "Barranquilla D.E."                                      
[12] "Santander"                                              
[13] "Quindío"                                                
[14] "Tolima"                                                 
[15] "Cauca"                                                  
[16] "Santa Marta D.T. y C."                                  
[17] "Cesar"                                                  
[18] "Archipiélago de San Andrés Providencia y Santa Catalina"
[19] "Casanare"                                               
[20] "Nariño"                                                 
[21] "Atlántico"                                              
[22] "Boyacá"                                                 
[23] "Córdoba"                                                
[24] "Bolívar"                                                
[25] "Sucre"                                                  
[26] "Magdalena"                                              
[27] "La Guajira"                                             
[28] "Buenaventura D.E."                                      
[29] "Chocó"                                                  
[30] "Amazonas"                                               
[31] "Caquetá"                                                
[32] "Putumayo"                                               
[33] "Arauca"                                                 
[34] "Vaupés"                                                 
[35] "Guainía"                                                
[36] "Vichada"                                                
[37] "Guaviare"                                               
[1] "M" "F"
  [1] "2020-04-05" "2020-04-06" "2020-03-23" "2020-03-22" "2020-03-16"
  [6] "2020-03-26" "2020-03-25" "2020-04-04" "2020-04-15" "2020-04-09"
 [11] "2020-03-30" "2020-03-28" "2020-06-10" "2020-04-02" "2020-04-08"
 [16] "2020-03-27" "2020-04-12" "2020-04-03" "2020-04-24" "2020-04-21"
 [21] "2020-04-07" "2020-04-14" "2020-04-01" "2020-04-19" "2020-03-31"
 [26] "2020-04-10" "2020-04-18" "2020-04-11" "2020-03-29" "2020-04-28"
 [31] "2020-05-04" "2020-04-17" "2020-04-16" "2020-04-13" "2020-04-25"
 [36] "2020-03-24" "2020-05-01" "2020-05-31" "2020-04-29" "2020-05-11"
 [41] "2020-04-27" "2020-04-20" "2020-04-26" "2020-05-09" "2020-04-22"
 [46] "2020-05-07" "2020-04-23" "2020-05-02" "2020-04-30" "2020-05-06"
 [51] "2020-06-03" "2020-05-23" "2020-06-05" "2020-05-05" "2020-05-18"
 [56] "2020-05-03" "2020-05-08" "2020-05-17" "2020-05-29" "2020-05-22"
 [61] "2020-05-21" "2020-05-13" "2020-05-27" "2020-05-10" "2020-05-12"
 [66] "2020-06-02" "2020-06-29" "2020-05-28" "2020-06-01" "2020-05-15"
 [71] "2020-05-20" "2020-06-16" "2020-06-06" "2020-06-12" "2020-06-13"
 [76] "2020-05-26" "2020-05-14" "2020-05-19" "2020-05-30" "2020-05-24"
 [81] "2020-05-16" "2020-06-09" "2020-06-07" "2020-05-25" "2020-06-19"
 [86] "2020-06-14" "2020-07-12" "2020-06-25" "2020-06-17" "2020-06-15"
 [91] "2020-06-08" "2020-06-24" "2020-06-04" "2020-06-23" "2020-07-06"
 [96] "2020-07-08" "2020-06-30" "2020-06-18" "2020-07-02" "2020-06-21"
[101] "2020-06-11" "2020-06-22" "2020-06-20" "2020-07-01" "2020-07-03"
[106] "2020-06-27" "2020-07-11" "2020-07-04" "2020-06-26" "2020-07-09"
[111] "2020-07-07" "2020-06-28" "2020-07-05" "2020-07-10"
 [1] "Amazonas"        "Antioquia"       "Atlantico"       "Bogota"         
 [5] "Bolivar"         "Boyaca"          "Caldas"          "Caqueta"        
 [9] "Casanare"        "Cauca"           "Cesar"           "Choco"          
[13] "Cordoba"         "Cundinamarca"    "Guainia"         "Guajira"        
[17] "Huila"           "Magdalena"       "Meta"            "Nariño"         
[21] "Nte Santander"   "Putumayo"        "Quindio"         "Risaralda"      
[25] "Santa Marta"     "Santander"       "Sucre"           "Tolima"         
[29] "Valle del Cauca" "Vaupes"         
 [1] "Bogota"          "Valle del Cauca" "Antioquia"       "Bolivar"        
 [5] "resto"           "Cundinamarca"    "Atlantico"       "Santa Marta"    
 [9] "Nariño"          "Cordoba"         "Sucre"           "Magdalena"      
[13] "Guajira"         "Choco"           "Amazonas"       
# A tibble: 2 x 2
  Measure `sum(Value)`
  <chr>          <dbl>
1 Cases         150445
2 Deaths          5255
# A tibble: 30 x 3
# Groups:   Region [15]
   Region    Measure `sum(Value)`
   <chr>     <chr>          <dbl>
 1 Amazonas  Cases           2418
 2 Amazonas  Deaths           100
 3 Antioquia Cases           9253
 4 Antioquia Deaths            92
 5 Atlantico Cases          33700
 6 Atlantico Deaths          1868
 7 Bogota    Cases          49644
 8 Bogota    Deaths          1076
 9 Bolivar   Cases          12206
10 Bolivar   Deaths           447
# ... with 20 more rows
[1] "f" "m"
 [1] "Bogota"          "Valle del Cauca" "Antioquia"       "Bolivar"        
 [5] "resto"           "Cundinamarca"    "Atlantico"       "Santa Marta"    
 [9] "Nariño"          "Cordoba"         "Sucre"           "Magdalena"      
[13] "Guajira"         "Choco"           "Amazonas"       
  [1] "2020-03-06" "2020-03-09" "2020-03-11" "2020-03-12" "2020-03-13"
  [6] "2020-03-14" "2020-03-15" "2020-03-16" "2020-03-17" "2020-03-18"
 [11] "2020-03-19" "2020-03-20" "2020-03-21" "2020-03-22" "2020-03-23"
 [16] "2020-03-24" "2020-03-27" "2020-03-25" "2020-03-26" "2020-03-28"
 [21] "2020-03-29" "2020-03-30" "2020-03-31" "2020-04-01" "2020-04-02"
 [26] "2020-04-03" "2020-04-04" "2020-04-05" "2020-04-06" "2020-04-07"
 [31] "2020-04-08" "2020-04-09" "2020-04-10" "2020-04-11" "2020-04-12"
 [36] "2020-04-13" "2020-04-14" "2020-04-19" "2020-04-15" "2020-04-28"
 [41] "2020-04-16" "2020-04-17" "2020-04-18" "2020-04-20" "2020-04-22"
 [46] "2020-04-21" "2020-04-23" "2020-05-01" "2020-04-24" "2020-05-05"
 [51] "2020-04-25" "2020-04-26" "2020-04-27" "2020-04-29" "2020-04-30"
 [56] "2020-05-02" "2020-05-04" "2020-05-03" NA           "2020-05-06"
 [61] "2020-05-07" "2020-05-08" "2020-05-09" "2020-05-10" "2020-05-11"
 [66] "2020-05-12" "2020-05-13" "2020-07-05" "2020-05-14" "2020-05-15"
 [71] "2020-05-16" "2020-05-17" "2020-05-18" "2020-05-19" "2020-05-20"
 [76] "2020-05-29" "2020-05-21" "2020-05-22" "2020-07-07" "2020-05-23"
 [81] "2020-06-01" "2020-05-24" "2020-05-25" "2020-05-26" "2020-05-27"
 [86] "2020-05-28" "2020-05-30" "2020-05-31" "2020-06-03" "2020-06-02"
 [91] "2020-06-05" "2020-06-04" "2020-06-06" "2020-06-07" "2020-06-08"
 [96] "2020-06-28" "2020-06-09" "2020-06-10" "2020-06-11" "2020-06-12"
[101] "2020-06-16" "2020-06-13" "2020-06-14" "2020-06-15" "2020-06-17"
[106] "2020-06-20" "2020-06-25" "2020-06-18" "2020-06-23" "2020-06-19"
[111] "2020-07-02" "2020-06-21" "2020-06-29" "2020-06-24" "2020-07-11"
[116] "2020-06-22" "2020-06-26" "2020-07-09" "2020-06-27" "2020-07-06"
[121] "2020-06-30" "2020-07-01" "2020-07-03" "2020-07-04" "2020-07-08"
[126] "2020-07-10" "2020-07-12"
  [1] "19"  "34"  "50"  "55"  "25"  "27"  "85"  "22"  "28"  "36"  "42"  "74" 
 [13] "68"  "48"  "30"  "61"  "73"  "54"  "26"  "23"  "18"  "49"  "65"  "59" 
 [25] "72"  "45"  "29"  "21"  "79"  "52"  "71"  "24"  "44"  "38"  "31"  "41" 
 [37] "67"  "62"  "58"  "37"  "20"  "32"  "64"  "40"  "46"  "39"  "9"   "53" 
 [49] "56"  "51"  "69"  "16"  "57"  "60"  "33"  "76"  "47"  "35"  "88"  "70" 
 [61] "81"  "17"  "63"  "80"  "84"  "87"  "83"  "43"  "77"  "15"  "66"  "3"  
 [73] "82"  "12"  "8"   "1"   "5"   "6"   "75"  "2"   "0"   "13"  "4"   "78" 
 [85] "10"  "94"  "7"   "95"  "11"  "93"  "92"  "90"  "97"  "91"  "86"  "14" 
 [97] "96"  "98"  "89"  "103" "100" "99"  "102" "106" "101" "104" "111" "121"
[109] "120"
[1] "2020-03-06"
[1] "2020-03-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-31"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-14"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-15"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-16"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-17"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-18"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-19"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-14"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-15"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-16"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-17"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-18"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-19"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-31"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-14"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-15"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-16"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-17"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-18"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-19"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
Joining, by = "Region"
# A tibble: 1 x 3
  Region  Cases Deaths
  <chr>   <dbl>  <dbl>
1 All    146987   5255
Adding missing grouping variables: `Region`
# A tibble: 28 x 3
# Groups:   Region [14]
   Region    Measure Value
   <chr>     <chr>   <dbl>
 1 Amazonas  Cases    2307
 2 Amazonas  Deaths    100
 3 Antioquia Cases    9042
 4 Antioquia Deaths     92
 5 Atlantico Cases   32051
 6 Atlantico Deaths   1868
 7 Bogota    Cases   49605
 8 Bogota    Deaths   1076
 9 Bolivar   Cases   11739
10 Bolivar   Deaths    447
# ... with 18 more rows
[1] "All"

   Antioquia        Choco      Cordoba Cundinamarca      Guajira    Magdalena 
        4100         6560         6560         8610         1230        11890 
      Nariño  Santa Marta        Sucre 
       20910         6560         8200 
Auto-refreshing stale OAuth token.
Writing to "Colombia input"
Writing to sheet "database"
Writing to "Colombia_Bogota input"
Writing to sheet "database"
Writing to "Colombia_Atlantico input"
Writing to sheet "database"
Writing to "Colombia_Bolivar input"
Writing to sheet "database"
Writing to "Colombia_Valle del Cauca input"
Writing to sheet "database"
Writing to "Colombia_Amazonas input"
Writing to sheet "database"
Writing to "Colombia_others input"
Writing to sheet "database"
Auto-refreshing stale OAuth token.
Created Drive file:
  * CO13.07.2020cases&deaths: 1VEghRIhBWZXWW1i3YXiu0sqgZ-WaQ9Vb6Hn1QA7YpNI
with MIME type:
  * application/vnd.google-apps.spreadsheet
Writing to "CO13.07.2020cases&deaths"
Writing to sheet "cases&deaths_age_sex"
Writing to "CO13.07.2020cases&deaths"
Writing to sheet "tests"
Deleting these sheet(s) from "CO13.07.2020cases&deaths":
* Sheet1
-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.3.0     v purrr   0.3.4
v tibble  3.0.1     v dplyr   0.8.5
v tidyr   1.1.0     v stringr 1.4.0
v readr   1.3.1     v forcats 0.5.0
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()
Warnmeldungen:
1: Paket 'tidyverse' wurde unter R Version 3.6.3 erstellt 
2: Paket 'ggplot2' wurde unter R Version 3.6.3 erstellt 
3: Paket 'tibble' wurde unter R Version 3.6.3 erstellt 
4: Paket 'tidyr' wurde unter R Version 3.6.3 erstellt 
5: Paket 'readr' wurde unter R Version 3.6.3 erstellt 
6: Paket 'purrr' wurde unter R Version 3.6.3 erstellt 
7: Paket 'dplyr' wurde unter R Version 3.6.3 erstellt 
8: Paket 'stringr' wurde unter R Version 3.6.3 erstellt 
9: Paket 'forcats' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'lubridate'

The following objects are masked from 'package:dplyr':

    intersect, setdiff, union

The following objects are masked from 'package:base':

    date, intersect, setdiff, union

Warnmeldung:
Paket 'lubridate' wurde unter R Version 3.6.3 erstellt 
Warnmeldung:
Paket 'googlesheets4' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'googledrive'

The following objects are masked from 'package:googlesheets4':

    request_generate, request_make

Warnmeldung:
Paket 'googledrive' wurde unter R Version 3.6.3 erstellt 
Parsed with column specification:
cols(
  .default = col_character(),
  `ID de caso` = col_double(),
  `Fecha de notificación` = col_datetime(format = ""),
  Edad = col_double(),
  `Fecha de muerte` = col_datetime(format = ""),
  `Fecha diagnostico` = col_datetime(format = ""),
  `Fecha recuperado` = col_datetime(format = ""),
  `fecha reporte web` = col_datetime(format = ""),
  `Codigo departamento` = col_double(),
  `Codigo pais` = col_double()
)
See spec(...) for full column specifications.
Parsed with column specification:
cols(
  .default = col_double(),
  Fecha = col_character(),
  `Positividad acumulada` = col_number()
)
See spec(...) for full column specifications.
[1] "Leve"         "Asintomático" "Fallecido"    "Moderado"     "Grave"       
[6] "N/A"         
 [1] "Bogotá D.C."                                            
 [2] "Valle del Cauca"                                        
 [3] "Antioquia"                                              
 [4] "Cartagena D.T. y C."                                    
 [5] "Huila"                                                  
 [6] "Meta"                                                   
 [7] "Risaralda"                                              
 [8] "Norte de Santander"                                     
 [9] "Caldas"                                                 
[10] "Cundinamarca"                                           
[11] "Barranquilla D.E."                                      
[12] "Santander"                                              
[13] "Quindío"                                                
[14] "Tolima"                                                 
[15] "Cauca"                                                  
[16] "Santa Marta D.T. y C."                                  
[17] "Cesar"                                                  
[18] "Archipiélago de San Andrés Providencia y Santa Catalina"
[19] "Casanare"                                               
[20] "Nariño"                                                 
[21] "Atlántico"                                              
[22] "Boyacá"                                                 
[23] "Córdoba"                                                
[24] "Bolívar"                                                
[25] "Sucre"                                                  
[26] "Magdalena"                                              
[27] "La Guajira"                                             
[28] "Buenaventura D.E."                                      
[29] "Chocó"                                                  
[30] "Amazonas"                                               
[31] "Caquetá"                                                
[32] "Putumayo"                                               
[33] "Arauca"                                                 
[34] "Vaupés"                                                 
[35] "Guainía"                                                
[36] "Vichada"                                                
[37] "Guaviare"                                               
[1] "M" "F"
  [1] "2020-04-05" "2020-04-06" "2020-03-23" "2020-03-22" "2020-03-16"
  [6] "2020-03-26" "2020-03-25" "2020-04-04" "2020-04-15" "2020-04-09"
 [11] "2020-03-30" "2020-03-28" "2020-06-10" "2020-04-02" "2020-04-08"
 [16] "2020-03-27" "2020-04-12" "2020-04-03" "2020-04-24" "2020-04-21"
 [21] "2020-04-07" "2020-04-14" "2020-04-01" "2020-04-19" "2020-03-31"
 [26] "2020-04-10" "2020-04-18" "2020-04-11" "2020-03-29" "2020-04-28"
 [31] "2020-05-04" "2020-04-17" "2020-04-16" "2020-04-13" "2020-04-25"
 [36] "2020-03-24" "2020-05-01" "2020-05-31" "2020-04-29" "2020-05-11"
 [41] "2020-04-27" "2020-04-20" "2020-04-26" "2020-05-09" "2020-04-22"
 [46] "2020-05-07" "2020-04-23" "2020-05-02" "2020-04-30" "2020-05-06"
 [51] "2020-06-03" "2020-05-23" "2020-06-05" "2020-05-05" "2020-05-18"
 [56] "2020-05-03" "2020-05-08" "2020-05-17" "2020-05-29" "2020-05-22"
 [61] "2020-05-21" "2020-05-13" "2020-05-27" "2020-05-10" "2020-05-12"
 [66] "2020-06-02" "2020-06-29" "2020-05-28" "2020-06-01" "2020-05-15"
 [71] "2020-05-20" "2020-06-16" "2020-06-06" "2020-06-12" "2020-06-13"
 [76] "2020-05-26" "2020-05-14" "2020-05-19" "2020-05-30" "2020-05-24"
 [81] "2020-05-16" "2020-06-09" "2020-06-07" "2020-05-25" "2020-06-19"
 [86] "2020-06-14" "2020-07-12" "2020-06-25" "2020-06-17" "2020-06-15"
 [91] "2020-06-08" "2020-06-24" "2020-06-04" "2020-06-23" "2020-07-06"
 [96] "2020-07-08" "2020-06-30" "2020-06-18" "2020-07-02" "2020-06-21"
[101] "2020-06-11" "2020-06-22" "2020-06-20" "2020-07-01" "2020-07-03"
[106] "2020-06-27" "2020-07-11" "2020-07-04" "2020-06-26" "2020-07-09"
[111] "2020-07-07" "2020-06-28" "2020-07-05" "2020-07-10" "2020-07-13"
 [1] "Amazonas"        "Antioquia"       "Atlantico"       "Bogota"         
 [5] "Bolivar"         "Boyaca"          "Caldas"          "Caqueta"        
 [9] "Casanare"        "Cauca"           "Cesar"           "Choco"          
[13] "Cordoba"         "Cundinamarca"    "Guainia"         "Guajira"        
[17] "Huila"           "Magdalena"       "Meta"            "Nariño"         
[21] "Nte Santander"   "Putumayo"        "Quindio"         "Risaralda"      
[25] "Santa Marta"     "Santander"       "Sucre"           "Tolima"         
[29] "Valle del Cauca" "Vaupes"         
 [1] "Bogota"          "Valle del Cauca" "Antioquia"       "Bolivar"        
 [5] "resto"           "Cundinamarca"    "Atlantico"       "Santa Marta"    
 [9] "Nariño"          "Cordoba"         "Sucre"           "Magdalena"      
[13] "Guajira"         "Choco"           "Amazonas"       
# A tibble: 2 x 2
  Measure `sum(Value)`
  <chr>          <dbl>
1 Cases         154277
2 Deaths          5396
# A tibble: 30 x 3
# Groups:   Region [15]
   Region    Measure `sum(Value)`
   <chr>     <chr>          <dbl>
 1 Amazonas  Cases           2428
 2 Amazonas  Deaths           101
 3 Antioquia Cases           9582
 4 Antioquia Deaths           103
 5 Atlantico Cases          34585
 6 Atlantico Deaths          1902
 7 Bogota    Cases          51281
 8 Bogota    Deaths          1116
 9 Bolivar   Cases          12346
10 Bolivar   Deaths           453
# ... with 20 more rows
[1] "f" "m"
 [1] "Bogota"          "Valle del Cauca" "Antioquia"       "Bolivar"        
 [5] "resto"           "Cundinamarca"    "Atlantico"       "Santa Marta"    
 [9] "Nariño"          "Cordoba"         "Sucre"           "Magdalena"      
[13] "Guajira"         "Choco"           "Amazonas"       
  [1] "2020-03-06" "2020-03-09" "2020-03-11" "2020-03-12" "2020-03-13"
  [6] "2020-03-14" "2020-03-15" "2020-03-16" "2020-03-17" "2020-03-18"
 [11] "2020-03-19" "2020-03-20" "2020-03-21" "2020-03-22" "2020-03-23"
 [16] "2020-03-24" "2020-03-27" "2020-03-25" "2020-03-26" "2020-03-28"
 [21] "2020-03-29" "2020-03-30" "2020-03-31" "2020-04-01" "2020-04-02"
 [26] "2020-04-03" "2020-04-04" "2020-04-05" "2020-04-06" "2020-04-07"
 [31] "2020-04-08" "2020-04-09" "2020-04-10" "2020-04-11" "2020-04-12"
 [36] "2020-04-13" "2020-04-14" "2020-04-19" "2020-04-15" "2020-04-28"
 [41] "2020-04-16" "2020-04-17" "2020-04-18" "2020-04-20" "2020-04-22"
 [46] "2020-04-21" "2020-04-23" "2020-05-01" "2020-04-24" "2020-05-05"
 [51] "2020-04-25" "2020-04-26" "2020-04-27" "2020-04-29" "2020-04-30"
 [56] "2020-05-02" "2020-05-04" "2020-05-03" NA           "2020-05-06"
 [61] "2020-05-07" "2020-05-08" "2020-05-09" "2020-05-10" "2020-05-11"
 [66] "2020-05-12" "2020-05-13" "2020-07-05" "2020-05-14" "2020-05-15"
 [71] "2020-05-16" "2020-05-17" "2020-05-18" "2020-05-19" "2020-05-20"
 [76] "2020-05-29" "2020-05-21" "2020-05-22" "2020-07-07" "2020-05-23"
 [81] "2020-06-01" "2020-05-24" "2020-05-25" "2020-05-26" "2020-05-27"
 [86] "2020-05-28" "2020-05-30" "2020-05-31" "2020-06-03" "2020-06-02"
 [91] "2020-06-05" "2020-06-04" "2020-06-06" "2020-06-07" "2020-06-08"
 [96] "2020-06-28" "2020-06-09" "2020-06-10" "2020-06-11" "2020-06-12"
[101] "2020-06-16" "2020-06-13" "2020-06-14" "2020-06-15" "2020-06-17"
[106] "2020-06-20" "2020-06-25" "2020-06-18" "2020-06-23" "2020-06-19"
[111] "2020-07-02" "2020-06-21" "2020-06-29" "2020-06-24" "2020-07-11"
[116] "2020-06-22" "2020-06-26" "2020-07-09" "2020-06-27" "2020-07-06"
[121] "2020-06-30" "2020-07-01" "2020-07-03" "2020-07-04" "2020-07-08"
[126] "2020-07-10" "2020-07-12" "2020-07-13"
  [1] "19"  "34"  "50"  "55"  "25"  "27"  "85"  "22"  "28"  "36"  "42"  "74" 
 [13] "68"  "48"  "30"  "61"  "73"  "54"  "26"  "23"  "18"  "49"  "65"  "59" 
 [25] "72"  "45"  "29"  "21"  "79"  "52"  "71"  "24"  "44"  "38"  "31"  "41" 
 [37] "67"  "62"  "58"  "37"  "20"  "32"  "64"  "40"  "46"  "39"  "9"   "53" 
 [49] "56"  "51"  "69"  "16"  "57"  "60"  "33"  "76"  "47"  "35"  "88"  "70" 
 [61] "81"  "17"  "63"  "80"  "84"  "87"  "83"  "43"  "77"  "15"  "66"  "3"  
 [73] "82"  "12"  "8"   "1"   "5"   "6"   "75"  "2"   "0"   "13"  "4"   "78" 
 [85] "10"  "94"  "7"   "95"  "11"  "93"  "92"  "90"  "97"  "91"  "86"  "14" 
 [97] "96"  "98"  "89"  "103" "100" "99"  "102" "106" "101" "104"
[1] "2020-03-06"
[1] "2020-03-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-31"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-14"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-15"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-16"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-17"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-18"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-19"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-14"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-15"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-16"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-17"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-18"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-19"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-31"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-14"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-15"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-16"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-17"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-18"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-19"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
Joining, by = "Region"
# A tibble: 1 x 3
  Region  Cases Deaths
  <chr>   <dbl>  <dbl>
1 All    150732   5396
Adding missing grouping variables: `Region`
# A tibble: 28 x 3
# Groups:   Region [14]
   Region    Measure Value
   <chr>     <chr>   <dbl>
 1 Amazonas  Cases    2316
 2 Amazonas  Deaths    101
 3 Antioquia Cases    9369
 4 Antioquia Deaths    103
 5 Atlantico Cases   32910
 6 Atlantico Deaths   1902
 7 Bogota    Cases   51238
 8 Bogota    Deaths   1116
 9 Bolivar   Cases   11874
10 Bolivar   Deaths    453
# ... with 18 more rows
[1] "All"

   Antioquia        Choco      Cordoba Cundinamarca      Guajira    Magdalena 
        4510         6970         6970         9020         1640        12300 
      Nariño  Santa Marta        Sucre 
       21320         6970         8610 
Auto-refreshing stale OAuth token.
Writing to "Colombia input"
Writing to sheet "database"
Writing to "Colombia_Bogota input"
Writing to sheet "database"
Writing to "Colombia_Atlantico input"
Writing to sheet "database"
Writing to "Colombia_Bolivar input"
Writing to sheet "database"
Writing to "Colombia_Valle del Cauca input"
Writing to sheet "database"
Writing to "Colombia_Amazonas input"
Writing to sheet "database"
Writing to "Colombia_others input"
Writing to sheet "database"
Auto-refreshing stale OAuth token.
Created Drive file:
  * CO14.07.2020cases&deaths: 1PVietXkRuiMxmpJ9678pdePvD32lpBr5dLUWliuf6AU
with MIME type:
  * application/vnd.google-apps.spreadsheet
Writing to "CO14.07.2020cases&deaths"
Writing to sheet "cases&deaths_age_sex"
Fehler: Expected content type 'application/json' not 'text/html'.
<!DOCTYPE html>
<html lang=en>
  <meta charset=utf-8>
  <meta name=viewport content="initial-scale=1, minimum-scale=1, width=device-width">
  <title>Error 502 (Server Error)!!1</title>
  <style>
  ...
Ausführung angehalten
-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.3.0     v purrr   0.3.4
v tibble  3.0.1     v dplyr   0.8.5
v tidyr   1.1.0     v stringr 1.4.0
v readr   1.3.1     v forcats 0.5.0
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()
Warnmeldungen:
1: Paket 'tidyverse' wurde unter R Version 3.6.3 erstellt 
2: Paket 'ggplot2' wurde unter R Version 3.6.3 erstellt 
3: Paket 'tibble' wurde unter R Version 3.6.3 erstellt 
4: Paket 'tidyr' wurde unter R Version 3.6.3 erstellt 
5: Paket 'readr' wurde unter R Version 3.6.3 erstellt 
6: Paket 'purrr' wurde unter R Version 3.6.3 erstellt 
7: Paket 'dplyr' wurde unter R Version 3.6.3 erstellt 
8: Paket 'stringr' wurde unter R Version 3.6.3 erstellt 
9: Paket 'forcats' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'lubridate'

The following objects are masked from 'package:dplyr':

    intersect, setdiff, union

The following objects are masked from 'package:base':

    date, intersect, setdiff, union

Warnmeldung:
Paket 'lubridate' wurde unter R Version 3.6.3 erstellt 
Warnmeldung:
Paket 'googlesheets4' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'googledrive'

The following objects are masked from 'package:googlesheets4':

    request_generate, request_make

Warnmeldung:
Paket 'googledrive' wurde unter R Version 3.6.3 erstellt 
Parsed with column specification:
cols(
  .default = col_character(),
  `ID de caso` = col_double(),
  `Fecha de notificación` = col_datetime(format = ""),
  Edad = col_double(),
  `Fecha de muerte` = col_datetime(format = ""),
  `Fecha diagnostico` = col_datetime(format = ""),
  `Fecha recuperado` = col_datetime(format = ""),
  `fecha reporte web` = col_datetime(format = ""),
  `Codigo departamento` = col_double(),
  `Codigo pais` = col_double()
)
See spec(...) for full column specifications.
Parsed with column specification:
cols(
  .default = col_double(),
  Fecha = col_character(),
  `Positividad acumulada` = col_number()
)
See spec(...) for full column specifications.
[1] "Leve"         "Asintomático" "Fallecido"    "Moderado"     "Grave"       
[6] "N/A"         
 [1] "Bogotá D.C."                                            
 [2] "Valle del Cauca"                                        
 [3] "Antioquia"                                              
 [4] "Cartagena D.T. y C."                                    
 [5] "Huila"                                                  
 [6] "Meta"                                                   
 [7] "Risaralda"                                              
 [8] "Norte de Santander"                                     
 [9] "Caldas"                                                 
[10] "Cundinamarca"                                           
[11] "Barranquilla D.E."                                      
[12] "Santander"                                              
[13] "Quindío"                                                
[14] "Tolima"                                                 
[15] "Cauca"                                                  
[16] "Santa Marta D.T. y C."                                  
[17] "Cesar"                                                  
[18] "Archipiélago de San Andrés Providencia y Santa Catalina"
[19] "Casanare"                                               
[20] "Nariño"                                                 
[21] "Atlántico"                                              
[22] "Boyacá"                                                 
[23] "Córdoba"                                                
[24] "Bolívar"                                                
[25] "Sucre"                                                  
[26] "Magdalena"                                              
[27] "La Guajira"                                             
[28] "Buenaventura D.E."                                      
[29] "Chocó"                                                  
[30] "Amazonas"                                               
[31] "Caquetá"                                                
[32] "Putumayo"                                               
[33] "Arauca"                                                 
[34] "Vaupés"                                                 
[35] "Guainía"                                                
[36] "Vichada"                                                
[37] "Guaviare"                                               
Warnmeldung:
All formats failed to parse. No formats found. 
[1] "M" "F"
  [1] "2020-04-05" "2020-04-06" "2020-03-23" "2020-03-22" "2020-03-16"
  [6] "2020-03-26" "2020-03-25" "2020-04-04" "2020-04-15" "2020-04-09"
 [11] "2020-03-30" "2020-03-28" "2020-06-10" "2020-04-02" "2020-04-08"
 [16] "2020-03-27" "2020-04-12" "2020-04-03" "2020-04-24" "2020-04-21"
 [21] "2020-04-07" "2020-04-14" "2020-04-01" "2020-04-19" "2020-03-31"
 [26] "2020-04-10" "2020-04-18" "2020-04-11" "2020-03-29" "2020-04-28"
 [31] "2020-05-04" "2020-04-17" "2020-04-16" "2020-04-13" "2020-04-25"
 [36] "2020-03-24" "2020-05-01" "2020-05-31" "2020-04-29" "2020-05-11"
 [41] "2020-04-27" "2020-04-20" "2020-04-26" "2020-05-09" "2020-04-22"
 [46] "2020-05-07" "2020-04-23" "2020-05-02" "2020-04-30" "2020-05-06"
 [51] "2020-06-03" "2020-05-23" "2020-06-05" "2020-05-05" "2020-05-18"
 [56] "2020-05-03" "2020-05-08" "2020-05-17" "2020-05-29" "2020-05-22"
 [61] "2020-05-21" "2020-05-13" "2020-05-27" "2020-05-10" "2020-05-12"
 [66] "2020-06-02" "2020-06-29" "2020-05-28" "2020-06-01" "2020-05-15"
 [71] "2020-05-20" "2020-06-16" "2020-06-06" "2020-06-12" "2020-06-13"
 [76] "2020-05-26" "2020-05-14" "2020-05-19" "2020-05-30" "2020-05-24"
 [81] "2020-05-16" "2020-06-09" "2020-06-07" "2020-05-25" "2020-06-19"
 [86] "2020-06-14" "2020-07-12" "2020-06-25" "2020-06-17" "2020-06-15"
 [91] "2020-06-08" "2020-06-24" "2020-06-04" "2020-06-23" "2020-07-06"
 [96] "2020-07-08" "2020-06-30" "2020-06-18" "2020-07-02" "2020-06-21"
[101] "2020-06-11" "2020-06-22" "2020-06-20" "2020-07-01" "2020-07-03"
[106] "2020-06-27" "2020-07-11" "2020-07-04" "2020-06-26" "2020-07-09"
[111] "2020-07-07" "2020-06-28" "2020-07-05" "2020-07-10" "2020-07-13"
[116] "2020-07-14"
 [1] "Amazonas"        "Antioquia"       "Atlantico"       "Bogota"         
 [5] "Bolivar"         "Boyaca"          "Caldas"          "Caqueta"        
 [9] "Casanare"        "Cauca"           "Cesar"           "Choco"          
[13] "Cordoba"         "Cundinamarca"    "Guainia"         "Guajira"        
[17] "Huila"           "Magdalena"       "Meta"            "Nariño"         
[21] "Nte Santander"   "Putumayo"        "Quindio"         "Risaralda"      
[25] "Santa Marta"     "Santander"       "Sucre"           "Tolima"         
[29] "Valle del Cauca" "Vaupes"         
 [1] "Bogota"          "Valle del Cauca" "Antioquia"       "Bolivar"        
 [5] "resto"           "Cundinamarca"    "Atlantico"       "Santa Marta"    
 [9] "Nariño"          "Cordoba"         "Sucre"           "Magdalena"      
[13] "Guajira"         "Choco"           "Amazonas"       
# A tibble: 2 x 2
  Measure `sum(Value)`
  <chr>          <dbl>
1 Cases         159898
2 Deaths          5556
# A tibble: 30 x 3
# Groups:   Region [15]
   Region    Measure `sum(Value)`
   <chr>     <chr>          <dbl>
 1 Amazonas  Cases           2433
 2 Amazonas  Deaths           101
 3 Antioquia Cases          10576
 4 Antioquia Deaths           118
 5 Atlantico Cases          35649
 6 Atlantico Deaths          1942
 7 Bogota    Cases          53131
 8 Bogota    Deaths          1151
 9 Bolivar   Cases          12596
10 Bolivar   Deaths           456
# ... with 20 more rows
[1] "f" "m"
 [1] "Bogota"          "Valle del Cauca" "Antioquia"       "Bolivar"        
 [5] "resto"           "Cundinamarca"    "Atlantico"       "Santa Marta"    
 [9] "Nariño"          "Cordoba"         "Sucre"           "Magdalena"      
[13] "Guajira"         "Choco"           "Amazonas"       
  [1] NA           "2020-04-05" "2020-04-06" "2020-03-23" "2020-03-22"
  [6] "2020-03-16" "2020-03-26" "2020-03-25" "2020-04-04" "2020-04-15"
 [11] "2020-04-09" "2020-03-30" "2020-03-28" "2020-06-10" "2020-04-02"
 [16] "2020-04-08" "2020-03-27" "2020-04-12" "2020-04-03" "2020-04-24"
 [21] "2020-04-21" "2020-04-07" "2020-04-14" "2020-04-01" "2020-04-19"
 [26] "2020-03-31" "2020-04-10" "2020-04-18" "2020-04-11" "2020-03-29"
 [31] "2020-04-28" "2020-05-04" "2020-04-17" "2020-04-16" "2020-04-13"
 [36] "2020-04-25" "2020-03-24" "2020-05-01" "2020-05-31" "2020-04-29"
 [41] "2020-05-11" "2020-04-27" "2020-04-20" "2020-04-26" "2020-05-09"
 [46] "2020-04-22" "2020-05-07" "2020-04-23" "2020-05-02" "2020-04-30"
 [51] "2020-05-06" "2020-06-03" "2020-05-23" "2020-06-05" "2020-05-05"
 [56] "2020-05-18" "2020-05-03" "2020-05-08" "2020-05-17" "2020-05-29"
 [61] "2020-05-22" "2020-05-21" "2020-05-13" "2020-05-27" "2020-05-10"
 [66] "2020-05-12" "2020-06-02" "2020-06-29" "2020-05-28" "2020-06-01"
 [71] "2020-05-15" "2020-05-20" "2020-06-16" "2020-06-06" "2020-06-12"
 [76] "2020-06-13" "2020-05-26" "2020-05-14" "2020-05-19" "2020-05-30"
 [81] "2020-05-24" "2020-05-16" "2020-06-09" "2020-06-07" "2020-05-25"
 [86] "2020-06-19" "2020-06-14" "2020-07-12" "2020-06-25" "2020-06-17"
 [91] "2020-06-15" "2020-06-08" "2020-06-24" "2020-06-04" "2020-06-23"
 [96] "2020-07-06" "2020-07-08" "2020-06-30" "2020-06-18" "2020-07-02"
[101] "2020-06-21" "2020-06-11" "2020-06-22" "2020-06-20" "2020-07-01"
[106] "2020-07-03" "2020-06-27" "2020-07-11" "2020-07-04" "2020-06-26"
[111] "2020-07-09" "2020-07-07" "2020-06-28" "2020-07-05" "2020-07-10"
[116] "2020-07-13" "2020-07-14"
  [1] "19"  "34"  "50"  "55"  "25"  "27"  "85"  "22"  "28"  "36"  "42"  "74" 
 [13] "68"  "48"  "30"  "61"  "73"  "54"  "26"  "23"  "18"  "49"  "65"  "59" 
 [25] "72"  "45"  "29"  "21"  "79"  "52"  "71"  "24"  "44"  "38"  "31"  "41" 
 [37] "67"  "62"  "58"  "37"  "20"  "32"  "64"  "40"  "46"  "39"  "9"   "53" 
 [49] "56"  "51"  "69"  "16"  "57"  "60"  "33"  "76"  "47"  "35"  "88"  "70" 
 [61] "81"  "17"  "63"  "80"  "84"  "87"  "83"  "43"  "77"  "15"  "66"  "3"  
 [73] "82"  "12"  "8"   "1"   "5"   "6"   "75"  "2"   "0"   "13"  "4"   "78" 
 [85] "10"  "94"  "7"   "95"  "11"  "93"  "92"  "90"  "97"  "91"  "86"  "14" 
 [97] "96"  "98"  "89"  "103" "100" "99"  "102" "106" "101" "104"
[1] "2020-03-16"
[1] "2020-03-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-31"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-14"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-15"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-16"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-17"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-18"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-19"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-14"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-15"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-16"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-17"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-18"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-19"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-31"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-14"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-15"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-16"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-17"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-18"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-19"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-20"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-21"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-22"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-23"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-24"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-25"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-26"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-27"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-28"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-29"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-30"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-01"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-02"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-03"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-04"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-05"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-06"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-07"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-08"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-09"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-10"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-11"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-12"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-13"
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-14"
Joining, by = c("Region", "Sex", "Measure", "Age")
Joining, by = "Region"
# A tibble: 1 x 3
  Region Cases Deaths
  <chr>  <dbl>  <dbl>
1 All        0   5556
Adding missing grouping variables: `Region`
# A tibble: 28 x 3
# Groups:   Region [14]
   Region    Measure Value
   <chr>     <chr>   <dbl>
 1 Amazonas  Cases       0
 2 Amazonas  Deaths    101
 3 Antioquia Cases       0
 4 Antioquia Deaths    118
 5 Atlantico Cases       0
 6 Atlantico Deaths   1942
 7 Bogota    Cases       0
 8 Bogota    Deaths   1151
 9 Bolivar   Cases       0
10 Bolivar   Deaths    456
# ... with 18 more rows
[1] "All"

   Antioquia        Choco      Cordoba Cundinamarca      Guajira    Magdalena 
        4920         8610         7380         9430         2870        12710 
      Nariño  Santa Marta        Sucre 
       21730         7380         9020 
Auto-refreshing stale OAuth token.
Writing to "Colombia input"
Writing to sheet "database"
Writing to "Colombia_Bogota input"
Writing to sheet "database"
Writing to "Colombia_Atlantico input"
Writing to sheet "database"
Writing to "Colombia_Bolivar input"
Writing to sheet "database"
Writing to "Colombia_Valle del Cauca input"
Writing to sheet "database"
Writing to "Colombia_Amazonas input"
Writing to sheet "database"
Writing to "Colombia_others input"
Writing to sheet "database"
Auto-refreshing stale OAuth token.
Created Drive file:
  * CO15.07.2020cases&deaths: 128V4SLBuDUYtRfrfzhFrGV9B7V0cEHOKsamCEhVzKB4
with MIME type:
  * application/vnd.google-apps.spreadsheet
Writing to "CO15.07.2020cases&deaths"
Writing to sheet "cases&deaths_age_sex"
Fehler: Server error: (503) UNAVAILABLE
  * Service unavailable. Typically the server is down.
  * The service is currently unavailable.
Backtrace:
    x
 1. \-googlesheets4::write_sheet(db_muestras, ss = meta$id, sheet = "tests")
 2.   \-googlesheets4::gs4_get(ssid)
 3.     \-googlesheets4:::gs4_get_impl_(as_sheets_id(ss))
 4.       \-gargle::response_process(raw_resp)
 5.         \-gargle:::stop_request_failed(error_message(resp), resp)
Ausführung angehalten
-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.3.0     v purrr   0.3.4
v tibble  3.0.3     v dplyr   1.0.0
v tidyr   1.1.0     v stringr 1.4.0
v readr   1.3.1     v forcats 0.5.0
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()
Warnmeldungen:
1: Paket 'tidyverse' wurde unter R Version 3.6.3 erstellt 
2: Paket 'ggplot2' wurde unter R Version 3.6.3 erstellt 
3: Paket 'tibble' wurde unter R Version 3.6.3 erstellt 
4: Paket 'tidyr' wurde unter R Version 3.6.3 erstellt 
5: Paket 'readr' wurde unter R Version 3.6.3 erstellt 
6: Paket 'purrr' wurde unter R Version 3.6.3 erstellt 
7: Paket 'dplyr' wurde unter R Version 3.6.3 erstellt 
8: Paket 'stringr' wurde unter R Version 3.6.3 erstellt 
9: Paket 'forcats' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'lubridate'

The following objects are masked from 'package:base':

    date, intersect, setdiff, union

Warnmeldung:
Paket 'lubridate' wurde unter R Version 3.6.3 erstellt 
Warnmeldung:
Paket 'googlesheets4' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'googledrive'

The following objects are masked from 'package:googlesheets4':

    request_generate, request_make

Warnmeldung:
Paket 'googledrive' wurde unter R Version 3.6.3 erstellt 
Parsed with column specification:
cols(
  .default = col_character(),
  `ID de caso` = col_double(),
  `Fecha de notificación` = col_datetime(format = ""),
  Edad = col_double(),
  `Fecha de muerte` = col_datetime(format = ""),
  `Fecha diagnostico` = col_datetime(format = ""),
  `Fecha recuperado` = col_datetime(format = ""),
  `fecha reporte web` = col_datetime(format = ""),
  `Codigo departamento` = col_double(),
  `Codigo pais` = col_double()
)
See spec(...) for full column specifications.
Parsed with column specification:
cols(
  .default = col_double(),
  Fecha = col_character(),
  `Positividad acumulada` = col_number()
)
See spec(...) for full column specifications.
[1] "Leve"         "Asintomático" "Fallecido"    "Moderado"     "Grave"       
[6] "N/A"         
 [1] "Bogotá D.C."                                            
 [2] "Valle del Cauca"                                        
 [3] "Antioquia"                                              
 [4] "Cartagena D.T. y C."                                    
 [5] "Huila"                                                  
 [6] "Meta"                                                   
 [7] "Risaralda"                                              
 [8] "Norte de Santander"                                     
 [9] "Caldas"                                                 
[10] "Cundinamarca"                                           
[11] "Barranquilla D.E."                                      
[12] "Santander"                                              
[13] "Quindío"                                                
[14] "Tolima"                                                 
[15] "Cauca"                                                  
[16] "Santa Marta D.T. y C."                                  
[17] "Cesar"                                                  
[18] "Archipiélago de San Andrés Providencia y Santa Catalina"
[19] "Casanare"                                               
[20] "Nariño"                                                 
[21] "Atlántico"                                              
[22] "Boyacá"                                                 
[23] "Córdoba"                                                
[24] "Bolívar"                                                
[25] "Sucre"                                                  
[26] "Magdalena"                                              
[27] "La Guajira"                                             
[28] "Buenaventura D.E."                                      
[29] "Chocó"                                                  
[30] "Amazonas"                                               
[31] "Caquetá"                                                
[32] "Putumayo"                                               
[33] "Arauca"                                                 
[34] "Vaupés"                                                 
[35] "Guainía"                                                
[36] "Vichada"                                                
[37] "Guaviare"                                               
`summarise()` ungrouping output (override with `.groups` argument)
[1] "M" "F"
  [1] "2020-04-05" "2020-04-06" "2020-03-23" "2020-03-22" "2020-03-16"
  [6] "2020-03-26" "2020-03-25" "2020-04-04" "2020-04-15" "2020-04-09"
 [11] "2020-03-30" "2020-03-28" "2020-06-10" "2020-04-02" "2020-04-08"
 [16] "2020-03-27" "2020-04-12" "2020-04-03" "2020-04-24" "2020-04-21"
 [21] "2020-04-07" "2020-04-14" "2020-04-01" "2020-04-19" "2020-03-31"
 [26] "2020-04-10" "2020-04-18" "2020-04-11" "2020-03-29" "2020-04-28"
 [31] "2020-05-04" "2020-04-17" "2020-04-16" "2020-04-13" "2020-04-25"
 [36] "2020-03-24" "2020-05-01" "2020-05-31" "2020-04-29" "2020-05-11"
 [41] "2020-04-27" "2020-04-20" "2020-04-26" "2020-05-09" "2020-04-22"
 [46] "2020-05-07" "2020-04-23" "2020-05-02" "2020-04-30" "2020-05-06"
 [51] "2020-06-03" "2020-05-23" "2020-06-05" "2020-05-05" "2020-05-18"
 [56] "2020-05-03" "2020-05-08" "2020-05-17" "2020-05-29" "2020-05-22"
 [61] "2020-05-21" "2020-05-13" "2020-05-27" "2020-05-10" "2020-05-12"
 [66] "2020-06-02" "2020-06-29" "2020-05-28" "2020-06-01" "2020-05-15"
 [71] "2020-05-20" "2020-06-16" "2020-06-06" "2020-06-12" "2020-06-13"
 [76] "2020-05-26" "2020-05-14" "2020-05-19" "2020-05-30" "2020-05-24"
 [81] "2020-05-16" "2020-06-09" "2020-06-07" "2020-05-25" "2020-06-19"
 [86] "2020-06-14" "2020-07-12" "2020-06-25" "2020-06-17" "2020-06-15"
 [91] "2020-06-08" "2020-06-24" "2020-06-04" "2020-06-23" "2020-07-06"
 [96] "2020-07-08" "2020-06-30" "2020-06-18" "2020-07-02" "2020-06-21"
[101] "2020-06-11" "2020-06-22" "2020-06-20" "2020-07-01" "2020-07-03"
[106] "2020-06-27" "2020-07-11" "2020-07-04" "2020-06-26" "2020-07-09"
[111] "2020-07-07" "2020-06-28" "2020-07-05" "2020-07-10" "2020-07-13"
[116] "2020-07-14"
 [1] "Amazonas"        "Antioquia"       "Atlantico"       "Bogota"         
 [5] "Bolivar"         "Boyaca"          "Caldas"          "Caqueta"        
 [9] "Casanare"        "Cauca"           "Cesar"           "Choco"          
[13] "Cordoba"         "Cundinamarca"    "Guainia"         "Guajira"        
[17] "Huila"           "Magdalena"       "Meta"            "Nariño"         
[21] "Nte Santander"   "Putumayo"        "Quindio"         "Risaralda"      
[25] "Santa Marta"     "Santander"       "Sucre"           "Tolima"         
[29] "Valle del Cauca" "Vaupes"         
 [1] "Bogota"          "Valle del Cauca" "Antioquia"       "Bolivar"        
 [5] "resto"           "Cundinamarca"    "Atlantico"       "Santa Marta"    
 [9] "Nariño"          "Cordoba"         "Sucre"           "Magdalena"      
[13] "Guajira"         "Choco"           "Amazonas"       
`summarise()` ungrouping output (override with `.groups` argument)
# A tibble: 2 x 2
  Measure `sum(Value)`
  <chr>          <dbl>
1 Cases         165169
2 Deaths          5721
`summarise()` regrouping output by 'Region' (override with `.groups` argument)
# A tibble: 30 x 3
# Groups:   Region [15]
   Region    Measure `sum(Value)`
   <chr>     <chr>          <dbl>
 1 Amazonas  Cases           2433
 2 Amazonas  Deaths           101
 3 Antioquia Cases          11351
 4 Antioquia Deaths           127
 5 Atlantico Cases          36425
 6 Atlantico Deaths          1983
 7 Bogota    Cases          55056
 8 Bogota    Deaths          1200
 9 Bolivar   Cases          12845
10 Bolivar   Deaths           460
# ... with 20 more rows
[1] "f" "m"
 [1] "Bogota"          "Valle del Cauca" "Antioquia"       "Bolivar"        
 [5] "resto"           "Cundinamarca"    "Atlantico"       "Santa Marta"    
 [9] "Nariño"          "Cordoba"         "Sucre"           "Magdalena"      
[13] "Guajira"         "Choco"           "Amazonas"       
  [1] "2020-03-06" "2020-03-09" "2020-03-11" "2020-03-12" "2020-03-13"
  [6] "2020-03-14" "2020-03-15" "2020-03-16" "2020-03-17" "2020-03-18"
 [11] "2020-03-19" "2020-03-20" "2020-03-21" "2020-03-22" "2020-03-23"
 [16] "2020-03-24" "2020-03-27" "2020-03-25" "2020-03-26" "2020-03-28"
 [21] "2020-03-29" "2020-03-30" "2020-03-31" "2020-04-01" "2020-04-02"
 [26] "2020-04-03" "2020-04-04" "2020-04-05" "2020-04-06" "2020-04-07"
 [31] "2020-04-08" "2020-04-09" "2020-04-10" "2020-04-11" "2020-04-12"
 [36] "2020-04-13" "2020-04-14" "2020-04-19" "2020-04-15" "2020-04-28"
 [41] "2020-04-16" "2020-04-17" "2020-04-18" "2020-04-20" "2020-04-22"
 [46] "2020-04-21" "2020-04-23" "2020-05-01" "2020-04-24" "2020-05-05"
 [51] "2020-04-25" "2020-04-26" "2020-04-27" "2020-04-29" "2020-04-30"
 [56] "2020-05-02" "2020-05-04" "2020-05-03" NA           "2020-05-06"
 [61] "2020-05-07" "2020-05-08" "2020-05-09" "2020-05-10" "2020-05-11"
 [66] "2020-05-12" "2020-05-13" "2020-07-05" "2020-05-14" "2020-05-15"
 [71] "2020-05-16" "2020-05-17" "2020-05-18" "2020-05-19" "2020-05-20"
 [76] "2020-05-29" "2020-05-21" "2020-05-22" "2020-07-07" "2020-05-23"
 [81] "2020-06-01" "2020-05-24" "2020-05-25" "2020-05-26" "2020-05-27"
 [86] "2020-05-28" "2020-05-30" "2020-05-31" "2020-06-03" "2020-06-02"
 [91] "2020-06-05" "2020-06-04" "2020-06-06" "2020-06-07" "2020-06-08"
 [96] "2020-06-28" "2020-06-09" "2020-06-10" "2020-06-11" "2020-06-12"
[101] "2020-06-16" "2020-06-13" "2020-06-14" "2020-06-15" "2020-06-17"
[106] "2020-06-20" "2020-06-25" "2020-06-18" "2020-06-23" "2020-06-19"
[111] "2020-07-02" "2020-06-21" "2020-06-29" "2020-06-24" "2020-07-11"
[116] "2020-06-22" "2020-06-26" "2020-07-09" "2020-06-27" "2020-07-06"
[121] "2020-06-30" "2020-07-01" "2020-07-03" "2020-07-04" "2020-07-08"
[126] "2020-07-10" "2020-07-12" "2020-07-13" "2020-07-14" "2020-07-15"
  [1] "19"  "34"  "50"  "55"  "25"  "27"  "85"  "22"  "28"  "36"  "42"  "74" 
 [13] "68"  "48"  "30"  "61"  "73"  "54"  "26"  "23"  "18"  "49"  "65"  "59" 
 [25] "72"  "45"  "29"  "21"  "79"  "52"  "71"  "24"  "44"  "38"  "31"  "41" 
 [37] "67"  "62"  "58"  "37"  "20"  "32"  "64"  "40"  "46"  "39"  "9"   "53" 
 [49] "56"  "51"  "69"  "16"  "57"  "60"  "33"  "76"  "47"  "35"  "88"  "70" 
 [61] "81"  "17"  "63"  "80"  "84"  "87"  "83"  "43"  "77"  "15"  "66"  "3"  
 [73] "82"  "12"  "8"   "1"   "5"   "6"   "75"  "2"   "0"   "13"  "4"   "78" 
 [85] "10"  "94"  "7"   "95"  "11"  "93"  "92"  "90"  "97"  "91"  "86"  "14" 
 [97] "96"  "98"  "89"  "103" "100" "99"  "102" "106" "101" "104"
[1] "2020-03-06"
[1] "2020-03-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-30"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-31"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-01"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-02"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-03"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-04"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-05"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-06"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-07"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-08"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-09"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-10"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-11"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-12"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-13"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-14"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-15"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-16"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-17"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-18"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-19"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-30"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-01"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-02"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-03"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-04"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-05"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-06"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-07"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-08"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-09"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-10"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-11"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-12"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-13"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-14"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-15"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-16"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-17"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-18"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-19"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-30"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-31"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-01"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-02"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-03"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-04"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-05"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-06"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-07"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-08"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-09"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-10"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-11"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-12"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-13"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-14"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-15"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-16"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-17"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-18"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-19"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-30"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-01"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-02"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-03"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-04"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-05"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-06"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-07"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-08"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-09"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-10"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-11"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-12"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-13"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-14"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-15"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
`summarise()` ungrouping output (override with `.groups` argument)
Joining, by = "Region"
`summarise()` regrouping output by 'date_f', 'Age', 'Sex' (override with `.groups` argument)
# A tibble: 1 x 3
  Region  Cases Deaths
  <chr>   <dbl>  <dbl>
1 All    161492   5721
Adding missing grouping variables: `Region`
# A tibble: 28 x 3
# Groups:   Region [14]
   Region    Measure Value
   <chr>     <chr>   <dbl>
 1 Amazonas  Cases    2321
 2 Amazonas  Deaths    101
 3 Antioquia Cases   11127
 4 Antioquia Deaths    127
 5 Atlantico Cases   34676
 6 Atlantico Deaths   1983
 7 Bogota    Cases   55006
 8 Bogota    Deaths   1200
 9 Bolivar   Cases   12359
10 Bolivar   Deaths    460
# ... with 18 more rows
[1] "All"

   Antioquia        Choco      Cordoba Cundinamarca      Guajira    Magdalena 
        5330         9430         7790         9840         3280        13120 
      Nariño  Santa Marta        Sucre 
       22140         7790         9430 
Auto-refreshing stale OAuth token.
Fehler: Client error: (429) RESOURCE_EXHAUSTED
  * Either out of resource quota or reaching rate limiting. The client should look for google.rpc.QuotaFailure error detail for more information.
  * Quota exceeded for quota group 'ReadGroup' and limit 'Read requests per 100 seconds' of service 'sheets.googleapis.com' for consumer 'project_number:603366585132'.

Error details:
  * Error details of type 'google.rpc.Help' are not implemented yet.
  * Workaround: use `tryCatch()` and inspect error payload yourself.
  * Please open an issue at https://github.com/r-lib/gargle/issues, so we can fix.
Backtrace:
    x
 1. \-googlesheets4::write_sheet(...)
 2.   \-googlesheets4::gs4_get(ssid)
 3.     \-googlesheets4:::gs4_get_impl_(as_sheets_id(ss))
 4.       \-gargle::response_process(raw_resp)
 5.         \-gargle:::stop_request_failed(error_message(resp), resp)
Ausführung angehalten
-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.3.0     v purrr   0.3.4
v tibble  3.0.3     v dplyr   1.0.0
v tidyr   1.1.0     v stringr 1.4.0
v readr   1.3.1     v forcats 0.5.0
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()
Warnmeldungen:
1: Paket 'tidyverse' wurde unter R Version 3.6.3 erstellt 
2: Paket 'ggplot2' wurde unter R Version 3.6.3 erstellt 
3: Paket 'tibble' wurde unter R Version 3.6.3 erstellt 
4: Paket 'tidyr' wurde unter R Version 3.6.3 erstellt 
5: Paket 'readr' wurde unter R Version 3.6.3 erstellt 
6: Paket 'purrr' wurde unter R Version 3.6.3 erstellt 
7: Paket 'dplyr' wurde unter R Version 3.6.3 erstellt 
8: Paket 'stringr' wurde unter R Version 3.6.3 erstellt 
9: Paket 'forcats' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'lubridate'

The following objects are masked from 'package:base':

    date, intersect, setdiff, union

Warnmeldung:
Paket 'lubridate' wurde unter R Version 3.6.3 erstellt 
Warnmeldung:
Paket 'googlesheets4' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'googledrive'

The following objects are masked from 'package:googlesheets4':

    request_generate, request_make

Warnmeldung:
Paket 'googledrive' wurde unter R Version 3.6.3 erstellt 
Parsed with column specification:
cols(
  .default = col_character(),
  `ID de caso` = col_double(),
  `Fecha de notificación` = col_datetime(format = ""),
  Edad = col_double(),
  `Fecha de muerte` = col_datetime(format = ""),
  `Fecha diagnostico` = col_datetime(format = ""),
  `Fecha recuperado` = col_datetime(format = ""),
  `fecha reporte web` = col_datetime(format = ""),
  `Codigo departamento` = col_double(),
  `Codigo pais` = col_double()
)
See spec(...) for full column specifications.
Parsed with column specification:
cols(
  .default = col_double(),
  Fecha = col_character(),
  `Positividad acumulada` = col_number()
)
See spec(...) for full column specifications.
[1] "Leve"         "Asintomático" "Fallecido"    "Moderado"     "Grave"       
[6] "N/A"         
 [1] "Bogotá D.C."                                            
 [2] "Valle del Cauca"                                        
 [3] "Antioquia"                                              
 [4] "Cartagena D.T. y C."                                    
 [5] "Huila"                                                  
 [6] "Meta"                                                   
 [7] "Risaralda"                                              
 [8] "Norte de Santander"                                     
 [9] "Caldas"                                                 
[10] "Cundinamarca"                                           
[11] "Barranquilla D.E."                                      
[12] "Santander"                                              
[13] "Quindío"                                                
[14] "Tolima"                                                 
[15] "Cauca"                                                  
[16] "Santa Marta D.T. y C."                                  
[17] "Cesar"                                                  
[18] "Archipiélago de San Andrés Providencia y Santa Catalina"
[19] "Casanare"                                               
[20] "Nariño"                                                 
[21] "Atlántico"                                              
[22] "Boyacá"                                                 
[23] "Córdoba"                                                
[24] "Bolívar"                                                
[25] "Sucre"                                                  
[26] "Magdalena"                                              
[27] "La Guajira"                                             
[28] "Buenaventura D.E."                                      
[29] "Chocó"                                                  
[30] "Amazonas"                                               
[31] "Caquetá"                                                
[32] "Putumayo"                                               
[33] "Arauca"                                                 
[34] "Vaupés"                                                 
[35] "Guainía"                                                
[36] "Vichada"                                                
[37] "Guaviare"                                               
`summarise()` ungrouping output (override with `.groups` argument)
[1] "M" "F"
  [1] "2020-04-05" "2020-04-06" "2020-03-23" "2020-03-22" "2020-03-16"
  [6] "2020-03-26" "2020-03-25" "2020-04-04" "2020-04-15" "2020-04-09"
 [11] "2020-03-30" "2020-03-28" "2020-06-10" "2020-04-02" "2020-04-08"
 [16] "2020-03-27" "2020-04-12" "2020-04-03" "2020-04-24" "2020-04-21"
 [21] "2020-04-07" "2020-04-14" "2020-04-01" "2020-04-19" "2020-03-31"
 [26] "2020-04-10" "2020-04-18" "2020-04-11" "2020-03-29" "2020-04-28"
 [31] "2020-05-04" "2020-04-17" "2020-04-16" "2020-04-13" "2020-04-25"
 [36] "2020-03-24" "2020-05-01" "2020-05-31" "2020-04-29" "2020-05-11"
 [41] "2020-04-27" "2020-04-20" "2020-04-26" "2020-05-09" "2020-04-22"
 [46] "2020-05-07" "2020-04-23" "2020-05-02" "2020-04-30" "2020-05-06"
 [51] "2020-06-03" "2020-05-23" "2020-06-05" "2020-05-05" "2020-05-18"
 [56] "2020-05-03" "2020-05-08" "2020-05-17" "2020-05-29" "2020-05-22"
 [61] "2020-05-21" "2020-05-13" "2020-05-27" "2020-05-10" "2020-05-12"
 [66] "2020-06-02" "2020-06-29" "2020-05-28" "2020-06-01" "2020-05-15"
 [71] "2020-05-20" "2020-06-16" "2020-06-06" "2020-06-12" "2020-06-13"
 [76] "2020-05-26" "2020-05-14" "2020-05-19" "2020-05-30" "2020-05-24"
 [81] "2020-05-16" "2020-06-09" "2020-06-07" "2020-05-25" "2020-07-19"
 [86] "2020-06-19" "2020-06-14" "2020-07-12" "2020-06-25" "2020-06-17"
 [91] "2020-06-15" "2020-06-08" "2020-06-24" "2020-06-04" "2020-06-23"
 [96] "2020-07-06" "2020-07-08" "2020-06-30" "2020-07-15" "2020-06-18"
[101] "2020-07-02" "2020-06-21" "2020-06-11" "2020-06-22" "2020-06-20"
[106] "2020-07-01" "2020-07-17" "2020-07-03" "2020-06-27" "2020-07-11"
[111] "2020-07-04" "2020-06-26" "2020-07-09" "2020-07-07" "2020-07-16"
[116] "2020-06-28" "2020-07-18" "2020-07-05" "2020-07-10" "2020-07-13"
[121] "2020-07-14"
 [1] "Amazonas"        "Antioquia"       "Atlantico"       "Bogota"         
 [5] "Bolivar"         "Boyaca"          "Caldas"          "Caqueta"        
 [9] "Casanare"        "Cauca"           "Cesar"           "Choco"          
[13] "Cordoba"         "Cundinamarca"    "Guainia"         "Guajira"        
[17] "Huila"           "Magdalena"       "Meta"            "Nariño"         
[21] "Nte Santander"   "Putumayo"        "Quindio"         "Risaralda"      
[25] "Santa Marta"     "Santander"       "Sucre"           "Tolima"         
[29] "Valle del Cauca" "Vaupes"         
 [1] "Bogota"          "Valle del Cauca" "Antioquia"       "Bolivar"        
 [5] "resto"           "Cundinamarca"    "Atlantico"       "Santa Marta"    
 [9] "Nariño"          "Cordoba"         "Sucre"           "Magdalena"      
[13] "Guajira"         "Choco"           "Amazonas"       
`summarise()` ungrouping output (override with `.groups` argument)
# A tibble: 2 x 2
  Measure `sum(Value)`
  <chr>          <dbl>
1 Cases         204005
2 Deaths          6929
`summarise()` regrouping output by 'Region' (override with `.groups` argument)
# A tibble: 30 x 3
# Groups:   Region [15]
   Region    Measure `sum(Value)`
   <chr>     <chr>          <dbl>
 1 Amazonas  Cases           2458
 2 Amazonas  Deaths           101
 3 Antioquia Cases          16840
 4 Antioquia Deaths           203
 5 Atlantico Cases          44704
 6 Atlantico Deaths          2208
 7 Bogota    Cases          65594
 8 Bogota    Deaths          1627
 9 Bolivar   Cases          15208
10 Bolivar   Deaths           506
# ... with 20 more rows
[1] "f" "m"
 [1] "Bogota"          "Valle del Cauca" "Antioquia"       "Bolivar"        
 [5] "resto"           "Cundinamarca"    "Atlantico"       "Santa Marta"    
 [9] "Nariño"          "Cordoba"         "Sucre"           "Magdalena"      
[13] "Guajira"         "Choco"           "Amazonas"       
  [1] "2020-03-06" "2020-03-09" "2020-03-11" "2020-03-12" "2020-03-13"
  [6] "2020-03-14" "2020-03-15" "2020-03-16" "2020-03-17" "2020-03-18"
 [11] "2020-03-19" "2020-03-20" "2020-03-21" "2020-03-22" "2020-03-23"
 [16] "2020-03-24" "2020-03-27" "2020-03-25" "2020-03-26" "2020-03-28"
 [21] "2020-03-29" "2020-03-30" "2020-03-31" "2020-04-01" "2020-04-02"
 [26] "2020-04-03" "2020-04-04" "2020-04-05" "2020-04-06" "2020-04-07"
 [31] "2020-04-08" "2020-04-09" "2020-04-10" "2020-04-11" "2020-04-12"
 [36] "2020-04-13" "2020-04-14" "2020-04-19" "2020-04-15" "2020-04-28"
 [41] "2020-04-16" "2020-04-17" "2020-04-18" "2020-04-20" "2020-04-22"
 [46] "2020-04-21" "2020-04-23" "2020-05-01" "2020-04-24" "2020-05-05"
 [51] "2020-04-25" "2020-04-26" "2020-04-27" "2020-04-29" "2020-04-30"
 [56] "2020-05-02" "2020-05-04" "2020-05-03" NA           "2020-05-06"
 [61] "2020-05-07" "2020-05-08" "2020-05-09" "2020-05-10" "2020-05-11"
 [66] "2020-05-12" "2020-05-13" "2020-07-05" "2020-05-14" "2020-05-15"
 [71] "2020-05-16" "2020-05-17" "2020-05-18" "2020-05-19" "2020-05-20"
 [76] "2020-05-29" "2020-05-21" "2020-05-22" "2020-07-07" "2020-05-23"
 [81] "2020-06-01" "2020-05-24" "2020-05-25" "2020-05-26" "2020-05-27"
 [86] "2020-05-28" "2020-05-30" "2020-05-31" "2020-06-03" "2020-06-02"
 [91] "2020-06-05" "2020-06-04" "2020-06-06" "2020-06-07" "2020-06-26"
 [96] "2020-06-08" "2020-06-28" "2020-06-09" "2020-06-10" "2020-06-11"
[101] "2020-06-12" "2020-06-16" "2020-06-13" "2020-06-14" "2020-07-19"
[106] "2020-06-15" "2020-06-17" "2020-06-20" "2020-07-17" "2020-06-25"
[111] "2020-06-18" "2020-06-23" "2020-06-19" "2020-07-02" "2020-06-21"
[116] "2020-07-04" "2020-07-01" "2020-06-29" "2020-06-30" "2020-07-16"
[121] "2020-07-03" "2020-06-22" "2020-06-24" "2020-07-11" "2020-07-09"
[126] "2020-07-08" "2020-06-27" "2020-07-14" "2020-07-18" "2020-07-06"
[131] "2020-07-10" "2020-07-12" "2020-07-13" "2020-07-15" "2020-07-20"
  [1] "19"  "34"  "50"  "55"  "25"  "27"  "85"  "22"  "28"  "36"  "42"  "74" 
 [13] "68"  "48"  "30"  "61"  "73"  "54"  "26"  "23"  "18"  "49"  "65"  "59" 
 [25] "72"  "45"  "29"  "21"  "79"  "52"  "71"  "24"  "44"  "38"  "31"  "41" 
 [37] "67"  "62"  "58"  "37"  "20"  "32"  "64"  "40"  "46"  "39"  "9"   "53" 
 [49] "56"  "51"  "69"  "16"  "57"  "60"  "33"  "76"  "47"  "35"  "88"  "70" 
 [61] "81"  "17"  "63"  "80"  "84"  "87"  "83"  "43"  "77"  "15"  "66"  "3"  
 [73] "82"  "12"  "8"   "1"   "5"   "6"   "75"  "2"   "0"   "13"  "4"   "78" 
 [85] "10"  "94"  "7"   "95"  "11"  "93"  "92"  "90"  "97"  "91"  "86"  "14" 
 [97] "96"  "98"  "89"  "103" "100" "99"  "102" "106" "101" "104" "120"
[1] "2020-03-06"
[1] "2020-03-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-30"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-31"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-01"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-02"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-03"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-04"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-05"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-06"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-07"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-08"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-09"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-10"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-11"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-12"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-13"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-14"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-15"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-16"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-17"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-18"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-19"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-30"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-01"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-02"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-03"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-04"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-05"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-06"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-07"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-08"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-09"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-10"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-11"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-12"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-13"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-14"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-15"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-16"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-17"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-18"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-19"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-30"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-31"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-01"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-02"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-03"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-04"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-05"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-06"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-07"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-08"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-09"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-10"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-11"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-12"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-13"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-14"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-15"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-16"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-17"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-18"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-19"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-30"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-01"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-02"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-03"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-04"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-05"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-06"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-07"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-08"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-09"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-10"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-11"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-12"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-13"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-14"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-15"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-16"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-17"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-18"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-19"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
`summarise()` ungrouping output (override with `.groups` argument)
Joining, by = "Region"
`summarise()` regrouping output by 'date_f', 'Age', 'Sex' (override with `.groups` argument)
# A tibble: 1 x 3
  Region  Cases Deaths
  <chr>   <dbl>  <dbl>
1 All    200267   6929
Adding missing grouping variables: `Region`
# A tibble: 28 x 3
# Groups:   Region [14]
   Region    Measure Value
   <chr>     <chr>   <dbl>
 1 Amazonas  Cases    2346
 2 Amazonas  Deaths    101
 3 Antioquia Cases   16606
 4 Antioquia Deaths    203
 5 Atlantico Cases   42926
 6 Atlantico Deaths   2208
 7 Bogota    Cases   65543
 8 Bogota    Deaths   1627
 9 Bolivar   Cases   14717
10 Bolivar   Deaths    506
# ... with 18 more rows
[1] "All"

   Antioquia        Choco      Cordoba Cundinamarca      Guajira    Magdalena 
        7380        11480         9840        11480         6150        15170 
      Nariño  Santa Marta        Sucre 
       24190         9840        11480 
Auto-refreshing stale OAuth token.
Writing to "Colombia input"
Writing to sheet "database"
Writing to "Colombia_Bogota input"
Writing to sheet "database"
Writing to "Colombia_Atlantico input"
Writing to sheet "database"
Writing to "Colombia_Bolivar input"
Writing to sheet "database"
Writing to "Colombia_Valle del Cauca input"
Writing to sheet "database"
Writing to "Colombia_Amazonas input"
Writing to sheet "database"
Writing to "Colombia_others input"
Writing to sheet "database"
Auto-refreshing stale OAuth token.
Created Drive file:
  * CO21.07.2020cases&deaths: 1GhafXqBMv1ALCJg5v27Rcf7Od07d8dtD4ypQt7ZhhsA
with MIME type:
  * application/vnd.google-apps.spreadsheet
Writing to "CO21.07.2020cases&deaths"
Writing to sheet "cases&deaths_age_sex"
Fehler: Client error: (400) INVALID_ARGUMENT
  * Client specified an invalid argument. Check error message and error details for more information.
  * Invalid requests[0].updateSheetProperties: This action would increase the number of cells in the workbook above the limit of 5000000 cells.
Backtrace:
    x
 1. \-googlesheets4::write_sheet(db, ss = meta$id, sheet = "cases&deaths_age_sex")
 2.   \-gargle::response_process(resp_raw)
 3.     \-gargle:::stop_request_failed(error_message(resp), resp)
Ausführung angehalten
-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.3.0     v purrr   0.3.4
v tibble  3.0.3     v dplyr   1.0.0
v tidyr   1.1.0     v stringr 1.4.0
v readr   1.3.1     v forcats 0.5.0
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()
Warnmeldungen:
1: Paket 'tidyverse' wurde unter R Version 3.6.3 erstellt 
2: Paket 'ggplot2' wurde unter R Version 3.6.3 erstellt 
3: Paket 'tibble' wurde unter R Version 3.6.3 erstellt 
4: Paket 'tidyr' wurde unter R Version 3.6.3 erstellt 
5: Paket 'readr' wurde unter R Version 3.6.3 erstellt 
6: Paket 'purrr' wurde unter R Version 3.6.3 erstellt 
7: Paket 'dplyr' wurde unter R Version 3.6.3 erstellt 
8: Paket 'stringr' wurde unter R Version 3.6.3 erstellt 
9: Paket 'forcats' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'lubridate'

The following objects are masked from 'package:base':

    date, intersect, setdiff, union

Warnmeldung:
Paket 'lubridate' wurde unter R Version 3.6.3 erstellt 
Warnmeldung:
Paket 'googlesheets4' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'googledrive'

The following objects are masked from 'package:googlesheets4':

    request_generate, request_make

Warnmeldung:
Paket 'googledrive' wurde unter R Version 3.6.3 erstellt 
Parsed with column specification:
cols(
  .default = col_character(),
  `ID de caso` = col_double(),
  `Fecha de notificación` = col_datetime(format = ""),
  Edad = col_double(),
  `Fecha de muerte` = col_datetime(format = ""),
  `Fecha diagnostico` = col_datetime(format = ""),
  `Fecha recuperado` = col_datetime(format = ""),
  `fecha reporte web` = col_datetime(format = ""),
  `Codigo departamento` = col_double(),
  `Codigo pais` = col_double()
)
See spec(...) for full column specifications.
Parsed with column specification:
cols(
  .default = col_double(),
  Fecha = col_character(),
  `Positividad acumulada` = col_number()
)
See spec(...) for full column specifications.
[1] "Leve"         "Asintomático" "Fallecido"    "Moderado"     "Grave"       
[6] "N/A"         
 [1] "Bogotá D.C."                                            
 [2] "Valle del Cauca"                                        
 [3] "Antioquia"                                              
 [4] "Cartagena D.T. y C."                                    
 [5] "Huila"                                                  
 [6] "Meta"                                                   
 [7] "Risaralda"                                              
 [8] "Norte de Santander"                                     
 [9] "Caldas"                                                 
[10] "Cundinamarca"                                           
[11] "Barranquilla D.E."                                      
[12] "Santander"                                              
[13] "Quindío"                                                
[14] "Tolima"                                                 
[15] "Cauca"                                                  
[16] "Santa Marta D.T. y C."                                  
[17] "Cesar"                                                  
[18] "Archipiélago de San Andrés Providencia y Santa Catalina"
[19] "Casanare"                                               
[20] "Nariño"                                                 
[21] "Atlántico"                                              
[22] "Boyacá"                                                 
[23] "Córdoba"                                                
[24] "Bolívar"                                                
[25] "Sucre"                                                  
[26] "Magdalena"                                              
[27] "La Guajira"                                             
[28] "Buenaventura D.E."                                      
[29] "Chocó"                                                  
[30] "Amazonas"                                               
[31] "Caquetá"                                                
[32] "Putumayo"                                               
[33] "Arauca"                                                 
[34] "Vaupés"                                                 
[35] "Guainía"                                                
[36] "Vichada"                                                
[37] "Guaviare"                                               
Warnmeldung:
All formats failed to parse. No formats found. 
`summarise()` ungrouping output (override with `.groups` argument)
[1] "M" "F"
  [1] "2020-04-05" "2020-04-06" "2020-03-23" "2020-03-22" "2020-03-16"
  [6] "2020-03-26" "2020-03-25" "2020-04-04" "2020-04-15" "2020-04-09"
 [11] "2020-03-30" "2020-03-28" "2020-06-10" "2020-04-02" "2020-04-08"
 [16] "2020-03-27" "2020-04-12" "2020-04-03" "2020-04-24" "2020-04-21"
 [21] "2020-04-07" "2020-04-14" "2020-04-01" "2020-04-19" "2020-03-31"
 [26] "2020-04-10" "2020-04-18" "2020-04-11" "2020-03-29" "2020-04-28"
 [31] "2020-05-04" "2020-04-17" "2020-04-16" "2020-04-13" "2020-04-25"
 [36] "2020-03-24" "2020-05-01" "2020-05-31" "2020-04-29" "2020-05-11"
 [41] "2020-04-27" "2020-04-20" "2020-04-26" "2020-05-09" "2020-04-22"
 [46] "2020-05-07" "2020-04-23" "2020-05-02" "2020-04-30" "2020-05-06"
 [51] "2020-06-03" "2020-05-23" "2020-06-05" "2020-05-05" "2020-05-18"
 [56] "2020-05-03" "2020-05-08" "2020-05-17" "2020-05-29" "2020-05-22"
 [61] "2020-05-21" "2020-05-13" "2020-05-27" "2020-05-10" "2020-05-12"
 [66] "2020-06-02" "2020-06-29" "2020-05-28" "2020-06-01" "2020-05-15"
 [71] "2020-05-20" "2020-06-16" "2020-06-06" "2020-06-12" "2020-06-13"
 [76] "2020-05-26" "2020-05-14" "2020-05-19" "2020-05-30" "2020-05-24"
 [81] "2020-05-16" "2020-06-09" "2020-06-07" "2020-05-25" "2020-07-19"
 [86] "2020-06-19" "2020-06-14" "2020-07-12" "2020-06-25" "2020-06-17"
 [91] "2020-06-15" "2020-06-08" "2020-06-24" "2020-07-20" "2020-06-04"
 [96] "2020-06-23" "2020-07-06" "2020-07-08" "2020-06-30" "2020-07-15"
[101] "2020-06-18" "2020-07-02" "2020-06-21" "2020-06-11" "2020-06-22"
[106] "2020-06-20" "2020-07-01" "2020-07-17" "2020-07-03" "2020-06-27"
[111] "2020-07-11" "2020-07-04" "2020-06-26" "2020-07-09" "2020-07-07"
[116] "2020-07-16" "2020-06-28" "2020-07-18" "2020-07-05" "2020-07-10"
[121] "2020-07-13" "2020-07-14" "2020-07-21"
 [1] "Amazonas"        "Antioquia"       "Arauca"          "Atlantico"      
 [5] "Bogota"          "Bolivar"         "Boyaca"          "Caldas"         
 [9] "Caqueta"         "Casanare"        "Cauca"           "Cesar"          
[13] "Choco"           "Cordoba"         "Cundinamarca"    "Guainia"        
[17] "Guajira"         "Huila"           "Magdalena"       "Meta"           
[21] "Nariño"          "Nte Santander"   "Putumayo"        "Quindio"        
[25] "Risaralda"       "Santa Marta"     "Santander"       "Sucre"          
[29] "Tolima"          "Valle del Cauca" "Vaupes"         
 [1] "Bogota"          "Valle del Cauca" "Antioquia"       "Bolivar"        
 [5] "resto"           "Cundinamarca"    "Atlantico"       "Santander"      
 [9] "Santa Marta"     "Nariño"          "Cordoba"         "Sucre"          
[13] "Magdalena"       "Guajira"         "Choco"           "Amazonas"       
`summarise()` ungrouping output (override with `.groups` argument)
# A tibble: 2 x 2
  Measure `sum(Value)`
  <chr>          <dbl>
1 Cases         211038
2 Deaths          7166
`summarise()` regrouping output by 'Region' (override with `.groups` argument)
# A tibble: 32 x 3
# Groups:   Region [16]
   Region    Measure `sum(Value)`
   <chr>     <chr>          <dbl>
 1 Amazonas  Cases           2458
 2 Amazonas  Deaths           101
 3 Antioquia Cases          18690
 4 Antioquia Deaths           222
 5 Atlantico Cases          45486
 6 Atlantico Deaths          2241
 7 Bogota    Cases          67843
 8 Bogota    Deaths          1713
 9 Bolivar   Cases          15509
10 Bolivar   Deaths           509
# ... with 22 more rows
[1] "f" "m"
 [1] "Bogota"          "Valle del Cauca" "Antioquia"       "Bolivar"        
 [5] "resto"           "Cundinamarca"    "Atlantico"       "Santander"      
 [9] "Santa Marta"     "Nariño"          "Cordoba"         "Sucre"          
[13] "Magdalena"       "Guajira"         "Choco"           "Amazonas"       
  [1] NA           "2020-04-05" "2020-04-06" "2020-03-23" "2020-03-22"
  [6] "2020-03-16" "2020-03-26" "2020-03-25" "2020-04-04" "2020-04-15"
 [11] "2020-04-09" "2020-03-30" "2020-03-28" "2020-06-10" "2020-04-02"
 [16] "2020-04-08" "2020-03-27" "2020-04-12" "2020-04-03" "2020-04-24"
 [21] "2020-04-21" "2020-04-07" "2020-04-14" "2020-04-01" "2020-04-19"
 [26] "2020-03-31" "2020-04-10" "2020-04-18" "2020-04-11" "2020-03-29"
 [31] "2020-04-28" "2020-05-04" "2020-04-17" "2020-04-16" "2020-04-13"
 [36] "2020-04-25" "2020-03-24" "2020-05-01" "2020-05-31" "2020-04-29"
 [41] "2020-05-11" "2020-04-27" "2020-04-20" "2020-04-26" "2020-05-09"
 [46] "2020-04-22" "2020-05-07" "2020-04-23" "2020-05-02" "2020-04-30"
 [51] "2020-05-06" "2020-06-03" "2020-05-23" "2020-06-05" "2020-05-05"
 [56] "2020-05-18" "2020-05-03" "2020-05-08" "2020-05-17" "2020-05-29"
 [61] "2020-05-22" "2020-05-21" "2020-05-13" "2020-05-27" "2020-05-10"
 [66] "2020-05-12" "2020-06-02" "2020-06-29" "2020-05-28" "2020-06-01"
 [71] "2020-05-15" "2020-05-20" "2020-06-16" "2020-06-06" "2020-06-12"
 [76] "2020-06-13" "2020-05-26" "2020-05-14" "2020-05-19" "2020-05-30"
 [81] "2020-05-24" "2020-05-16" "2020-06-09" "2020-06-07" "2020-05-25"
 [86] "2020-07-19" "2020-06-19" "2020-06-14" "2020-07-12" "2020-06-25"
 [91] "2020-06-17" "2020-06-15" "2020-06-08" "2020-06-24" "2020-07-20"
 [96] "2020-06-04" "2020-06-23" "2020-07-06" "2020-07-08" "2020-06-30"
[101] "2020-07-15" "2020-06-18" "2020-07-02" "2020-06-21" "2020-06-11"
[106] "2020-06-22" "2020-06-20" "2020-07-01" "2020-07-17" "2020-07-03"
[111] "2020-06-27" "2020-07-11" "2020-07-04" "2020-06-26" "2020-07-09"
[116] "2020-07-07" "2020-07-16" "2020-06-28" "2020-07-18" "2020-07-05"
[121] "2020-07-10" "2020-07-13" "2020-07-14" "2020-07-21"
  [1] "19"  "34"  "50"  "55"  "25"  "27"  "85"  "22"  "28"  "36"  "42"  "74" 
 [13] "68"  "48"  "30"  "61"  "73"  "54"  "26"  "23"  "18"  "49"  "65"  "59" 
 [25] "72"  "45"  "29"  "21"  "79"  "52"  "71"  "24"  "44"  "38"  "31"  "41" 
 [37] "67"  "62"  "58"  "37"  "20"  "32"  "64"  "40"  "46"  "39"  "9"   "53" 
 [49] "56"  "51"  "69"  "16"  "57"  "60"  "33"  "76"  "47"  "35"  "88"  "70" 
 [61] "81"  "17"  "63"  "80"  "84"  "87"  "83"  "43"  "77"  "15"  "66"  "3"  
 [73] "82"  "12"  "8"   "1"   "5"   "6"   "75"  "2"   "0"   "13"  "4"   "78" 
 [85] "10"  "94"  "7"   "95"  "11"  "93"  "92"  "90"  "97"  "91"  "86"  "14" 
 [97] "96"  "98"  "89"  "103" "100" "99"  "102" "106" "101" "104" "120"
[1] "2020-03-16"
[1] "2020-03-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-30"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-31"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-01"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-02"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-03"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-04"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-05"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-06"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-07"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-08"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-09"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-10"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-11"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-12"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-13"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-14"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-15"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-16"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-17"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-18"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-19"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-30"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-01"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-02"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-03"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-04"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-05"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-06"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-07"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-08"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-09"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-10"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-11"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-12"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-13"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-14"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-15"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-16"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-17"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-18"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-19"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-30"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-31"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-01"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-02"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-03"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-04"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-05"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-06"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-07"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-08"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-09"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-10"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-11"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-12"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-13"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-14"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-15"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-16"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-17"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-18"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-19"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-30"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-01"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-02"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-03"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-04"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-05"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-06"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-07"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-08"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-09"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-10"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-11"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-12"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-13"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-14"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-15"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-16"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-17"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-18"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-19"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
`summarise()` ungrouping output (override with `.groups` argument)
Joining, by = "Region"
`summarise()` regrouping output by 'date_f', 'Age', 'Sex' (override with `.groups` argument)
# A tibble: 1 x 3
  Region Cases Deaths
  <chr>  <dbl>  <dbl>
1 All        0   7166
Adding missing grouping variables: `Region`
# A tibble: 30 x 3
# Groups:   Region [15]
   Region    Measure Value
   <chr>     <chr>   <dbl>
 1 Amazonas  Cases       0
 2 Amazonas  Deaths    101
 3 Antioquia Cases       0
 4 Antioquia Deaths    222
 5 Atlantico Cases       0
 6 Atlantico Deaths   2241
 7 Bogota    Cases       0
 8 Bogota    Deaths   1713
 9 Bolivar   Cases       0
10 Bolivar   Deaths    509
# ... with 20 more rows
[1] "All"

   Antioquia        Choco      Cordoba Cundinamarca      Guajira    Magdalena 
        7790        11890        10250        11890         6560        15580 
      Nariño  Santa Marta    Santander        Sucre 
       24600        10250         1230        11890 
Auto-refreshing stale OAuth token.
Fehler: Client error: (429) RESOURCE_EXHAUSTED
  * Either out of resource quota or reaching rate limiting. The client should look for google.rpc.QuotaFailure error detail for more information.
  * Quota exceeded for quota group 'ReadGroup' and limit 'Read requests per 100 seconds' of service 'sheets.googleapis.com' for consumer 'project_number:603366585132'.

Error details:
  * Error details of type 'google.rpc.Help' are not implemented yet.
  * Workaround: use `tryCatch()` and inspect error payload yourself.
  * Please open an issue at https://github.com/r-lib/gargle/issues, so we can fix.
Backtrace:
    x
 1. \-googlesheets4::write_sheet(...)
 2.   \-googlesheets4::gs4_get(ssid)
 3.     \-googlesheets4:::gs4_get_impl_(as_sheets_id(ss))
 4.       \-gargle::response_process(raw_resp)
 5.         \-gargle:::stop_request_failed(error_message(resp), resp)
Ausführung angehalten
-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.3.2     v purrr   0.3.4
v tibble  3.0.2     v dplyr   1.0.0
v tidyr   1.1.0     v stringr 1.4.0
v readr   1.3.1     v forcats 0.5.0
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()

Attache Paket: 'lubridate'

The following objects are masked from 'package:base':

    date, intersect, setdiff, union


Attache Paket: 'googledrive'

The following objects are masked from 'package:googlesheets4':

    request_generate, request_make

Parsed with column specification:
cols(
  .default = col_character(),
  `ID de caso` = col_double(),
  `Fecha de notificación` = col_datetime(format = ""),
  Edad = col_double(),
  `Fecha de muerte` = col_datetime(format = ""),
  `Fecha diagnostico` = col_datetime(format = ""),
  `Fecha recuperado` = col_datetime(format = ""),
  `fecha reporte web` = col_datetime(format = ""),
  `Codigo departamento` = col_double(),
  `Codigo pais` = col_double()
)
See spec(...) for full column specifications.
Parsed with column specification:
cols(
  .default = col_double(),
  Fecha = col_character(),
  `Positividad acumulada` = col_number()
)
See spec(...) for full column specifications.
[1] "Leve"         "Asintomático" "Fallecido"    "Moderado"     "Grave"       
[6] "N/A"         
 [1] "Bogotá D.C."                                            
 [2] "Valle del Cauca"                                        
 [3] "Antioquia"                                              
 [4] "Cartagena D.T. y C."                                    
 [5] "Huila"                                                  
 [6] "Meta"                                                   
 [7] "Risaralda"                                              
 [8] "Norte de Santander"                                     
 [9] "Caldas"                                                 
[10] "Cundinamarca"                                           
[11] "Barranquilla D.E."                                      
[12] "Santander"                                              
[13] "Quindío"                                                
[14] "Tolima"                                                 
[15] "Cauca"                                                  
[16] "Santa Marta D.T. y C."                                  
[17] "Cesar"                                                  
[18] "Archipiélago de San Andrés Providencia y Santa Catalina"
[19] "Casanare"                                               
[20] "Nariño"                                                 
[21] "Atlántico"                                              
[22] "Boyacá"                                                 
[23] "Córdoba"                                                
[24] "Bolívar"                                                
[25] "Sucre"                                                  
[26] "Magdalena"                                              
[27] "La Guajira"                                             
[28] "Buenaventura D.E."                                      
[29] "Chocó"                                                  
[30] "Amazonas"                                               
[31] "Caquetá"                                                
[32] "Putumayo"                                               
[33] "Arauca"                                                 
[34] "Vaupés"                                                 
[35] "Guainía"                                                
[36] "Vichada"                                                
[37] "Guaviare"                                               
`summarise()` ungrouping output (override with `.groups` argument)
[1] "M" "F"
  [1] "2020-04-05" "2020-04-06" "2020-03-23" "2020-03-22" "2020-03-16"
  [6] "2020-03-26" "2020-03-25" "2020-04-04" "2020-04-15" "2020-04-09"
 [11] "2020-03-30" "2020-03-28" "2020-06-10" "2020-04-02" "2020-04-08"
 [16] "2020-03-27" "2020-04-12" "2020-04-03" "2020-04-24" "2020-04-21"
 [21] "2020-04-07" "2020-04-14" "2020-04-01" "2020-04-19" "2020-03-31"
 [26] "2020-04-10" "2020-04-18" "2020-04-11" "2020-03-29" "2020-04-28"
 [31] "2020-05-04" "2020-04-17" "2020-04-16" "2020-04-13" "2020-04-25"
 [36] "2020-03-24" "2020-05-01" "2020-05-31" "2020-04-29" "2020-05-11"
 [41] "2020-04-27" "2020-04-20" "2020-04-26" "2020-05-09" "2020-04-22"
 [46] "2020-05-07" "2020-04-23" "2020-05-02" "2020-04-30" "2020-05-06"
 [51] "2020-06-03" "2020-05-23" "2020-06-05" "2020-05-05" "2020-05-18"
 [56] "2020-05-03" "2020-05-08" "2020-05-17" "2020-05-29" "2020-05-22"
 [61] "2020-05-21" "2020-05-13" "2020-05-27" "2020-05-10" "2020-05-12"
 [66] "2020-06-02" "2020-06-29" "2020-05-28" "2020-06-01" "2020-05-15"
 [71] "2020-05-20" "2020-06-16" "2020-06-06" "2020-06-12" "2020-06-13"
 [76] "2020-05-26" "2020-05-14" "2020-05-19" "2020-05-30" "2020-05-24"
 [81] "2020-05-16" "2020-06-09" "2020-06-07" "2020-05-25" "2020-07-19"
 [86] "2020-06-19" "2020-06-14" "2020-07-12" "2020-06-25" "2020-06-17"
 [91] "2020-06-15" "2020-06-08" "2020-06-24" "2020-07-20" "2020-06-04"
 [96] "2020-06-23" "2020-07-06" "2020-07-08" "2020-06-30" "2020-07-15"
[101] "2020-06-18" "2020-07-02" "2020-06-21" "2020-06-11" "2020-06-22"
[106] "2020-06-20" "2020-07-01" "2020-07-17" "2020-07-03" "2020-06-27"
[111] "2020-07-11" "2020-07-04" "2020-06-26" "2020-07-09" "2020-07-07"
[116] "2020-07-16" "2020-06-28" "2020-07-18" "2020-07-05" "2020-07-21"
[121] "2020-07-10" "2020-07-13" "2020-07-14"
 [1] "Amazonas"        "Antioquia"       "Arauca"          "Atlantico"      
 [5] "Bogota"          "Bolivar"         "Boyaca"          "Caldas"         
 [9] "Caqueta"         "Casanare"        "Cauca"           "Cesar"          
[13] "Choco"           "Cordoba"         "Cundinamarca"    "Guainia"        
[17] "Guajira"         "Huila"           "Magdalena"       "Meta"           
[21] "Nariño"          "Nte Santander"   "Putumayo"        "Quindio"        
[25] "Risaralda"       "Santa Marta"     "Santander"       "Sucre"          
[29] "Tolima"          "Valle del Cauca" "Vaupes"         
 [1] "Bogota"          "Valle del Cauca" "Antioquia"       "Bolivar"        
 [5] "resto"           "Cundinamarca"    "Atlantico"       "Santander"      
 [9] "Santa Marta"     "Nariño"          "Cordoba"         "Sucre"          
[13] "Magdalena"       "Guajira"         "Choco"           "Amazonas"       
`summarise()` ungrouping output (override with `.groups` argument)
# A tibble: 2 x 2
  Measure `sum(Value)`
  <chr>          <dbl>
1 Cases         218428
2 Deaths          7373
Warnmeldung:
`...` is not empty.

We detected these problematic arguments:
* `needs_dots`

These dots only exist to allow future extensions and should be empty.
Did you misspecify an argument? 
`summarise()` regrouping output by 'Region' (override with `.groups` argument)
# A tibble: 32 x 3
# Groups:   Region [16]
   Region    Measure `sum(Value)`
   <chr>     <chr>          <dbl>
 1 Amazonas  Cases           2466
 2 Amazonas  Deaths           101
 3 Antioquia Cases          19751
 4 Antioquia Deaths           239
 5 Atlantico Cases          45948
 6 Atlantico Deaths          2265
 7 Bogota    Cases          70849
 8 Bogota    Deaths          1794
 9 Bolivar   Cases          15714
10 Bolivar   Deaths           516
# ... with 22 more rows
Warnmeldung:
`...` is not empty.

We detected these problematic arguments:
* `needs_dots`

These dots only exist to allow future extensions and should be empty.
Did you misspecify an argument? 
[1] "f" "m"
 [1] "Bogota"          "Valle del Cauca" "Antioquia"       "Bolivar"        
 [5] "resto"           "Cundinamarca"    "Atlantico"       "Santander"      
 [9] "Santa Marta"     "Nariño"          "Cordoba"         "Sucre"          
[13] "Magdalena"       "Guajira"         "Choco"           "Amazonas"       
  [1] "2020-03-06" "2020-03-09" "2020-03-11" "2020-03-12" "2020-03-13"
  [6] "2020-03-14" "2020-03-15" "2020-03-16" "2020-03-17" "2020-03-18"
 [11] "2020-03-19" "2020-03-20" "2020-03-21" "2020-03-22" "2020-03-23"
 [16] "2020-03-24" "2020-03-27" "2020-03-25" "2020-03-26" "2020-03-28"
 [21] "2020-03-29" "2020-03-30" "2020-03-31" "2020-04-01" "2020-04-02"
 [26] "2020-04-03" "2020-04-04" "2020-04-05" "2020-04-06" "2020-04-07"
 [31] "2020-04-08" "2020-04-09" "2020-04-10" "2020-04-11" "2020-04-12"
 [36] "2020-04-13" "2020-04-14" "2020-04-19" "2020-04-15" "2020-04-28"
 [41] "2020-04-16" "2020-04-17" "2020-04-18" "2020-04-20" "2020-04-22"
 [46] "2020-04-21" "2020-04-23" "2020-05-01" "2020-04-24" "2020-05-05"
 [51] "2020-04-25" "2020-04-26" "2020-04-27" "2020-04-29" "2020-04-30"
 [56] "2020-05-02" "2020-05-04" "2020-05-03" NA           "2020-05-06"
 [61] "2020-05-07" "2020-05-08" "2020-05-09" "2020-05-10" "2020-05-11"
 [66] "2020-05-12" "2020-05-13" "2020-07-05" "2020-05-14" "2020-05-15"
 [71] "2020-05-16" "2020-05-17" "2020-05-18" "2020-05-19" "2020-05-20"
 [76] "2020-05-29" "2020-05-21" "2020-05-22" "2020-07-07" "2020-05-23"
 [81] "2020-06-01" "2020-05-24" "2020-05-25" "2020-05-26" "2020-05-27"
 [86] "2020-05-28" "2020-05-30" "2020-05-31" "2020-06-03" "2020-06-02"
 [91] "2020-06-05" "2020-06-04" "2020-06-06" "2020-06-07" "2020-06-26"
 [96] "2020-06-08" "2020-06-28" "2020-06-09" "2020-06-10" "2020-06-11"
[101] "2020-06-12" "2020-06-16" "2020-06-13" "2020-06-14" "2020-07-19"
[106] "2020-06-15" "2020-06-17" "2020-06-20" "2020-07-17" "2020-06-25"
[111] "2020-06-18" "2020-06-23" "2020-06-19" "2020-07-02" "2020-06-21"
[116] "2020-07-04" "2020-07-01" "2020-06-29" "2020-06-30" "2020-07-16"
[121] "2020-07-03" "2020-06-22" "2020-06-24" "2020-07-11" "2020-07-09"
[126] "2020-07-08" "2020-06-27" "2020-07-14" "2020-07-18" "2020-07-06"
[131] "2020-07-10" "2020-07-12" "2020-07-13" "2020-07-15" "2020-07-20"
[136] "2020-07-21" "2020-07-22"
  [1] "19"  "34"  "50"  "55"  "25"  "27"  "85"  "22"  "28"  "36"  "42"  "74" 
 [13] "68"  "48"  "30"  "61"  "73"  "54"  "26"  "23"  "18"  "49"  "65"  "59" 
 [25] "72"  "45"  "29"  "21"  "79"  "52"  "71"  "24"  "44"  "38"  "31"  "41" 
 [37] "67"  "62"  "58"  "37"  "20"  "32"  "64"  "40"  "46"  "39"  "9"   "53" 
 [49] "56"  "51"  "69"  "16"  "57"  "60"  "33"  "76"  "47"  "35"  "88"  "70" 
 [61] "81"  "17"  "63"  "80"  "84"  "87"  "83"  "43"  "77"  "15"  "66"  "3"  
 [73] "82"  "12"  "8"   "1"   "5"   "6"   "75"  "2"   "0"   "13"  "4"   "78" 
 [85] "10"  "94"  "7"   "95"  "11"  "93"  "92"  "90"  "97"  "91"  "86"  "14" 
 [97] "96"  "98"  "89"  "103" "100" "99"  "102" "106" "101" "104" "120"
[1] "2020-03-06"
[1] "2020-03-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-30"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-31"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-01"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-02"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-03"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-04"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-05"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-06"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-07"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-08"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-09"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-10"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-11"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-12"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-13"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-14"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-15"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-16"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-17"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-18"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-19"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-30"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-01"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-02"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-03"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-04"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-05"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-06"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-07"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-08"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-09"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-10"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-11"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-12"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-13"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-14"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-15"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-16"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-17"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-18"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-19"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-30"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-31"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-01"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-02"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-03"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-04"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-05"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-06"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-07"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-08"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-09"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-10"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-11"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-12"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-13"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-14"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-15"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-16"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-17"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-18"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-19"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-30"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-01"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-02"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-03"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-04"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-05"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-06"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-07"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-08"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-09"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-10"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-11"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-12"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-13"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-14"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-15"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-16"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-17"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-18"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-19"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
`summarise()` ungrouping output (override with `.groups` argument)
Joining, by = "Region"
`summarise()` regrouping output by 'date_f', 'Age', 'Sex' (override with `.groups` argument)
# A tibble: 1 x 3
  Region  Cases Deaths
  <chr>   <dbl>  <dbl>
1 All    214664   7373
Warnmeldung:
`...` is not empty.

We detected these problematic arguments:
* `needs_dots`

These dots only exist to allow future extensions and should be empty.
Did you misspecify an argument? 
Adding missing grouping variables: `Region`
# A tibble: 30 x 3
# Groups:   Region [15]
   Region    Measure Value
   <chr>     <chr>   <dbl>
 1 Amazonas  Cases    2354
 2 Amazonas  Deaths    101
 3 Antioquia Cases   19505
 4 Antioquia Deaths    239
 5 Atlantico Cases   44162
 6 Atlantico Deaths   2265
 7 Bogota    Cases   70798
 8 Bogota    Deaths   1794
 9 Bolivar   Cases   15222
10 Bolivar   Deaths    516
# ... with 20 more rows
Warnmeldung:
`...` is not empty.

We detected these problematic arguments:
* `needs_dots`

These dots only exist to allow future extensions and should be empty.
Did you misspecify an argument? 
[1] "All"

   Antioquia        Choco      Cordoba Cundinamarca      Guajira    Magdalena 
        8200        12300        10660        12300         6970        15990 
      Nariño  Santa Marta    Santander        Sucre 
       25010        10660         1640        12300 
Writing to "Colombia input"
Writing to sheet "database"
Writing to "Colombia_Bogota input"
Writing to sheet "database"
Writing to "Colombia_Atlantico input"
Writing to sheet "database"
Writing to "Colombia_Bolivar input"
Writing to sheet "database"
Writing to "Colombia_Valle del Cauca input"
Writing to sheet "database"
Writing to "Colombia_Amazonas input"
Writing to sheet "database"
Writing to "Colombia_others input"
Writing to sheet "database"
Auto-refreshing stale OAuth token.
Created Drive file:
  * CO23.07.2020cases&deaths: 1qCXd9WjZmJIIRkhbz9GdUMK4b60AcWe93BuBhI_vr4s
with MIME type:
  * application/vnd.google-apps.spreadsheet
Writing to "CO23.07.2020cases&deaths"
Writing to sheet "cases&deaths_age_sex"
^C^C-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.3.0     v purrr   0.3.4
v tibble  3.0.3     v dplyr   1.0.0
v tidyr   1.1.0     v stringr 1.4.0
v readr   1.3.1     v forcats 0.5.0
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()
Warnmeldungen:
1: Paket 'tidyverse' wurde unter R Version 3.6.3 erstellt 
2: Paket 'ggplot2' wurde unter R Version 3.6.3 erstellt 
3: Paket 'tibble' wurde unter R Version 3.6.3 erstellt 
4: Paket 'tidyr' wurde unter R Version 3.6.3 erstellt 
5: Paket 'readr' wurde unter R Version 3.6.3 erstellt 
6: Paket 'purrr' wurde unter R Version 3.6.3 erstellt 
7: Paket 'dplyr' wurde unter R Version 3.6.3 erstellt 
8: Paket 'stringr' wurde unter R Version 3.6.3 erstellt 
9: Paket 'forcats' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'lubridate'

The following objects are masked from 'package:base':

    date, intersect, setdiff, union

Warnmeldung:
Paket 'lubridate' wurde unter R Version 3.6.3 erstellt 
Warnmeldung:
Paket 'googlesheets4' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'googledrive'

The following objects are masked from 'package:googlesheets4':

    request_generate, request_make

Warnmeldung:
Paket 'googledrive' wurde unter R Version 3.6.3 erstellt 
Parsed with column specification:
cols(
  .default = col_character(),
  `ID de caso` = col_double(),
  `Fecha de notificación` = col_datetime(format = ""),
  Edad = col_double(),
  `Fecha de muerte` = col_datetime(format = ""),
  `Fecha diagnostico` = col_datetime(format = ""),
  `Fecha recuperado` = col_datetime(format = ""),
  `fecha reporte web` = col_datetime(format = ""),
  `Codigo departamento` = col_double(),
  `Codigo pais` = col_double()
)
See spec(...) for full column specifications.
Parsed with column specification:
cols(
  .default = col_double(),
  Fecha = col_character(),
  `Positividad acumulada` = col_number()
)
See spec(...) for full column specifications.
[1] "Leve"         "Asintomático" "Fallecido"    "Moderado"     "Grave"       
[6] "N/A"         
 [1] "Bogotá D.C."                                            
 [2] "Valle del Cauca"                                        
 [3] "Antioquia"                                              
 [4] "Cartagena D.T. y C."                                    
 [5] "Huila"                                                  
 [6] "Meta"                                                   
 [7] "Risaralda"                                              
 [8] "Norte de Santander"                                     
 [9] "Caldas"                                                 
[10] "Cundinamarca"                                           
[11] "Barranquilla D.E."                                      
[12] "Santander"                                              
[13] "Quindío"                                                
[14] "Tolima"                                                 
[15] "Cauca"                                                  
[16] "Santa Marta D.T. y C."                                  
[17] "Cesar"                                                  
[18] "Archipiélago de San Andrés Providencia y Santa Catalina"
[19] "Casanare"                                               
[20] "Nariño"                                                 
[21] "Atlántico"                                              
[22] "Boyacá"                                                 
[23] "Córdoba"                                                
[24] "Bolívar"                                                
[25] "Sucre"                                                  
[26] "Magdalena"                                              
[27] "La Guajira"                                             
[28] "Buenaventura D.E."                                      
[29] "Chocó"                                                  
[30] "Amazonas"                                               
[31] "Caquetá"                                                
[32] "Putumayo"                                               
[33] "Arauca"                                                 
[34] "Vaupés"                                                 
[35] "Guainía"                                                
[36] "Vichada"                                                
[37] "Guaviare"                                               
Warnmeldung:
All formats failed to parse. No formats found. 
`summarise()` ungrouping output (override with `.groups` argument)
[1] "M" "F"
  [1] "2020-04-05" "2020-04-06" "2020-03-23" "2020-03-22" "2020-03-16"
  [6] "2020-03-26" "2020-03-25" "2020-04-04" "2020-04-15" "2020-04-09"
 [11] "2020-03-30" "2020-03-28" "2020-06-10" "2020-04-02" "2020-04-08"
 [16] "2020-03-27" "2020-04-12" "2020-04-03" "2020-04-24" "2020-04-21"
 [21] "2020-04-07" "2020-04-14" "2020-04-01" "2020-04-19" "2020-03-31"
 [26] "2020-04-10" "2020-04-18" "2020-04-11" "2020-03-29" "2020-04-28"
 [31] "2020-05-04" "2020-04-17" "2020-04-16" "2020-04-13" "2020-04-25"
 [36] "2020-03-24" "2020-05-01" "2020-05-31" "2020-04-29" "2020-05-11"
 [41] "2020-04-27" "2020-04-20" "2020-04-26" "2020-05-09" "2020-04-22"
 [46] "2020-05-07" "2020-04-23" "2020-05-02" "2020-04-30" "2020-05-06"
 [51] "2020-06-03" "2020-05-23" "2020-06-05" "2020-05-05" "2020-05-18"
 [56] "2020-05-03" "2020-05-08" "2020-05-17" "2020-05-29" "2020-05-22"
 [61] "2020-05-21" "2020-05-13" "2020-05-27" "2020-05-10" "2020-05-12"
 [66] "2020-07-19" "2020-06-02" "2020-06-29" "2020-05-28" "2020-06-01"
 [71] "2020-05-15" "2020-05-20" "2020-06-16" "2020-06-06" "2020-06-12"
 [76] "2020-06-13" "2020-05-26" "2020-05-14" "2020-05-19" "2020-05-30"
 [81] "2020-05-24" "2020-05-16" "2020-06-09" "2020-06-07" "2020-05-25"
 [86] "2020-06-19" "2020-06-14" "2020-07-12" "2020-06-25" "2020-06-17"
 [91] "2020-06-15" "2020-06-08" "2020-06-24" "2020-07-20" "2020-06-04"
 [96] "2020-06-23" "2020-07-06" "2020-07-08" "2020-06-30" "2020-07-15"
[101] "2020-06-18" "2020-07-02" "2020-06-21" "2020-06-11" "2020-06-22"
[106] "2020-06-20" "2020-07-01" "2020-07-17" "2020-07-03" "2020-06-27"
[111] "2020-07-11" "2020-07-04" "2020-06-26" "2020-07-09" "2020-07-07"
[116] "2020-07-16" "2020-06-28" "2020-07-18" "2020-07-05" "2020-07-21"
[121] "2020-07-10" "2020-07-13" "2020-07-14" "2020-07-23" "2020-07-22"
 [1] "Amazonas"        "Antioquia"       "Arauca"          "Atlantico"      
 [5] "Bogota"          "Bolivar"         "Boyaca"          "Caldas"         
 [9] "Caqueta"         "Casanare"        "Cauca"           "Cesar"          
[13] "Choco"           "Cordoba"         "Cundinamarca"    "Guainia"        
[17] "Guajira"         "Huila"           "Magdalena"       "Meta"           
[21] "Nariño"          "Nte Santander"   "Putumayo"        "Quindio"        
[25] "Risaralda"       "Santa Marta"     "Santander"       "Sucre"          
[29] "Tolima"          "Valle del Cauca" "Vaupes"         
 [1] "Bogota"          "Valle del Cauca" "Antioquia"       "Bolivar"        
 [5] "resto"           "Nte Santander"   "Cundinamarca"    "Atlantico"      
 [9] "Santander"       "Santa Marta"     "Nariño"          "Cordoba"        
[13] "Sucre"           "Magdalena"       "Guajira"         "Choco"          
[17] "Amazonas"       
`summarise()` ungrouping output (override with `.groups` argument)
# A tibble: 2 x 2
  Measure `sum(Value)`
  <chr>          <dbl>
1 Cases         226373
2 Deaths          7688
`summarise()` regrouping output by 'Region' (override with `.groups` argument)
# A tibble: 34 x 3
# Groups:   Region [17]
   Region    Measure `sum(Value)`
   <chr>     <chr>          <dbl>
 1 Amazonas  Cases           2470
 2 Amazonas  Deaths           101
 3 Antioquia Cases          20613
 4 Antioquia Deaths           275
 5 Atlantico Cases          46595
 6 Atlantico Deaths          2295
 7 Bogota    Cases          74599
 8 Bogota    Deaths          1905
 9 Bolivar   Cases          15943
10 Bolivar   Deaths           520
# ... with 24 more rows
[1] "f" "m"
 [1] "Bogota"          "Valle del Cauca" "Antioquia"       "Bolivar"        
 [5] "resto"           "Nte Santander"   "Cundinamarca"    "Atlantico"      
 [9] "Santander"       "Santa Marta"     "Nariño"          "Cordoba"        
[13] "Sucre"           "Magdalena"       "Guajira"         "Choco"          
[17] "Amazonas"       
  [1] NA           "2020-04-05" "2020-04-06" "2020-03-23" "2020-03-22"
  [6] "2020-03-16" "2020-03-26" "2020-03-25" "2020-04-04" "2020-04-15"
 [11] "2020-04-09" "2020-03-30" "2020-03-28" "2020-06-10" "2020-04-02"
 [16] "2020-04-08" "2020-03-27" "2020-04-12" "2020-04-03" "2020-04-24"
 [21] "2020-04-21" "2020-04-07" "2020-04-14" "2020-04-01" "2020-04-19"
 [26] "2020-03-31" "2020-04-10" "2020-04-18" "2020-04-11" "2020-03-29"
 [31] "2020-04-28" "2020-05-04" "2020-04-17" "2020-04-16" "2020-04-13"
 [36] "2020-04-25" "2020-03-24" "2020-05-01" "2020-05-31" "2020-04-29"
 [41] "2020-05-11" "2020-04-27" "2020-04-20" "2020-04-26" "2020-05-09"
 [46] "2020-04-22" "2020-05-07" "2020-04-23" "2020-05-02" "2020-04-30"
 [51] "2020-05-06" "2020-06-03" "2020-05-23" "2020-06-05" "2020-05-05"
 [56] "2020-05-18" "2020-05-03" "2020-05-08" "2020-05-17" "2020-05-29"
 [61] "2020-05-22" "2020-05-21" "2020-05-13" "2020-05-27" "2020-05-10"
 [66] "2020-05-12" "2020-07-19" "2020-06-02" "2020-06-29" "2020-05-28"
 [71] "2020-06-01" "2020-05-15" "2020-05-20" "2020-06-16" "2020-06-06"
 [76] "2020-06-12" "2020-06-13" "2020-05-26" "2020-05-14" "2020-05-19"
 [81] "2020-05-30" "2020-05-24" "2020-05-16" "2020-06-09" "2020-06-07"
 [86] "2020-05-25" "2020-06-19" "2020-06-14" "2020-07-12" "2020-06-25"
 [91] "2020-06-17" "2020-06-15" "2020-06-08" "2020-06-24" "2020-07-20"
 [96] "2020-06-04" "2020-06-23" "2020-07-06" "2020-07-08" "2020-06-30"
[101] "2020-07-15" "2020-06-18" "2020-07-02" "2020-06-21" "2020-06-11"
[106] "2020-06-22" "2020-06-20" "2020-07-01" "2020-07-17" "2020-07-03"
[111] "2020-06-27" "2020-07-11" "2020-07-04" "2020-06-26" "2020-07-09"
[116] "2020-07-07" "2020-07-16" "2020-06-28" "2020-07-18" "2020-07-05"
[121] "2020-07-21" "2020-07-10" "2020-07-13" "2020-07-14" "2020-07-23"
[126] "2020-07-22"
  [1] "19"  "34"  "50"  "55"  "25"  "27"  "85"  "22"  "28"  "36"  "42"  "74" 
 [13] "68"  "48"  "30"  "61"  "73"  "54"  "26"  "23"  "18"  "49"  "65"  "59" 
 [25] "72"  "45"  "29"  "21"  "79"  "52"  "71"  "24"  "44"  "38"  "31"  "41" 
 [37] "67"  "62"  "58"  "37"  "20"  "32"  "64"  "40"  "46"  "39"  "9"   "53" 
 [49] "56"  "51"  "69"  "16"  "57"  "60"  "33"  "76"  "47"  "35"  "88"  "70" 
 [61] "81"  "17"  "63"  "80"  "84"  "87"  "83"  "43"  "77"  "15"  "66"  "3"  
 [73] "82"  "12"  "8"   "1"   "5"   "6"   "75"  "2"   "0"   "13"  "4"   "78" 
 [85] "10"  "94"  "7"   "95"  "11"  "93"  "92"  "90"  "97"  "91"  "86"  "14" 
 [97] "96"  "98"  "89"  "103" "100" "99"  "102" "106" "101" "104" "120"
[1] "2020-03-16"
[1] "2020-03-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-30"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-31"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-01"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-02"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-03"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-04"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-05"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-06"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-07"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-08"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-09"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-10"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-11"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-12"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-13"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-14"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-15"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-16"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-17"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-18"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-19"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-30"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-01"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-02"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-03"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-04"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-05"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-06"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-07"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-08"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-09"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-10"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-11"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-12"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-13"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-14"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-15"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-16"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-17"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-18"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-19"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-30"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-31"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-01"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-02"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-03"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-04"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-05"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-06"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-07"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-08"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-09"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-10"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-11"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-12"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-13"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-14"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-15"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-16"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-17"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-18"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-19"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-30"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-01"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-02"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-03"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-04"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-05"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-06"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-07"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-08"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-09"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-10"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-11"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-12"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-13"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-14"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-15"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-16"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-17"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-18"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-19"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
`summarise()` ungrouping output (override with `.groups` argument)
Joining, by = "Region"
`summarise()` regrouping output by 'date_f', 'Age', 'Sex' (override with `.groups` argument)
# A tibble: 1 x 3
  Region Cases Deaths
  <chr>  <dbl>  <dbl>
1 All        0   7688
Adding missing grouping variables: `Region`
# A tibble: 32 x 3
# Groups:   Region [16]
   Region    Measure Value
   <chr>     <chr>   <dbl>
 1 Amazonas  Cases       0
 2 Amazonas  Deaths    101
 3 Antioquia Cases       0
 4 Antioquia Deaths    275
 5 Atlantico Cases       0
 6 Atlantico Deaths   2295
 7 Bogota    Cases       0
 8 Bogota    Deaths   1905
 9 Bolivar   Cases       0
10 Bolivar   Deaths    520
# ... with 22 more rows
[1] "All"

    Antioquia         Choco       Cordoba  Cundinamarca       Guajira 
         8610         12710         11070         12710          7380 
    Magdalena        Nariño Nte Santander   Santa Marta     Santander 
        16400         25420          1640         11070          2460 
        Sucre 
        12710 
Auto-refreshing stale OAuth token.
Fehler: Client error: (429) RESOURCE_EXHAUSTED
  * Either out of resource quota or reaching rate limiting. The client should look for google.rpc.QuotaFailure error detail for more information.
  * Quota exceeded for quota group 'ReadGroup' and limit 'Read requests per 100 seconds' of service 'sheets.googleapis.com' for consumer 'project_number:603366585132'.

Error details:
  * Error details of type 'google.rpc.Help' are not implemented yet.
  * Workaround: use `tryCatch()` and inspect error payload yourself.
  * Please open an issue at https://github.com/r-lib/gargle/issues, so we can fix.
Backtrace:
    x
 1. \-googlesheets4::write_sheet(...)
 2.   \-googlesheets4::gs4_get(ssid)
 3.     \-googlesheets4:::gs4_get_impl_(as_sheets_id(ss))
 4.       \-gargle::response_process(raw_resp)
 5.         \-gargle:::stop_request_failed(error_message(resp), resp)
Ausführung angehalten
-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.3.0     v purrr   0.3.4
v tibble  3.0.3     v dplyr   1.0.0
v tidyr   1.1.0     v stringr 1.4.0
v readr   1.3.1     v forcats 0.5.0
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()
Warnmeldungen:
1: Paket 'tidyverse' wurde unter R Version 3.6.3 erstellt 
2: Paket 'ggplot2' wurde unter R Version 3.6.3 erstellt 
3: Paket 'tibble' wurde unter R Version 3.6.3 erstellt 
4: Paket 'tidyr' wurde unter R Version 3.6.3 erstellt 
5: Paket 'readr' wurde unter R Version 3.6.3 erstellt 
6: Paket 'purrr' wurde unter R Version 3.6.3 erstellt 
7: Paket 'dplyr' wurde unter R Version 3.6.3 erstellt 
8: Paket 'stringr' wurde unter R Version 3.6.3 erstellt 
9: Paket 'forcats' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'lubridate'

The following objects are masked from 'package:base':

    date, intersect, setdiff, union

Warnmeldung:
Paket 'lubridate' wurde unter R Version 3.6.3 erstellt 
Warnmeldung:
Paket 'googlesheets4' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'googledrive'

The following objects are masked from 'package:googlesheets4':

    request_generate, request_make

Warnmeldung:
Paket 'googledrive' wurde unter R Version 3.6.3 erstellt 
Parsed with column specification:
cols(
  .default = col_character(),
  `ID de caso` = col_double(),
  `Fecha de notificación` = col_datetime(format = ""),
  Edad = col_double(),
  `Fecha de muerte` = col_datetime(format = ""),
  `Fecha diagnostico` = col_datetime(format = ""),
  `Fecha recuperado` = col_datetime(format = ""),
  `fecha reporte web` = col_datetime(format = ""),
  `Codigo departamento` = col_double(),
  `Codigo pais` = col_double()
)
See spec(...) for full column specifications.
Parsed with column specification:
cols(
  .default = col_double(),
  Fecha = col_character(),
  `Positividad acumulada` = col_number()
)
See spec(...) for full column specifications.
[1] "Leve"         "Asintomático" "Fallecido"    "Moderado"     "Grave"       
[6] "N/A"          "LEVE"        
 [1] "Bogotá D.C."                                            
 [2] "Valle del Cauca"                                        
 [3] "Antioquia"                                              
 [4] "Cartagena D.T. y C."                                    
 [5] "Huila"                                                  
 [6] "Meta"                                                   
 [7] "Risaralda"                                              
 [8] "Norte de Santander"                                     
 [9] "Caldas"                                                 
[10] "Cundinamarca"                                           
[11] "Barranquilla D.E."                                      
[12] "Santander"                                              
[13] "Quindío"                                                
[14] "Tolima"                                                 
[15] "Cauca"                                                  
[16] "Santa Marta D.T. y C."                                  
[17] "Cesar"                                                  
[18] "Archipiélago de San Andrés Providencia y Santa Catalina"
[19] "Casanare"                                               
[20] "Nariño"                                                 
[21] "Atlántico"                                              
[22] "Boyacá"                                                 
[23] "Córdoba"                                                
[24] "Bolívar"                                                
[25] "Sucre"                                                  
[26] "Magdalena"                                              
[27] "La Guajira"                                             
[28] "Buenaventura D.E."                                      
[29] "Chocó"                                                  
[30] "Amazonas"                                               
[31] "Caquetá"                                                
[32] "Putumayo"                                               
[33] "Arauca"                                                 
[34] "Vaupés"                                                 
[35] "Guainía"                                                
[36] "Vichada"                                                
[37] "Guaviare"                                               
Warnmeldung:
All formats failed to parse. No formats found. 
`summarise()` ungrouping output (override with `.groups` argument)
[1] "M" "F"
  [1] "2020-04-05" "2020-04-06" "2020-03-23" "2020-03-22" "2020-03-16"
  [6] "2020-03-26" "2020-03-25" "2020-04-04" "2020-04-15" "2020-04-09"
 [11] "2020-03-30" "2020-03-28" "2020-06-10" "2020-04-02" "2020-04-08"
 [16] "2020-03-27" "2020-04-12" "2020-04-03" "2020-04-24" "2020-04-21"
 [21] "2020-04-07" "2020-04-14" "2020-04-01" "2020-04-19" "2020-03-31"
 [26] "2020-04-10" "2020-04-18" "2020-04-11" "2020-03-29" "2020-04-28"
 [31] "2020-05-04" "2020-04-17" "2020-04-16" "2020-04-13" "2020-04-25"
 [36] "2020-03-24" "2020-05-01" "2020-05-31" "2020-04-29" "2020-05-11"
 [41] "2020-04-27" "2020-04-20" "2020-04-26" "2020-05-09" "2020-04-22"
 [46] "2020-05-07" "2020-04-23" "2020-05-02" "2020-04-30" "2020-05-06"
 [51] "2020-06-03" "2020-05-23" "2020-06-05" "2020-05-05" "2020-05-18"
 [56] "2020-05-03" "2020-05-08" "2020-05-17" "2020-05-29" "2020-05-22"
 [61] "2020-05-21" "2020-05-13" "2020-05-27" "2020-05-10" "2020-05-12"
 [66] "2020-07-19" "2020-06-02" "2020-06-29" "2020-05-28" "2020-06-01"
 [71] "2020-05-15" "2020-05-20" "2020-06-16" "2020-06-06" "2020-06-12"
 [76] "2020-06-13" "2020-05-26" "2020-05-14" "2020-05-19" "2020-05-30"
 [81] "2020-05-24" "2020-05-16" "2020-06-09" "2020-06-07" "2020-05-25"
 [86] "2020-06-19" "2020-06-14" "2020-07-12" "2020-06-25" "2020-06-17"
 [91] "2020-06-15" "2020-06-08" "2020-06-24" "2020-07-20" "2020-06-04"
 [96] "2020-06-23" "2020-07-06" "2020-07-08" "2020-06-30" "2020-07-15"
[101] "2020-06-18" "2020-07-02" "2020-06-21" "2020-06-11" "2020-06-22"
[106] "2020-06-20" "2020-07-01" "2020-07-17" "2020-07-03" "2020-06-27"
[111] "2020-07-11" "2020-07-04" "2020-06-26" "2020-07-09" "2020-07-07"
[116] "2020-07-16" "2020-06-28" "2020-07-18" "2020-07-05" "2020-07-23"
[121] "2020-07-21" "2020-07-10" "2020-07-13" "2020-07-14" "2020-07-22"
[126] "2020-07-24"
 [1] "Amazonas"        "Antioquia"       "Arauca"          "Atlantico"      
 [5] "Bogota"          "Bolivar"         "Boyaca"          "Caldas"         
 [9] "Caqueta"         "Casanare"        "Cauca"           "Cesar"          
[13] "Choco"           "Cordoba"         "Cundinamarca"    "Guainia"        
[17] "Guajira"         "Huila"           "Magdalena"       "Meta"           
[21] "Nariño"          "Nte Santander"   "Putumayo"        "Quindio"        
[25] "Risaralda"       "Santa Marta"     "Santander"       "Sucre"          
[29] "Tolima"          "Valle del Cauca" "Vaupes"         
 [1] "Bogota"          "Valle del Cauca" "Antioquia"       "Bolivar"        
 [5] "resto"           "Nte Santander"   "Cundinamarca"    "Atlantico"      
 [9] "Santander"       "Santa Marta"     "Nariño"          "Cordoba"        
[13] "Sucre"           "Magdalena"       "Guajira"         "Choco"          
[17] "Amazonas"       
`summarise()` ungrouping output (override with `.groups` argument)
# A tibble: 2 x 2
  Measure `sum(Value)`
  <chr>          <dbl>
1 Cases         233541
2 Deaths          7975
`summarise()` regrouping output by 'Region' (override with `.groups` argument)
# A tibble: 34 x 3
# Groups:   Region [17]
   Region    Measure `sum(Value)`
   <chr>     <chr>          <dbl>
 1 Amazonas  Cases           2479
 2 Amazonas  Deaths           101
 3 Antioquia Cases          21922
 4 Antioquia Deaths           301
 5 Atlantico Cases          47005
 6 Atlantico Deaths          2332
 7 Bogota    Cases          77889
 8 Bogota    Deaths          2000
 9 Bolivar   Cases          16118
10 Bolivar   Deaths           528
# ... with 24 more rows
[1] "f" "m"
 [1] "Bogota"          "Valle del Cauca" "Antioquia"       "Bolivar"        
 [5] "resto"           "Nte Santander"   "Cundinamarca"    "Atlantico"      
 [9] "Santander"       "Santa Marta"     "Nariño"          "Cordoba"        
[13] "Sucre"           "Magdalena"       "Guajira"         "Choco"          
[17] "Amazonas"       
  [1] NA           "2020-04-05" "2020-04-06" "2020-03-23" "2020-03-22"
  [6] "2020-03-16" "2020-03-26" "2020-03-25" "2020-04-04" "2020-04-15"
 [11] "2020-04-09" "2020-03-30" "2020-03-28" "2020-06-10" "2020-04-02"
 [16] "2020-04-08" "2020-03-27" "2020-04-12" "2020-04-03" "2020-04-24"
 [21] "2020-04-21" "2020-04-07" "2020-04-14" "2020-04-01" "2020-04-19"
 [26] "2020-03-31" "2020-04-10" "2020-04-18" "2020-04-11" "2020-03-29"
 [31] "2020-04-28" "2020-05-04" "2020-04-17" "2020-04-16" "2020-04-13"
 [36] "2020-04-25" "2020-03-24" "2020-05-01" "2020-05-31" "2020-04-29"
 [41] "2020-05-11" "2020-04-27" "2020-04-20" "2020-04-26" "2020-05-09"
 [46] "2020-04-22" "2020-05-07" "2020-04-23" "2020-05-02" "2020-04-30"
 [51] "2020-05-06" "2020-06-03" "2020-05-23" "2020-06-05" "2020-05-05"
 [56] "2020-05-18" "2020-05-03" "2020-05-08" "2020-05-17" "2020-05-29"
 [61] "2020-05-22" "2020-05-21" "2020-05-13" "2020-05-27" "2020-05-10"
 [66] "2020-05-12" "2020-07-19" "2020-06-02" "2020-06-29" "2020-05-28"
 [71] "2020-06-01" "2020-05-15" "2020-05-20" "2020-06-16" "2020-06-06"
 [76] "2020-06-12" "2020-06-13" "2020-05-26" "2020-05-14" "2020-05-19"
 [81] "2020-05-30" "2020-05-24" "2020-05-16" "2020-06-09" "2020-06-07"
 [86] "2020-05-25" "2020-06-19" "2020-06-14" "2020-07-12" "2020-06-25"
 [91] "2020-06-17" "2020-06-15" "2020-06-08" "2020-06-24" "2020-07-20"
 [96] "2020-06-04" "2020-06-23" "2020-07-06" "2020-07-08" "2020-06-30"
[101] "2020-07-15" "2020-06-18" "2020-07-02" "2020-06-21" "2020-06-11"
[106] "2020-06-22" "2020-06-20" "2020-07-01" "2020-07-17" "2020-07-03"
[111] "2020-06-27" "2020-07-11" "2020-07-04" "2020-06-26" "2020-07-09"
[116] "2020-07-07" "2020-07-16" "2020-06-28" "2020-07-18" "2020-07-05"
[121] "2020-07-23" "2020-07-21" "2020-07-10" "2020-07-13" "2020-07-14"
[126] "2020-07-22" "2020-07-24"
  [1] "19"  "34"  "50"  "55"  "25"  "27"  "85"  "22"  "28"  "36"  "42"  "74" 
 [13] "68"  "48"  "30"  "61"  "73"  "54"  "26"  "23"  "18"  "49"  "65"  "59" 
 [25] "72"  "45"  "29"  "21"  "79"  "52"  "71"  "24"  "44"  "38"  "31"  "41" 
 [37] "67"  "62"  "58"  "37"  "20"  "32"  "64"  "40"  "46"  "39"  "9"   "53" 
 [49] "56"  "51"  "69"  "16"  "57"  "60"  "33"  "76"  "47"  "35"  "88"  "70" 
 [61] "81"  "17"  "63"  "80"  "84"  "87"  "83"  "43"  "77"  "15"  "66"  "3"  
 [73] "82"  "12"  "8"   "1"   "5"   "6"   "75"  "2"   "0"   "13"  "4"   "78" 
 [85] "10"  "94"  "7"   "95"  "11"  "93"  "92"  "90"  "97"  "91"  "86"  "14" 
 [97] "96"  "98"  "89"  "103" "100" "99"  "102" "101" "104" "106" "120"
[1] "2020-03-16"
[1] "2020-03-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-30"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-31"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-01"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-02"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-03"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-04"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-05"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-06"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-07"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-08"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-09"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-10"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-11"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-12"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-13"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-14"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-15"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-16"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-17"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-18"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-19"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-30"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-01"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-02"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-03"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-04"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-05"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-06"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-07"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-08"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-09"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-10"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-11"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-12"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-13"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-14"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-15"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-16"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-17"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-18"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-19"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-30"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-31"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-01"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-02"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-03"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-04"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-05"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-06"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-07"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-08"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-09"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-10"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-11"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-12"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-13"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-14"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-15"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-16"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-17"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-18"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-19"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-30"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-01"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-02"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-03"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-04"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-05"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-06"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-07"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-08"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-09"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-10"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-11"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-12"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-13"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-14"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-15"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-16"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-17"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-18"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-19"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
`summarise()` ungrouping output (override with `.groups` argument)
Joining, by = "Region"
`summarise()` regrouping output by 'date_f', 'Age', 'Sex' (override with `.groups` argument)
# A tibble: 1 x 3
  Region Cases Deaths
  <chr>  <dbl>  <dbl>
1 All        0   7975
Adding missing grouping variables: `Region`
# A tibble: 32 x 3
# Groups:   Region [16]
   Region    Measure Value
   <chr>     <chr>   <dbl>
 1 Amazonas  Cases       0
 2 Amazonas  Deaths    101
 3 Antioquia Cases       0
 4 Antioquia Deaths    301
 5 Atlantico Cases       0
 6 Atlantico Deaths   2332
 7 Bogota    Cases       0
 8 Bogota    Deaths   2000
 9 Bolivar   Cases       0
10 Bolivar   Deaths    528
# ... with 22 more rows
[1] "All"

    Antioquia         Choco       Cordoba  Cundinamarca       Guajira 
         9020         13120         11480         13120          7790 
    Magdalena        Nariño Nte Santander   Santa Marta     Santander 
        16810         25830          2050         11480          2870 
        Sucre 
        13120 
Auto-refreshing stale OAuth token.
Writing to "Colombia input"
Writing to sheet "database"
Writing to "Colombia_Bogota input"
Writing to sheet "database"
Writing to "Colombia_Atlantico input"
Writing to sheet "database"
Writing to "Colombia_Bolivar input"
Writing to sheet "database"
Writing to "Colombia_Valle del Cauca input"
Writing to sheet "database"
Writing to "Colombia_Amazonas input"
Writing to sheet "database"
Writing to "Colombia_others input"
Writing to sheet "database"
Auto-refreshing stale OAuth token.
Created Drive file:
  * CO25.07.2020cases&deaths: 1h6zrXi4JHUoq4NwaLe5MrQNlgerfSBBSDKdbYG3WaNI
with MIME type:
  * application/vnd.google-apps.spreadsheet
Writing to "CO25.07.2020cases&deaths"
Writing to sheet "cases&deaths_age_sex"
Auto-refreshing stale OAuth token.
Fehler: Client error: (400) INVALID_ARGUMENT
  * Client specified an invalid argument. Check error message and error details for more information.
  * Invalid requests[0].updateSheetProperties: This action would increase the number of cells in the workbook above the limit of 5000000 cells.
Backtrace:
    x
 1. \-googlesheets4::write_sheet(db, ss = meta$id, sheet = "cases&deaths_age_sex")
 2.   \-gargle::response_process(resp_raw)
 3.     \-gargle:::stop_request_failed(error_message(resp), resp)
Ausführung angehalten
-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.3.0     v purrr   0.3.4
v tibble  3.0.3     v dplyr   1.0.0
v tidyr   1.1.0     v stringr 1.4.0
v readr   1.3.1     v forcats 0.5.0
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()
Warnmeldungen:
1: Paket 'tidyverse' wurde unter R Version 3.6.3 erstellt 
2: Paket 'ggplot2' wurde unter R Version 3.6.3 erstellt 
3: Paket 'tibble' wurde unter R Version 3.6.3 erstellt 
4: Paket 'tidyr' wurde unter R Version 3.6.3 erstellt 
5: Paket 'readr' wurde unter R Version 3.6.3 erstellt 
6: Paket 'purrr' wurde unter R Version 3.6.3 erstellt 
7: Paket 'dplyr' wurde unter R Version 3.6.3 erstellt 
8: Paket 'stringr' wurde unter R Version 3.6.3 erstellt 
9: Paket 'forcats' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'lubridate'

The following objects are masked from 'package:base':

    date, intersect, setdiff, union

Warnmeldung:
Paket 'lubridate' wurde unter R Version 3.6.3 erstellt 
Warnmeldung:
Paket 'googlesheets4' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'googledrive'

The following objects are masked from 'package:googlesheets4':

    request_generate, request_make

Warnmeldung:
Paket 'googledrive' wurde unter R Version 3.6.3 erstellt 
Parsed with column specification:
cols(
  .default = col_character(),
  `ID de caso` = col_double(),
  `Fecha de notificación` = col_datetime(format = ""),
  Edad = col_double(),
  `Fecha de muerte` = col_datetime(format = ""),
  `Fecha diagnostico` = col_datetime(format = ""),
  `Fecha recuperado` = col_datetime(format = ""),
  `fecha reporte web` = col_datetime(format = ""),
  `Codigo departamento` = col_double(),
  `Codigo pais` = col_double()
)
See spec(...) for full column specifications.
Parsed with column specification:
cols(
  .default = col_double(),
  Fecha = col_character(),
  `Positividad acumulada` = col_number()
)
See spec(...) for full column specifications.
[1] "Leve"         "Asintomático" "Fallecido"    "Moderado"     "Grave"       
[6] "N/A"          "LEVE"        
 [1] "Bogotá D.C."                                            
 [2] "Valle del Cauca"                                        
 [3] "Antioquia"                                              
 [4] "Cartagena D.T. y C."                                    
 [5] "Huila"                                                  
 [6] "Meta"                                                   
 [7] "Risaralda"                                              
 [8] "Norte de Santander"                                     
 [9] "Caldas"                                                 
[10] "Cundinamarca"                                           
[11] "Barranquilla D.E."                                      
[12] "Santander"                                              
[13] "Quindío"                                                
[14] "Tolima"                                                 
[15] "Cauca"                                                  
[16] "Santa Marta D.T. y C."                                  
[17] "Cesar"                                                  
[18] "Archipiélago de San Andrés Providencia y Santa Catalina"
[19] "Casanare"                                               
[20] "Nariño"                                                 
[21] "Atlántico"                                              
[22] "Boyacá"                                                 
[23] "Córdoba"                                                
[24] "Bolívar"                                                
[25] "Sucre"                                                  
[26] "Magdalena"                                              
[27] "La Guajira"                                             
[28] "Buenaventura D.E."                                      
[29] "Chocó"                                                  
[30] "Amazonas"                                               
[31] "Caquetá"                                                
[32] "Putumayo"                                               
[33] "Arauca"                                                 
[34] "Vaupés"                                                 
[35] "Guainía"                                                
[36] "Vichada"                                                
[37] "Guaviare"                                               
Warnmeldung:
All formats failed to parse. No formats found. 
`summarise()` ungrouping output (override with `.groups` argument)
[1] "M" "F"
  [1] "2020-04-05" "2020-04-06" "2020-03-23" "2020-03-22" "2020-03-16"
  [6] "2020-03-26" "2020-03-25" "2020-04-04" "2020-04-15" "2020-04-09"
 [11] "2020-03-30" "2020-03-28" "2020-06-10" "2020-04-02" "2020-04-08"
 [16] "2020-03-27" "2020-04-12" "2020-04-03" "2020-04-24" "2020-04-21"
 [21] "2020-04-07" "2020-04-14" "2020-04-01" "2020-04-19" "2020-03-31"
 [26] "2020-04-10" "2020-04-18" "2020-04-11" "2020-03-29" "2020-04-28"
 [31] "2020-05-04" "2020-04-17" "2020-04-16" "2020-04-13" "2020-04-25"
 [36] "2020-03-24" "2020-05-01" "2020-05-31" "2020-04-29" "2020-05-11"
 [41] "2020-04-27" "2020-04-20" "2020-04-26" "2020-05-09" "2020-04-22"
 [46] "2020-05-07" "2020-04-23" "2020-05-02" "2020-04-30" "2020-05-06"
 [51] "2020-06-03" "2020-05-23" "2020-06-05" "2020-05-05" "2020-05-18"
 [56] "2020-05-03" "2020-05-08" "2020-05-17" "2020-05-29" "2020-05-22"
 [61] "2020-05-21" "2020-05-13" "2020-05-27" "2020-05-10" "2020-05-12"
 [66] "2020-07-19" "2020-06-02" "2020-06-29" "2020-05-28" "2020-06-01"
 [71] "2020-05-15" "2020-05-20" "2020-06-16" "2020-06-06" "2020-06-12"
 [76] "2020-06-13" "2020-05-26" "2020-05-14" "2020-05-19" "2020-05-30"
 [81] "2020-05-24" "2020-05-16" "2020-06-09" "2020-06-07" "2020-05-25"
 [86] "2020-06-19" "2020-06-14" "2020-07-12" "2020-06-25" "2020-06-17"
 [91] "2020-06-15" "2020-06-08" "2020-06-24" "2020-07-20" "2020-06-04"
 [96] "2020-06-23" "2020-07-06" "2020-07-08" "2020-06-30" "2020-07-15"
[101] "2020-06-18" "2020-07-02" "2020-06-21" "2020-06-11" "2020-06-22"
[106] "2020-06-20" "2020-07-24" "2020-07-01" "2020-07-17" "2020-07-03"
[111] "2020-06-27" "2020-07-11" "2020-07-04" "2020-06-26" "2020-07-09"
[116] "2020-07-07" "2020-07-16" "2020-06-28" "2020-07-18" "2020-07-05"
[121] "2020-07-23" "2020-07-21" "2020-07-10" "2020-07-13" "2020-07-14"
[126] "2020-07-22" "2020-07-25"
 [1] "Amazonas"        "Antioquia"       "Arauca"          "Atlantico"      
 [5] "Bogota"          "Bolivar"         "Boyaca"          "Caldas"         
 [9] "Caqueta"         "Casanare"        "Cauca"           "Cesar"          
[13] "Choco"           "Cordoba"         "Cundinamarca"    "Guainia"        
[17] "Guajira"         "Huila"           "Magdalena"       "Meta"           
[21] "Nariño"          "Nte Santander"   "Putumayo"        "Quindio"        
[25] "Risaralda"       "Santa Marta"     "Santander"       "Sucre"          
[29] "Tolima"          "Valle del Cauca" "Vaupes"         
 [1] "Bogota"          "Valle del Cauca" "Antioquia"       "Bolivar"        
 [5] "resto"           "Nte Santander"   "Cundinamarca"    "Atlantico"      
 [9] "Santander"       "Santa Marta"     "Nariño"          "Cordoba"        
[13] "Sucre"           "Magdalena"       "Guajira"         "Choco"          
[17] "Amazonas"       
`summarise()` ungrouping output (override with `.groups` argument)
# A tibble: 2 x 2
  Measure `sum(Value)`
  <chr>          <dbl>
1 Cases         240795
2 Deaths          8269
`summarise()` regrouping output by 'Region' (override with `.groups` argument)
# A tibble: 34 x 3
# Groups:   Region [17]
   Region    Measure `sum(Value)`
   <chr>     <chr>          <dbl>
 1 Amazonas  Cases           2497
 2 Amazonas  Deaths           101
 3 Antioquia Cases          23035
 4 Antioquia Deaths           321
 5 Atlantico Cases          47573
 6 Atlantico Deaths          2360
 7 Bogota    Cases          81180
 8 Bogota    Deaths          2115
 9 Bolivar   Cases          16286
10 Bolivar   Deaths           533
# ... with 24 more rows
[1] "f" "m"
 [1] "Bogota"          "Valle del Cauca" "Antioquia"       "Bolivar"        
 [5] "resto"           "Nte Santander"   "Cundinamarca"    "Atlantico"      
 [9] "Santander"       "Santa Marta"     "Nariño"          "Cordoba"        
[13] "Sucre"           "Magdalena"       "Guajira"         "Choco"          
[17] "Amazonas"       
  [1] NA           "2020-04-05" "2020-04-06" "2020-03-23" "2020-03-22"
  [6] "2020-03-16" "2020-03-26" "2020-03-25" "2020-04-04" "2020-04-15"
 [11] "2020-04-09" "2020-03-30" "2020-03-28" "2020-06-10" "2020-04-02"
 [16] "2020-04-08" "2020-03-27" "2020-04-12" "2020-04-03" "2020-04-24"
 [21] "2020-04-21" "2020-04-07" "2020-04-14" "2020-04-01" "2020-04-19"
 [26] "2020-03-31" "2020-04-10" "2020-04-18" "2020-04-11" "2020-03-29"
 [31] "2020-04-28" "2020-05-04" "2020-04-17" "2020-04-16" "2020-04-13"
 [36] "2020-04-25" "2020-03-24" "2020-05-01" "2020-05-31" "2020-04-29"
 [41] "2020-05-11" "2020-04-27" "2020-04-20" "2020-04-26" "2020-05-09"
 [46] "2020-04-22" "2020-05-07" "2020-04-23" "2020-05-02" "2020-04-30"
 [51] "2020-05-06" "2020-06-03" "2020-05-23" "2020-06-05" "2020-05-05"
 [56] "2020-05-18" "2020-05-03" "2020-05-08" "2020-05-17" "2020-05-29"
 [61] "2020-05-22" "2020-05-21" "2020-05-13" "2020-05-27" "2020-05-10"
 [66] "2020-05-12" "2020-07-19" "2020-06-02" "2020-06-29" "2020-05-28"
 [71] "2020-06-01" "2020-05-15" "2020-05-20" "2020-06-16" "2020-06-06"
 [76] "2020-06-12" "2020-06-13" "2020-05-26" "2020-05-14" "2020-05-19"
 [81] "2020-05-30" "2020-05-24" "2020-05-16" "2020-06-09" "2020-06-07"
 [86] "2020-05-25" "2020-06-19" "2020-06-14" "2020-07-12" "2020-06-25"
 [91] "2020-06-17" "2020-06-15" "2020-06-08" "2020-06-24" "2020-07-20"
 [96] "2020-06-04" "2020-06-23" "2020-07-06" "2020-07-08" "2020-06-30"
[101] "2020-07-15" "2020-06-18" "2020-07-02" "2020-06-21" "2020-06-11"
[106] "2020-06-22" "2020-06-20" "2020-07-24" "2020-07-01" "2020-07-17"
[111] "2020-07-03" "2020-06-27" "2020-07-11" "2020-07-04" "2020-06-26"
[116] "2020-07-09" "2020-07-07" "2020-07-16" "2020-06-28" "2020-07-18"
[121] "2020-07-05" "2020-07-23" "2020-07-21" "2020-07-10" "2020-07-13"
[126] "2020-07-14" "2020-07-22" "2020-07-25"
  [1] "19"  "34"  "50"  "55"  "25"  "27"  "85"  "22"  "28"  "36"  "42"  "74" 
 [13] "68"  "48"  "30"  "61"  "73"  "54"  "26"  "23"  "18"  "49"  "65"  "59" 
 [25] "72"  "45"  "29"  "21"  "79"  "52"  "71"  "24"  "44"  "38"  "31"  "41" 
 [37] "67"  "62"  "58"  "37"  "20"  "32"  "64"  "40"  "46"  "39"  "9"   "53" 
 [49] "56"  "51"  "69"  "16"  "57"  "60"  "33"  "76"  "47"  "35"  "88"  "70" 
 [61] "81"  "17"  "63"  "80"  "84"  "87"  "83"  "43"  "77"  "15"  "66"  "3"  
 [73] "82"  "12"  "8"   "1"   "5"   "6"   "75"  "2"   "0"   "13"  "4"   "78" 
 [85] "10"  "94"  "7"   "95"  "11"  "93"  "92"  "90"  "97"  "91"  "86"  "14" 
 [97] "96"  "98"  "89"  "103" "100" "99"  "102" "101" "104" "106" "120"
[1] "2020-03-16"
[1] "2020-03-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-30"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-31"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-01"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-02"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-03"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-04"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-05"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-06"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-07"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-08"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-09"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-10"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-11"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-12"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-13"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-14"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-15"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-16"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-17"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-18"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-19"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-30"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-01"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-02"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-03"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-04"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-05"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-06"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-07"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-08"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-09"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-10"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-11"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-12"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-13"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-14"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-15"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-16"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-17"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-18"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-19"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-30"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-31"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-01"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-02"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-03"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-04"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-05"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-06"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-07"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-08"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-09"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-10"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-11"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-12"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-13"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-14"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-15"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-16"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-17"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-18"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-19"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-30"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-01"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-02"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-03"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-04"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-05"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-06"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-07"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-08"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-09"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-10"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-11"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-12"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-13"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-14"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-15"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-16"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-17"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-18"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-19"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
`summarise()` ungrouping output (override with `.groups` argument)
Joining, by = "Region"
`summarise()` regrouping output by 'date_f', 'Age', 'Sex' (override with `.groups` argument)
# A tibble: 1 x 3
  Region Cases Deaths
  <chr>  <dbl>  <dbl>
1 All        0   8269
Adding missing grouping variables: `Region`
# A tibble: 32 x 3
# Groups:   Region [16]
   Region    Measure Value
   <chr>     <chr>   <dbl>
 1 Amazonas  Cases       0
 2 Amazonas  Deaths    101
 3 Antioquia Cases       0
 4 Antioquia Deaths    321
 5 Atlantico Cases       0
 6 Atlantico Deaths   2360
 7 Bogota    Cases       0
 8 Bogota    Deaths   2115
 9 Bolivar   Cases       0
10 Bolivar   Deaths    533
# ... with 22 more rows
[1] "All"

    Antioquia         Choco       Cordoba  Cundinamarca       Guajira 
         9430         13530         11890         13530          8200 
    Magdalena        Nariño Nte Santander   Santa Marta     Santander 
        17220         26240          2460         11890          3280 
        Sucre 
        13530 
Auto-refreshing stale OAuth token.
Fehler: Client error: (429) RESOURCE_EXHAUSTED
  * Either out of resource quota or reaching rate limiting. The client should look for google.rpc.QuotaFailure error detail for more information.
  * Quota exceeded for quota group 'ReadGroup' and limit 'Read requests per 100 seconds' of service 'sheets.googleapis.com' for consumer 'project_number:603366585132'.

Error details:
  * Error details of type 'google.rpc.Help' are not implemented yet.
  * Workaround: use `tryCatch()` and inspect error payload yourself.
  * Please open an issue at https://github.com/r-lib/gargle/issues, so we can fix.
Backtrace:
    x
 1. \-googlesheets4::write_sheet(...)
 2.   \-googlesheets4::gs4_get(ssid)
 3.     \-googlesheets4:::gs4_get_impl_(as_sheets_id(ss))
 4.       \-gargle::response_process(raw_resp)
 5.         \-gargle:::stop_request_failed(error_message(resp), resp)
Ausführung angehalten
-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.3.0     v purrr   0.3.4
v tibble  3.0.3     v dplyr   1.0.0
v tidyr   1.1.0     v stringr 1.4.0
v readr   1.3.1     v forcats 0.5.0
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()
Warnmeldungen:
1: Paket 'tidyverse' wurde unter R Version 3.6.3 erstellt 
2: Paket 'ggplot2' wurde unter R Version 3.6.3 erstellt 
3: Paket 'tibble' wurde unter R Version 3.6.3 erstellt 
4: Paket 'tidyr' wurde unter R Version 3.6.3 erstellt 
5: Paket 'readr' wurde unter R Version 3.6.3 erstellt 
6: Paket 'purrr' wurde unter R Version 3.6.3 erstellt 
7: Paket 'dplyr' wurde unter R Version 3.6.3 erstellt 
8: Paket 'stringr' wurde unter R Version 3.6.3 erstellt 
9: Paket 'forcats' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'lubridate'

The following objects are masked from 'package:base':

    date, intersect, setdiff, union

Warnmeldung:
Paket 'lubridate' wurde unter R Version 3.6.3 erstellt 
Warnmeldung:
Paket 'googlesheets4' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'googledrive'

The following objects are masked from 'package:googlesheets4':

    request_generate, request_make

Warnmeldung:
Paket 'googledrive' wurde unter R Version 3.6.3 erstellt 
Parsed with column specification:
cols(
  .default = col_character(),
  `ID de caso` = col_double(),
  `Fecha de notificación` = col_datetime(format = ""),
  Edad = col_double(),
  `Fecha de muerte` = col_datetime(format = ""),
  `Fecha diagnostico` = col_datetime(format = ""),
  `Fecha recuperado` = col_datetime(format = ""),
  `fecha reporte web` = col_datetime(format = ""),
  `Codigo departamento` = col_double(),
  `Codigo pais` = col_double()
)
See spec(...) for full column specifications.
Parsed with column specification:
cols(
  .default = col_double(),
  Fecha = col_character(),
  `Positividad acumulada` = col_number()
)
See spec(...) for full column specifications.
[1] "Leve"         "Asintomático" "Fallecido"    "Moderado"     "Grave"       
[6] "N/A"          "LEVE"         "GRAVE"        "MODERADO"    
 [1] "Bogotá D.C."                                            
 [2] "Valle del Cauca"                                        
 [3] "Antioquia"                                              
 [4] "Cartagena D.T. y C."                                    
 [5] "Huila"                                                  
 [6] "Meta"                                                   
 [7] "Risaralda"                                              
 [8] "Norte de Santander"                                     
 [9] "Caldas"                                                 
[10] "Cundinamarca"                                           
[11] "Barranquilla D.E."                                      
[12] "Santander"                                              
[13] "Quindío"                                                
[14] "Tolima"                                                 
[15] "Cauca"                                                  
[16] "Santa Marta D.T. y C."                                  
[17] "Cesar"                                                  
[18] "Archipiélago de San Andrés Providencia y Santa Catalina"
[19] "Casanare"                                               
[20] "Nariño"                                                 
[21] "Atlántico"                                              
[22] "Boyacá"                                                 
[23] "Córdoba"                                                
[24] "Bolívar"                                                
[25] "Sucre"                                                  
[26] "Magdalena"                                              
[27] "La Guajira"                                             
[28] "Buenaventura D.E."                                      
[29] "Chocó"                                                  
[30] "Amazonas"                                               
[31] "Caquetá"                                                
[32] "Putumayo"                                               
[33] "Arauca"                                                 
[34] "Vaupés"                                                 
[35] "Guainía"                                                
[36] "Vichada"                                                
[37] "Guaviare"                                               
Warnmeldung:
All formats failed to parse. No formats found. 
`summarise()` ungrouping output (override with `.groups` argument)
[1] "M" "F"
  [1] "2020-04-05" "2020-04-06" "2020-03-23" "2020-03-22" "2020-03-16"
  [6] "2020-03-26" "2020-03-25" "2020-04-04" "2020-04-15" "2020-04-09"
 [11] "2020-03-30" "2020-03-28" "2020-06-10" "2020-04-02" "2020-04-08"
 [16] "2020-03-27" "2020-04-12" "2020-04-03" "2020-04-24" "2020-04-21"
 [21] "2020-04-07" "2020-04-14" "2020-04-01" "2020-04-19" "2020-03-31"
 [26] "2020-04-10" "2020-04-18" "2020-04-11" "2020-03-29" "2020-04-28"
 [31] "2020-05-04" "2020-04-17" "2020-04-16" "2020-04-13" "2020-04-25"
 [36] "2020-03-24" "2020-05-01" "2020-05-31" "2020-04-29" "2020-05-11"
 [41] "2020-04-27" "2020-04-20" "2020-04-26" "2020-05-09" "2020-04-22"
 [46] "2020-05-07" "2020-04-23" "2020-05-02" "2020-04-30" "2020-05-06"
 [51] "2020-06-03" "2020-05-23" "2020-06-05" "2020-05-05" "2020-05-18"
 [56] "2020-05-03" "2020-05-08" "2020-05-17" "2020-05-29" "2020-05-22"
 [61] "2020-05-21" "2020-05-13" "2020-05-27" "2020-05-10" "2020-05-12"
 [66] "2020-07-19" "2020-06-02" "2020-06-29" "2020-05-28" "2020-06-01"
 [71] "2020-05-15" "2020-05-20" "2020-06-16" "2020-06-06" "2020-06-12"
 [76] "2020-06-13" "2020-05-26" "2020-05-14" "2020-05-19" "2020-05-30"
 [81] "2020-05-24" "2020-05-16" "2020-06-09" "2020-06-07" "2020-05-25"
 [86] "2020-06-19" "2020-06-14" "2020-07-12" "2020-06-25" "2020-06-17"
 [91] "2020-06-15" "2020-06-08" "2020-06-24" "2020-07-20" "2020-06-04"
 [96] "2020-06-23" "2020-07-06" "2020-07-08" "2020-06-30" "2020-07-15"
[101] "2020-06-18" "2020-07-02" "2020-06-21" "2020-06-11" "2020-06-22"
[106] "2020-06-20" "2020-07-24" "2020-07-01" "2020-07-17" "2020-07-03"
[111] "2020-06-27" "2020-07-11" "2020-07-04" "2020-06-26" "2020-07-09"
[116] "2020-07-07" "2020-07-16" "2020-06-28" "2020-07-18" "2020-07-05"
[121] "2020-07-23" "2020-07-21" "2020-07-10" "2020-07-13" "2020-07-14"
[126] "2020-07-25" "2020-07-22" "2020-07-26"
 [1] "Amazonas"        "Antioquia"       "Arauca"          "Atlantico"      
 [5] "Bogota"          "Bolivar"         "Boyaca"          "Caldas"         
 [9] "Caqueta"         "Casanare"        "Cauca"           "Cesar"          
[13] "Choco"           "Cordoba"         "Cundinamarca"    "Guainia"        
[17] "Guajira"         "Huila"           "Magdalena"       "Meta"           
[21] "Nariño"          "Nte Santander"   "Putumayo"        "Quindio"        
[25] "Risaralda"       "Santa Marta"     "Santander"       "Sucre"          
[29] "Tolima"          "Valle del Cauca" "Vaupes"         
 [1] "Bogota"          "Valle del Cauca" "Antioquia"       "Bolivar"        
 [5] "resto"           "Nte Santander"   "Cundinamarca"    "Atlantico"      
 [9] "Santander"       "Santa Marta"     "Cesar"           "Nariño"         
[13] "Cordoba"         "Sucre"           "Magdalena"       "Guajira"        
[17] "Choco"           "Amazonas"       
`summarise()` ungrouping output (override with `.groups` argument)
# A tibble: 2 x 2
  Measure `sum(Value)`
  <chr>          <dbl>
1 Cases         248976
2 Deaths          8525
`summarise()` regrouping output by 'Region' (override with `.groups` argument)
# A tibble: 36 x 3
# Groups:   Region [18]
   Region    Measure `sum(Value)`
   <chr>     <chr>          <dbl>
 1 Amazonas  Cases           2503
 2 Amazonas  Deaths           101
 3 Antioquia Cases          24143
 4 Antioquia Deaths           345
 5 Atlantico Cases          48439
 6 Atlantico Deaths          2394
 7 Bogota    Cases          84213
 8 Bogota    Deaths          2196
 9 Bolivar   Cases          16695
10 Bolivar   Deaths           540
# ... with 26 more rows
[1] "f" "m"
 [1] "Bogota"          "Valle del Cauca" "Antioquia"       "Bolivar"        
 [5] "resto"           "Nte Santander"   "Cundinamarca"    "Atlantico"      
 [9] "Santander"       "Santa Marta"     "Cesar"           "Nariño"         
[13] "Cordoba"         "Sucre"           "Magdalena"       "Guajira"        
[17] "Choco"           "Amazonas"       
  [1] NA           "2020-04-05" "2020-04-06" "2020-03-23" "2020-03-22"
  [6] "2020-03-16" "2020-03-26" "2020-03-25" "2020-04-04" "2020-04-15"
 [11] "2020-04-09" "2020-03-30" "2020-03-28" "2020-06-10" "2020-04-02"
 [16] "2020-04-08" "2020-03-27" "2020-04-12" "2020-04-03" "2020-04-24"
 [21] "2020-04-21" "2020-04-07" "2020-04-14" "2020-04-01" "2020-04-19"
 [26] "2020-03-31" "2020-04-10" "2020-04-18" "2020-04-11" "2020-03-29"
 [31] "2020-04-28" "2020-05-04" "2020-04-17" "2020-04-16" "2020-04-13"
 [36] "2020-04-25" "2020-03-24" "2020-05-01" "2020-05-31" "2020-04-29"
 [41] "2020-05-11" "2020-04-27" "2020-04-20" "2020-04-26" "2020-05-09"
 [46] "2020-04-22" "2020-05-07" "2020-04-23" "2020-05-02" "2020-04-30"
 [51] "2020-05-06" "2020-06-03" "2020-05-23" "2020-06-05" "2020-05-05"
 [56] "2020-05-18" "2020-05-03" "2020-05-08" "2020-05-17" "2020-05-29"
 [61] "2020-05-22" "2020-05-21" "2020-05-13" "2020-05-27" "2020-05-10"
 [66] "2020-05-12" "2020-07-19" "2020-06-02" "2020-06-29" "2020-05-28"
 [71] "2020-06-01" "2020-05-15" "2020-05-20" "2020-06-16" "2020-06-06"
 [76] "2020-06-12" "2020-06-13" "2020-05-26" "2020-05-14" "2020-05-19"
 [81] "2020-05-30" "2020-05-24" "2020-05-16" "2020-06-09" "2020-06-07"
 [86] "2020-05-25" "2020-06-19" "2020-06-14" "2020-07-12" "2020-06-25"
 [91] "2020-06-17" "2020-06-15" "2020-06-08" "2020-06-24" "2020-07-20"
 [96] "2020-06-04" "2020-06-23" "2020-07-06" "2020-07-08" "2020-06-30"
[101] "2020-07-15" "2020-06-18" "2020-07-02" "2020-06-21" "2020-06-11"
[106] "2020-06-22" "2020-06-20" "2020-07-24" "2020-07-01" "2020-07-17"
[111] "2020-07-03" "2020-06-27" "2020-07-11" "2020-07-04" "2020-06-26"
[116] "2020-07-09" "2020-07-07" "2020-07-16" "2020-06-28" "2020-07-18"
[121] "2020-07-05" "2020-07-23" "2020-07-21" "2020-07-10" "2020-07-13"
[126] "2020-07-14" "2020-07-25" "2020-07-22" "2020-07-26"
  [1] "19"  "34"  "50"  "55"  "25"  "27"  "85"  "22"  "28"  "36"  "42"  "74" 
 [13] "68"  "48"  "30"  "61"  "73"  "54"  "26"  "23"  "18"  "49"  "65"  "59" 
 [25] "72"  "45"  "29"  "21"  "79"  "52"  "71"  "24"  "44"  "38"  "31"  "41" 
 [37] "67"  "62"  "58"  "37"  "20"  "32"  "64"  "40"  "46"  "39"  "9"   "53" 
 [49] "56"  "51"  "69"  "16"  "57"  "60"  "33"  "76"  "47"  "35"  "88"  "70" 
 [61] "81"  "17"  "63"  "80"  "84"  "87"  "83"  "43"  "77"  "15"  "66"  "3"  
 [73] "82"  "12"  "8"   "1"   "5"   "6"   "75"  "2"   "0"   "13"  "4"   "78" 
 [85] "10"  "94"  "7"   "95"  "11"  "93"  "92"  "90"  "97"  "91"  "86"  "14" 
 [97] "96"  "98"  "89"  "103" "100" "99"  "102" "101" "104" "106" "120" "107"
[109] "114"
[1] "2020-03-16"
[1] "2020-03-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-30"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-31"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-01"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-02"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-03"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-04"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-05"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-06"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-07"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-08"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-09"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-10"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-11"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-12"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-13"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-14"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-15"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-16"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-17"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-18"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-19"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-30"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-01"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-02"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-03"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-04"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-05"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-06"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-07"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-08"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-09"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-10"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-11"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-12"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-13"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-14"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-15"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-16"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-17"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-18"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-19"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-30"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-31"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-01"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-02"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-03"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-04"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-05"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-06"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-07"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-08"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-09"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-10"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-11"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-12"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-13"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-14"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-15"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-16"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-17"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-18"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-19"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-30"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-01"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-02"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-03"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-04"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-05"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-06"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-07"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-08"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-09"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-10"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-11"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-12"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-13"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-14"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-15"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-16"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-17"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-18"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-19"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
`summarise()` ungrouping output (override with `.groups` argument)
Joining, by = "Region"
`summarise()` regrouping output by 'date_f', 'Age', 'Sex' (override with `.groups` argument)
# A tibble: 1 x 3
  Region Cases Deaths
  <chr>  <dbl>  <dbl>
1 All        0   8525
Adding missing grouping variables: `Region`
# A tibble: 34 x 3
# Groups:   Region [17]
   Region    Measure Value
   <chr>     <chr>   <dbl>
 1 Amazonas  Cases       0
 2 Amazonas  Deaths    101
 3 Antioquia Cases       0
 4 Antioquia Deaths    345
 5 Atlantico Cases       0
 6 Atlantico Deaths   2394
 7 Bogota    Cases       0
 8 Bogota    Deaths   2196
 9 Bolivar   Cases       0
10 Bolivar   Deaths    540
# ... with 24 more rows
[1] "All"

    Antioquia         Cesar         Choco       Cordoba  Cundinamarca 
         9840          1640         13940         12300         13940 
      Guajira     Magdalena        Nariño Nte Santander   Santa Marta 
         8610         17630         26650          2870         12300 
    Santander         Sucre 
         3690         13940 
Auto-refreshing stale OAuth token.
Writing to "Colombia input"
Writing to sheet "database"
Writing to "Colombia_Bogota input"
Writing to sheet "database"
Writing to "Colombia_Atlantico input"
Writing to sheet "database"
Writing to "Colombia_Bolivar input"
Writing to sheet "database"
Writing to "Colombia_Valle del Cauca input"
Writing to sheet "database"
Writing to "Colombia_Amazonas input"
Writing to sheet "database"
Writing to "Colombia_others input"
Writing to sheet "database"
Auto-refreshing stale OAuth token.
Created Drive file:
  * CO27.07.2020cases&deaths: 1AsSb2cWzQSrDtgIbaB5Yn1o75u0iRWbdSgoNEgKrN98
with MIME type:
  * application/vnd.google-apps.spreadsheet
Writing to "CO27.07.2020cases&deaths"
Writing to sheet "cases&deaths_age_sex"
Fehler: Client error: (400) INVALID_ARGUMENT
  * Client specified an invalid argument. Check error message and error details for more information.
  * Invalid requests[0].updateSheetProperties: This action would increase the number of cells in the workbook above the limit of 5000000 cells.
Backtrace:
    x
 1. \-googlesheets4::write_sheet(db, ss = meta$id, sheet = "cases&deaths_age_sex")
 2.   \-gargle::response_process(resp_raw)
 3.     \-gargle:::stop_request_failed(error_message(resp), resp)
Ausführung angehalten
-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.3.0     v purrr   0.3.4
v tibble  3.0.3     v dplyr   1.0.0
v tidyr   1.1.0     v stringr 1.4.0
v readr   1.3.1     v forcats 0.5.0
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()
Warnmeldungen:
1: Paket 'tidyverse' wurde unter R Version 3.6.3 erstellt 
2: Paket 'ggplot2' wurde unter R Version 3.6.3 erstellt 
3: Paket 'tibble' wurde unter R Version 3.6.3 erstellt 
4: Paket 'tidyr' wurde unter R Version 3.6.3 erstellt 
5: Paket 'readr' wurde unter R Version 3.6.3 erstellt 
6: Paket 'purrr' wurde unter R Version 3.6.3 erstellt 
7: Paket 'dplyr' wurde unter R Version 3.6.3 erstellt 
8: Paket 'stringr' wurde unter R Version 3.6.3 erstellt 
9: Paket 'forcats' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'lubridate'

The following objects are masked from 'package:base':

    date, intersect, setdiff, union

Warnmeldung:
Paket 'lubridate' wurde unter R Version 3.6.3 erstellt 
Warnmeldung:
Paket 'googlesheets4' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'googledrive'

The following objects are masked from 'package:googlesheets4':

    request_generate, request_make

Warnmeldung:
Paket 'googledrive' wurde unter R Version 3.6.3 erstellt 
Parsed with column specification:
cols(
  .default = col_character(),
  `ID de caso` = col_double(),
  `Fecha de notificación` = col_datetime(format = ""),
  Edad = col_double(),
  `Fecha de muerte` = col_datetime(format = ""),
  `Fecha diagnostico` = col_datetime(format = ""),
  `Fecha recuperado` = col_datetime(format = ""),
  `fecha reporte web` = col_datetime(format = ""),
  `Codigo departamento` = col_double(),
  `Codigo pais` = col_double()
)
See spec(...) for full column specifications.
Parsed with column specification:
cols(
  .default = col_double(),
  Fecha = col_character(),
  `Positividad acumulada` = col_number()
)
See spec(...) for full column specifications.
[1] "Leve"         "Asintomático" "Fallecido"    "Moderado"     "Grave"       
[6] "N/A"          "LEVE"         "GRAVE"        "MODERADO"    
 [1] "Bogotá D.C."                                            
 [2] "Valle del Cauca"                                        
 [3] "Antioquia"                                              
 [4] "Cartagena D.T. y C."                                    
 [5] "Huila"                                                  
 [6] "Meta"                                                   
 [7] "Risaralda"                                              
 [8] "Norte de Santander"                                     
 [9] "Caldas"                                                 
[10] "Cundinamarca"                                           
[11] "Barranquilla D.E."                                      
[12] "Santander"                                              
[13] "Quindío"                                                
[14] "Tolima"                                                 
[15] "Cauca"                                                  
[16] "Santa Marta D.T. y C."                                  
[17] "Cesar"                                                  
[18] "Archipiélago de San Andrés Providencia y Santa Catalina"
[19] "Casanare"                                               
[20] "Nariño"                                                 
[21] "Atlántico"                                              
[22] "Boyacá"                                                 
[23] "Córdoba"                                                
[24] "Bolívar"                                                
[25] "Sucre"                                                  
[26] "Magdalena"                                              
[27] "La Guajira"                                             
[28] "Buenaventura D.E."                                      
[29] "Chocó"                                                  
[30] "Amazonas"                                               
[31] "Caquetá"                                                
[32] "Putumayo"                                               
[33] "Arauca"                                                 
[34] "Vaupés"                                                 
[35] "Guainía"                                                
[36] "Vichada"                                                
[37] "Guaviare"                                               
`summarise()` ungrouping output (override with `.groups` argument)
[1] "M" "F"
  [1] "2020-04-05" "2020-04-06" "2020-03-23" "2020-03-22" "2020-03-16"
  [6] "2020-03-26" "2020-03-25" "2020-04-04" "2020-04-15" "2020-04-09"
 [11] "2020-03-30" "2020-03-28" "2020-06-10" "2020-04-02" "2020-04-08"
 [16] "2020-03-27" "2020-04-12" "2020-04-03" "2020-04-24" "2020-04-21"
 [21] "2020-04-07" "2020-04-14" "2020-04-01" "2020-04-19" "2020-03-31"
 [26] "2020-04-10" "2020-04-18" "2020-04-11" "2020-03-29" "2020-04-28"
 [31] "2020-05-04" "2020-04-17" "2020-04-16" "2020-04-13" "2020-04-25"
 [36] "2020-03-24" "2020-05-01" "2020-05-31" "2020-04-29" "2020-05-11"
 [41] "2020-04-27" "2020-04-20" "2020-04-26" "2020-05-09" "2020-04-22"
 [46] "2020-05-07" "2020-04-23" "2020-05-02" "2020-04-30" "2020-05-06"
 [51] "2020-06-03" "2020-05-23" "2020-06-05" "2020-05-05" "2020-05-18"
 [56] "2020-05-03" "2020-05-08" "2020-05-17" "2020-05-29" "2020-05-22"
 [61] "2020-05-21" "2020-05-13" "2020-05-27" "2020-05-10" "2020-05-12"
 [66] "2020-07-19" "2020-06-02" "2020-06-29" "2020-05-28" "2020-06-01"
 [71] "2020-05-15" "2020-05-20" "2020-06-16" "2020-06-06" "2020-06-12"
 [76] "2020-06-13" "2020-05-26" "2020-05-14" "2020-05-19" "2020-05-30"
 [81] "2020-05-24" "2020-05-16" "2020-06-09" "2020-06-07" "2020-05-25"
 [86] "2020-06-19" "2020-06-14" "2020-07-12" "2020-06-25" "2020-06-17"
 [91] "2020-06-15" "2020-06-08" "2020-06-24" "2020-07-20" "2020-06-04"
 [96] "2020-06-23" "2020-07-06" "2020-07-08" "2020-06-30" "2020-07-15"
[101] "2020-06-18" "2020-07-02" "2020-06-21" "2020-06-11" "2020-06-22"
[106] "2020-06-20" "2020-07-24" "2020-07-01" "2020-07-17" "2020-07-03"
[111] "2020-06-27" "2020-07-11" "2020-07-04" "2020-06-26" "2020-07-09"
[116] "2020-07-07" "2020-07-16" "2020-06-28" "2020-07-18" "2020-07-05"
[121] "2020-07-23" "2020-07-21" "2020-07-10" "2020-07-13" "2020-07-14"
[126] "2020-07-25" "2020-07-22" "2020-07-26" "2020-07-27"
 [1] "Amazonas"        "Antioquia"       "Arauca"          "Atlantico"      
 [5] "Bogota"          "Bolivar"         "Boyaca"          "Caldas"         
 [9] "Caqueta"         "Casanare"        "Cauca"           "Cesar"          
[13] "Choco"           "Cordoba"         "Cundinamarca"    "Guainia"        
[17] "Guajira"         "Huila"           "Magdalena"       "Meta"           
[21] "Nariño"          "Nte Santander"   "Putumayo"        "Quindio"        
[25] "Risaralda"       "Santa Marta"     "Santander"       "Sucre"          
[29] "Tolima"          "Valle del Cauca" "Vaupes"         
 [1] "Bogota"          "Valle del Cauca" "Antioquia"       "Bolivar"        
 [5] "resto"           "Nte Santander"   "Cundinamarca"    "Atlantico"      
 [9] "Santander"       "Cauca"           "Santa Marta"     "Cesar"          
[13] "Nariño"          "Cordoba"         "Sucre"           "Magdalena"      
[17] "Guajira"         "Choco"           "Amazonas"       
`summarise()` ungrouping output (override with `.groups` argument)
# A tibble: 2 x 2
  Measure `sum(Value)`
  <chr>          <dbl>
1 Cases         257101
2 Deaths          8777
`summarise()` regrouping output by 'Region' (override with `.groups` argument)
# A tibble: 38 x 3
# Groups:   Region [19]
   Region    Measure `sum(Value)`
   <chr>     <chr>          <dbl>
 1 Amazonas  Cases           2506
 2 Amazonas  Deaths           101
 3 Antioquia Cases          26117
 4 Antioquia Deaths           363
 5 Atlantico Cases          49037
 6 Atlantico Deaths          2413
 7 Bogota    Cases          86857
 8 Bogota    Deaths          2307
 9 Bolivar   Cases          16883
10 Bolivar   Deaths           551
# ... with 28 more rows
[1] "f" "m"
 [1] "Bogota"          "Valle del Cauca" "Antioquia"       "Bolivar"        
 [5] "resto"           "Nte Santander"   "Cundinamarca"    "Atlantico"      
 [9] "Santander"       "Cauca"           "Santa Marta"     "Cesar"          
[13] "Nariño"          "Cordoba"         "Sucre"           "Magdalena"      
[17] "Guajira"         "Choco"           "Amazonas"       
  [1] "2020-03-06" "2020-03-09" "2020-03-11" "2020-03-12" "2020-03-13"
  [6] "2020-03-14" "2020-03-15" "2020-03-16" "2020-03-17" "2020-03-18"
 [11] "2020-03-19" "2020-03-20" "2020-03-21" "2020-03-22" "2020-03-23"
 [16] "2020-03-24" "2020-03-27" "2020-03-25" "2020-03-26" "2020-03-28"
 [21] "2020-03-29" "2020-03-30" "2020-03-31" "2020-04-01" "2020-04-02"
 [26] "2020-04-03" "2020-04-04" "2020-04-05" "2020-04-06" "2020-04-07"
 [31] "2020-04-08" "2020-04-09" "2020-04-10" "2020-04-11" "2020-04-12"
 [36] "2020-04-13" "2020-04-14" "2020-04-19" "2020-04-15" "2020-04-28"
 [41] "2020-04-16" "2020-04-17" "2020-04-18" "2020-04-20" "2020-04-22"
 [46] "2020-04-21" "2020-04-23" "2020-05-01" "2020-04-24" "2020-05-05"
 [51] "2020-04-25" "2020-04-26" "2020-04-27" "2020-04-29" "2020-04-30"
 [56] "2020-05-02" "2020-05-04" "2020-05-03" NA           "2020-05-06"
 [61] "2020-05-07" "2020-05-08" "2020-05-09" "2020-05-10" "2020-05-11"
 [66] "2020-05-12" "2020-05-13" "2020-07-05" "2020-05-14" "2020-05-15"
 [71] "2020-05-16" "2020-05-17" "2020-05-18" "2020-05-19" "2020-05-20"
 [76] "2020-05-29" "2020-05-21" "2020-05-22" "2020-07-07" "2020-05-23"
 [81] "2020-06-01" "2020-05-24" "2020-05-25" "2020-05-26" "2020-05-27"
 [86] "2020-05-28" "2020-05-30" "2020-05-31" "2020-06-03" "2020-06-02"
 [91] "2020-06-05" "2020-06-04" "2020-06-06" "2020-06-07" "2020-06-26"
 [96] "2020-06-08" "2020-06-28" "2020-06-09" "2020-06-10" "2020-06-11"
[101] "2020-06-12" "2020-06-16" "2020-06-13" "2020-06-14" "2020-07-19"
[106] "2020-06-15" "2020-06-17" "2020-06-20" "2020-07-17" "2020-06-25"
[111] "2020-06-18" "2020-06-23" "2020-06-19" "2020-07-02" "2020-06-21"
[116] "2020-07-04" "2020-07-01" "2020-06-29" "2020-06-30" "2020-07-16"
[121] "2020-07-03" "2020-06-22" "2020-06-24" "2020-07-11" "2020-07-09"
[126] "2020-07-08" "2020-06-27" "2020-07-14" "2020-07-18" "2020-07-06"
[131] "2020-07-10" "2020-07-12" "2020-07-13" "2020-07-15" "2020-07-24"
[136] "2020-07-20" "2020-07-21" "2020-07-22" "2020-07-26" "2020-07-23"
[141] "2020-07-25" "2020-07-27"
  [1] "19"  "34"  "50"  "55"  "25"  "27"  "85"  "22"  "28"  "36"  "42"  "74" 
 [13] "68"  "48"  "30"  "61"  "73"  "54"  "26"  "23"  "18"  "49"  "65"  "59" 
 [25] "72"  "45"  "29"  "21"  "79"  "52"  "71"  "24"  "44"  "38"  "31"  "41" 
 [37] "67"  "62"  "58"  "37"  "20"  "32"  "64"  "40"  "46"  "39"  "9"   "53" 
 [49] "56"  "51"  "69"  "16"  "57"  "60"  "33"  "76"  "47"  "35"  "88"  "70" 
 [61] "81"  "17"  "63"  "80"  "84"  "87"  "83"  "43"  "77"  "15"  "66"  "3"  
 [73] "82"  "12"  "8"   "1"   "5"   "6"   "75"  "2"   "0"   "13"  "4"   "78" 
 [85] "10"  "94"  "7"   "95"  "11"  "93"  "92"  "90"  "97"  "91"  "86"  "14" 
 [97] "96"  "98"  "89"  "103" "100" "99"  "102" "101" "104" "106" "120" "107"
[109] "114" "119"
[1] "2020-03-06"
[1] "2020-03-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-30"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-31"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-01"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-02"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-03"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-04"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-05"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-06"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-07"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-08"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-09"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-10"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-11"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-12"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-13"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-14"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-15"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-16"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-17"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-18"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-19"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-30"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-01"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-02"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-03"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-04"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-05"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-06"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-07"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-08"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-09"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-10"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-11"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-12"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-13"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-14"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-15"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-16"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-17"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-18"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-19"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-30"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-31"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-01"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-02"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-03"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-04"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-05"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-06"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-07"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-08"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-09"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-10"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-11"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-12"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-13"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-14"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-15"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-16"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-17"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-18"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-19"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-30"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-01"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-02"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-03"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-04"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-05"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-06"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-07"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-08"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-09"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-10"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-11"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-12"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-13"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-14"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-15"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-16"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-17"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-18"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-19"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
`summarise()` ungrouping output (override with `.groups` argument)
Joining, by = "Region"
`summarise()` regrouping output by 'date_f', 'Age', 'Sex' (override with `.groups` argument)
# A tibble: 1 x 3
  Region  Cases Deaths
  <chr>   <dbl>  <dbl>
1 All    253321   8777
Adding missing grouping variables: `Region`
# A tibble: 36 x 3
# Groups:   Region [18]
   Region    Measure Value
   <chr>     <chr>   <dbl>
 1 Amazonas  Cases    2394
 2 Amazonas  Deaths    101
 3 Antioquia Cases   25871
 4 Antioquia Deaths    363
 5 Atlantico Cases   47247
 6 Atlantico Deaths   2413
 7 Bogota    Cases   86806
 8 Bogota    Deaths   2307
 9 Bolivar   Cases   16391
10 Bolivar   Deaths    551
# ... with 26 more rows
[1] "All"

    Antioquia         Cauca         Cesar         Choco       Cordoba 
        10250          1230          2050         14760         13120 
 Cundinamarca       Guajira     Magdalena        Nariño Nte Santander 
        14350          9020         18040         27060          3280 
  Santa Marta     Santander         Sucre 
        12710          4100         14350 
Writing to "Colombia input"
Writing to sheet "database"
Writing to "Colombia_Bogota input"
Writing to sheet "database"
Writing to "Colombia_Atlantico input"
Writing to sheet "database"
Writing to "Colombia_Bolivar input"
Writing to sheet "database"
Writing to "Colombia_Valle del Cauca input"
Writing to sheet "database"
Writing to "Colombia_Amazonas input"
Writing to sheet "database"
Writing to "Colombia_others input"
Writing to sheet "database"
Created Drive file:
  * CO28.07.2020cases&deaths: 1cH1dJUCqT1KG7ydQYF1KohAsm7SM4fznfZNq1zrjFyM
with MIME type:
  * application/vnd.google-apps.spreadsheet
Writing to "CO28.07.2020cases&deaths"
Writing to sheet "cases&deaths_age_sex"
Fehler: Client error: (400) INVALID_ARGUMENT
  * Client specified an invalid argument. Check error message and error details for more information.
  * Invalid requests[0].updateSheetProperties: This action would increase the number of cells in the workbook above the limit of 5000000 cells.
Backtrace:
    x
 1. \-googlesheets4::write_sheet(db, ss = meta$id, sheet = "cases&deaths_age_sex")
 2.   \-gargle::response_process(resp_raw)
 3.     \-gargle:::stop_request_failed(error_message(resp), resp)
Ausführung angehalten
-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.3.0     v purrr   0.3.4
v tibble  3.0.3     v dplyr   1.0.0
v tidyr   1.1.0     v stringr 1.4.0
v readr   1.3.1     v forcats 0.5.0
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()
Warnmeldungen:
1: Paket 'tidyverse' wurde unter R Version 3.6.3 erstellt 
2: Paket 'ggplot2' wurde unter R Version 3.6.3 erstellt 
3: Paket 'tibble' wurde unter R Version 3.6.3 erstellt 
4: Paket 'tidyr' wurde unter R Version 3.6.3 erstellt 
5: Paket 'readr' wurde unter R Version 3.6.3 erstellt 
6: Paket 'purrr' wurde unter R Version 3.6.3 erstellt 
7: Paket 'dplyr' wurde unter R Version 3.6.3 erstellt 
8: Paket 'stringr' wurde unter R Version 3.6.3 erstellt 
9: Paket 'forcats' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'lubridate'

The following objects are masked from 'package:base':

    date, intersect, setdiff, union

Warnmeldung:
Paket 'lubridate' wurde unter R Version 3.6.3 erstellt 
Warnmeldung:
Paket 'googlesheets4' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'googledrive'

The following objects are masked from 'package:googlesheets4':

    request_generate, request_make

Warnmeldung:
Paket 'googledrive' wurde unter R Version 3.6.3 erstellt 
Parsed with column specification:
cols(
  .default = col_character(),
  `ID de caso` = col_double(),
  `Fecha de notificación` = col_datetime(format = ""),
  Edad = col_double(),
  `Fecha de muerte` = col_datetime(format = ""),
  `Fecha diagnostico` = col_datetime(format = ""),
  `Fecha recuperado` = col_datetime(format = ""),
  `fecha reporte web` = col_datetime(format = ""),
  `Codigo departamento` = col_double(),
  `Codigo pais` = col_double()
)
See spec(...) for full column specifications.
Parsed with column specification:
cols(
  .default = col_double(),
  Fecha = col_character(),
  `Positividad acumulada` = col_number()
)
See spec(...) for full column specifications.
 [1] "Leve"         "Asintomático" "Fallecido"    "Moderado"     "Grave"       
 [6] "N/A"          "LEVE"         "GRAVE"        "MODERADO"     "moderado"    
 [1] "Bogotá D.C."                                            
 [2] "Valle del Cauca"                                        
 [3] "Antioquia"                                              
 [4] "Cartagena D.T. y C."                                    
 [5] "Huila"                                                  
 [6] "Meta"                                                   
 [7] "Risaralda"                                              
 [8] "Norte de Santander"                                     
 [9] "Caldas"                                                 
[10] "Cundinamarca"                                           
[11] "Barranquilla D.E."                                      
[12] "Santander"                                              
[13] "Quindío"                                                
[14] "Tolima"                                                 
[15] "Cauca"                                                  
[16] "Santa Marta D.T. y C."                                  
[17] "Cesar"                                                  
[18] "Archipiélago de San Andrés Providencia y Santa Catalina"
[19] "Casanare"                                               
[20] "Nariño"                                                 
[21] "Atlántico"                                              
[22] "Boyacá"                                                 
[23] "Córdoba"                                                
[24] "Bolívar"                                                
[25] "Sucre"                                                  
[26] "Magdalena"                                              
[27] "La Guajira"                                             
[28] "Buenaventura D.E."                                      
[29] "Chocó"                                                  
[30] "Amazonas"                                               
[31] "Caquetá"                                                
[32] "Putumayo"                                               
[33] "Arauca"                                                 
[34] "Vaupés"                                                 
[35] "Guainía"                                                
[36] "Vichada"                                                
[37] "Guaviare"                                               
Warnmeldung:
All formats failed to parse. No formats found. 
`summarise()` ungrouping output (override with `.groups` argument)
[1] "M" "F"
  [1] "2020-04-05" "2020-04-06" "2020-03-23" "2020-03-22" "2020-03-16"
  [6] "2020-03-26" "2020-03-25" "2020-04-04" "2020-04-15" "2020-04-09"
 [11] "2020-03-30" "2020-03-28" "2020-06-10" "2020-04-02" "2020-04-08"
 [16] "2020-03-27" "2020-04-12" "2020-04-03" "2020-04-24" "2020-04-21"
 [21] "2020-04-07" "2020-04-14" "2020-04-01" "2020-04-19" "2020-03-31"
 [26] "2020-04-10" "2020-04-18" "2020-04-11" "2020-03-29" "2020-04-28"
 [31] "2020-05-04" "2020-04-17" "2020-04-16" "2020-04-13" "2020-04-25"
 [36] "2020-03-24" "2020-05-01" "2020-05-31" "2020-04-29" "2020-05-11"
 [41] "2020-04-27" "2020-04-20" "2020-04-26" "2020-05-09" "2020-04-22"
 [46] "2020-05-07" "2020-04-23" "2020-05-02" "2020-04-30" "2020-05-06"
 [51] "2020-06-03" "2020-05-23" "2020-06-05" "2020-05-05" "2020-05-18"
 [56] "2020-05-03" "2020-05-08" "2020-05-17" "2020-05-29" "2020-05-22"
 [61] "2020-05-21" "2020-05-13" "2020-05-27" "2020-05-10" "2020-05-12"
 [66] "2020-07-19" "2020-06-02" "2020-06-29" "2020-05-28" "2020-06-01"
 [71] "2020-05-15" "2020-05-20" "2020-06-16" "2020-06-06" "2020-06-12"
 [76] "2020-06-13" "2020-05-26" "2020-05-14" "2020-05-19" "2020-05-30"
 [81] "2020-05-24" "2020-05-16" "2020-06-09" "2020-06-07" "2020-05-25"
 [86] "2020-06-19" "2020-06-14" "2020-07-12" "2020-06-25" "2020-06-17"
 [91] "2020-06-15" "2020-06-08" "2020-06-24" "2020-07-20" "2020-06-04"
 [96] "2020-06-23" "2020-07-06" "2020-07-08" "2020-06-30" "2020-07-15"
[101] "2020-06-18" "2020-07-02" "2020-06-21" "2020-06-11" "2020-06-22"
[106] "2020-06-20" "2020-07-24" "2020-07-01" "2020-07-17" "2020-07-03"
[111] "2020-06-27" "2020-07-11" "2020-07-04" "2020-06-26" "2020-07-09"
[116] "2020-07-22" "2020-07-07" "2020-07-16" "2020-06-28" "2020-07-18"
[121] "2020-07-05" "2020-07-23" "2020-07-21" "2020-07-10" "2020-07-13"
[126] "2020-07-14" "2020-07-25" "2020-07-28" "2020-07-26" "2020-07-27"
 [1] "Amazonas"        "Antioquia"       "Arauca"          "Atlantico"      
 [5] "Bogota"          "Bolivar"         "Boyaca"          "Caldas"         
 [9] "Caqueta"         "Casanare"        "Cauca"           "Cesar"          
[13] "Choco"           "Cordoba"         "Cundinamarca"    "Guainia"        
[17] "Guajira"         "Huila"           "Magdalena"       "Meta"           
[21] "Nariño"          "Nte Santander"   "Putumayo"        "Quindio"        
[25] "Risaralda"       "Santa Marta"     "Santander"       "Sucre"          
[29] "Tolima"          "Valle del Cauca" "Vaupes"         
 [1] "Bogota"          "Valle del Cauca" "Antioquia"       "Bolivar"        
 [5] "resto"           "Nte Santander"   "Cundinamarca"    "Atlantico"      
 [9] "Santander"       "Cauca"           "Santa Marta"     "Cesar"          
[13] "Nariño"          "Cordoba"         "Sucre"           "Magdalena"      
[17] "Guajira"         "Choco"           "Amazonas"       
`summarise()` ungrouping output (override with `.groups` argument)
# A tibble: 2 x 2
  Measure `sum(Value)`
  <chr>          <dbl>
1 Cases         267385
2 Deaths          9074
`summarise()` regrouping output by 'Region' (override with `.groups` argument)
# A tibble: 38 x 3
# Groups:   Region [19]
   Region    Measure `sum(Value)`
   <chr>     <chr>          <dbl>
 1 Amazonas  Cases           2507
 2 Amazonas  Deaths           102
 3 Antioquia Cases          27226
 4 Antioquia Deaths           394
 5 Atlantico Cases          50212
 6 Atlantico Deaths          2436
 7 Bogota    Cases          91408
 8 Bogota    Deaths          2392
 9 Bolivar   Cases          17363
10 Bolivar   Deaths           555
# ... with 28 more rows
[1] "f" "m"
 [1] "Bogota"          "Valle del Cauca" "Antioquia"       "Bolivar"        
 [5] "resto"           "Nte Santander"   "Cundinamarca"    "Atlantico"      
 [9] "Santander"       "Cauca"           "Santa Marta"     "Cesar"          
[13] "Nariño"          "Cordoba"         "Sucre"           "Magdalena"      
[17] "Guajira"         "Choco"           "Amazonas"       
  [1] NA           "2020-04-05" "2020-04-06" "2020-03-23" "2020-03-22"
  [6] "2020-03-16" "2020-03-26" "2020-03-25" "2020-04-04" "2020-04-15"
 [11] "2020-04-09" "2020-03-30" "2020-03-28" "2020-06-10" "2020-04-02"
 [16] "2020-04-08" "2020-03-27" "2020-04-12" "2020-04-03" "2020-04-24"
 [21] "2020-04-21" "2020-04-07" "2020-04-14" "2020-04-01" "2020-04-19"
 [26] "2020-03-31" "2020-04-10" "2020-04-18" "2020-04-11" "2020-03-29"
 [31] "2020-04-28" "2020-05-04" "2020-04-17" "2020-04-16" "2020-04-13"
 [36] "2020-04-25" "2020-03-24" "2020-05-01" "2020-05-31" "2020-04-29"
 [41] "2020-05-11" "2020-04-27" "2020-04-20" "2020-04-26" "2020-05-09"
 [46] "2020-04-22" "2020-05-07" "2020-04-23" "2020-05-02" "2020-04-30"
 [51] "2020-05-06" "2020-06-03" "2020-05-23" "2020-06-05" "2020-05-05"
 [56] "2020-05-18" "2020-05-03" "2020-05-08" "2020-05-17" "2020-05-29"
 [61] "2020-05-22" "2020-05-21" "2020-05-13" "2020-05-27" "2020-05-10"
 [66] "2020-05-12" "2020-07-19" "2020-06-02" "2020-06-29" "2020-05-28"
 [71] "2020-06-01" "2020-05-15" "2020-05-20" "2020-06-16" "2020-06-06"
 [76] "2020-06-12" "2020-06-13" "2020-05-26" "2020-05-14" "2020-05-19"
 [81] "2020-05-30" "2020-05-24" "2020-05-16" "2020-06-09" "2020-06-07"
 [86] "2020-05-25" "2020-06-19" "2020-06-14" "2020-07-12" "2020-06-25"
 [91] "2020-06-17" "2020-06-15" "2020-06-08" "2020-06-24" "2020-07-20"
 [96] "2020-06-04" "2020-06-23" "2020-07-06" "2020-07-08" "2020-06-30"
[101] "2020-07-15" "2020-06-18" "2020-07-02" "2020-06-21" "2020-06-11"
[106] "2020-06-22" "2020-06-20" "2020-07-24" "2020-07-01" "2020-07-17"
[111] "2020-07-03" "2020-06-27" "2020-07-11" "2020-07-04" "2020-06-26"
[116] "2020-07-09" "2020-07-22" "2020-07-07" "2020-07-16" "2020-06-28"
[121] "2020-07-18" "2020-07-05" "2020-07-23" "2020-07-21" "2020-07-10"
[126] "2020-07-13" "2020-07-14" "2020-07-25" "2020-07-28" "2020-07-26"
[131] "2020-07-27"
  [1] "19"  "34"  "50"  "55"  "25"  "27"  "85"  "22"  "28"  "36"  "42"  "74" 
 [13] "68"  "48"  "30"  "61"  "73"  "54"  "26"  "23"  "18"  "49"  "65"  "59" 
 [25] "72"  "45"  "29"  "21"  "79"  "52"  "71"  "24"  "44"  "38"  "31"  "41" 
 [37] "67"  "62"  "58"  "37"  "20"  "32"  "64"  "40"  "46"  "39"  "9"   "53" 
 [49] "56"  "51"  "69"  "16"  "57"  "60"  "33"  "76"  "47"  "35"  "88"  "70" 
 [61] "81"  "17"  "63"  "80"  "84"  "87"  "83"  "43"  "77"  "15"  "66"  "3"  
 [73] "82"  "12"  "8"   "1"   "5"   "6"   "75"  "2"   "0"   "13"  "4"   "78" 
 [85] "10"  "94"  "7"   "95"  "11"  "93"  "92"  "90"  "97"  "91"  "86"  "14" 
 [97] "96"  "98"  "89"  "103" "100" "99"  "102" "101" "104" "106" "120" "107"
[109] "114" "119"
[1] "2020-03-16"
[1] "2020-03-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-30"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-31"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-01"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-02"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-03"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-04"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-05"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-06"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-07"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-08"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-09"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-10"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-11"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-12"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-13"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-14"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-15"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-16"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-17"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-18"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-19"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-30"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-01"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-02"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-03"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-04"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-05"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-06"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-07"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-08"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-09"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-10"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-11"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-12"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-13"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-14"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-15"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-16"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-17"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-18"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-19"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-30"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-31"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-01"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-02"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-03"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-04"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-05"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-06"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-07"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-08"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-09"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-10"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-11"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-12"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-13"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-14"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-15"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-16"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-17"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-18"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-19"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-30"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-01"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-02"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-03"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-04"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-05"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-06"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-07"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-08"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-09"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-10"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-11"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-12"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-13"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-14"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-15"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-16"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-17"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-18"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-19"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
`summarise()` ungrouping output (override with `.groups` argument)
Joining, by = "Region"
`summarise()` regrouping output by 'date_f', 'Age', 'Sex' (override with `.groups` argument)
# A tibble: 1 x 3
  Region Cases Deaths
  <chr>  <dbl>  <dbl>
1 All        0   9074
Adding missing grouping variables: `Region`
# A tibble: 36 x 3
# Groups:   Region [18]
   Region    Measure Value
   <chr>     <chr>   <dbl>
 1 Amazonas  Cases       0
 2 Amazonas  Deaths    102
 3 Antioquia Cases       0
 4 Antioquia Deaths    394
 5 Atlantico Cases       0
 6 Atlantico Deaths   2436
 7 Bogota    Cases       0
 8 Bogota    Deaths   2392
 9 Bolivar   Cases       0
10 Bolivar   Deaths    555
# ... with 26 more rows
[1] "All"

    Antioquia         Cauca         Cesar         Choco       Cordoba 
        10660          1640          2460         15170         13530 
 Cundinamarca       Guajira     Magdalena        Nariño Nte Santander 
        14760          9430         18450         27470          3690 
  Santa Marta     Santander         Sucre 
        13120          4510         14760 
Fehler: Client error: (429) RESOURCE_EXHAUSTED
  * Either out of resource quota or reaching rate limiting. The client should look for google.rpc.QuotaFailure error detail for more information.
  * Quota exceeded for quota group 'ReadGroup' and limit 'Read requests per 100 seconds' of service 'sheets.googleapis.com' for consumer 'project_number:603366585132'.

Error details:
  * Error details of type 'google.rpc.Help' are not implemented yet.
  * Workaround: use `tryCatch()` and inspect error payload yourself.
  * Please open an issue at https://github.com/r-lib/gargle/issues, so we can fix.
Backtrace:
    x
 1. \-googlesheets4::write_sheet(...)
 2.   \-googlesheets4::gs4_get(ssid)
 3.     \-googlesheets4:::gs4_get_impl_(as_sheets_id(ss))
 4.       \-gargle::response_process(raw_resp)
 5.         \-gargle:::stop_request_failed(error_message(resp), resp)
Ausführung angehalten
-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.3.0     v purrr   0.3.4
v tibble  3.0.3     v dplyr   1.0.0
v tidyr   1.1.0     v stringr 1.4.0
v readr   1.3.1     v forcats 0.5.0
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()
Warnmeldungen:
1: Paket 'tidyverse' wurde unter R Version 3.6.3 erstellt 
2: Paket 'ggplot2' wurde unter R Version 3.6.3 erstellt 
3: Paket 'tibble' wurde unter R Version 3.6.3 erstellt 
4: Paket 'tidyr' wurde unter R Version 3.6.3 erstellt 
5: Paket 'readr' wurde unter R Version 3.6.3 erstellt 
6: Paket 'purrr' wurde unter R Version 3.6.3 erstellt 
7: Paket 'dplyr' wurde unter R Version 3.6.3 erstellt 
8: Paket 'stringr' wurde unter R Version 3.6.3 erstellt 
9: Paket 'forcats' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'lubridate'

The following objects are masked from 'package:base':

    date, intersect, setdiff, union

Warnmeldung:
Paket 'lubridate' wurde unter R Version 3.6.3 erstellt 
Warnmeldung:
Paket 'googlesheets4' wurde unter R Version 3.6.3 erstellt 

Attache Paket: 'googledrive'

The following objects are masked from 'package:googlesheets4':

    request_generate, request_make

Warnmeldung:
Paket 'googledrive' wurde unter R Version 3.6.3 erstellt 
Parsed with column specification:
cols(
  .default = col_character(),
  `ID de caso` = col_double(),
  `Fecha de notificación` = col_datetime(format = ""),
  Edad = col_double(),
  `Fecha de muerte` = col_datetime(format = ""),
  `Fecha diagnostico` = col_datetime(format = ""),
  `Fecha recuperado` = col_datetime(format = ""),
  `fecha reporte web` = col_datetime(format = ""),
  `Codigo departamento` = col_double(),
  `Codigo pais` = col_double()
)
See spec(...) for full column specifications.
Parsed with column specification:
cols(
  .default = col_double(),
  Fecha = col_character(),
  `Positividad acumulada` = col_number()
)
See spec(...) for full column specifications.
[1] "Leve"         "Asintomático" "Fallecido"    "Moderado"     "Grave"       
[6] "N/A"          "LEVE"         "GRAVE"       
 [1] "Bogotá D.C."                                            
 [2] "Valle del Cauca"                                        
 [3] "Antioquia"                                              
 [4] "Cartagena D.T. y C."                                    
 [5] "Huila"                                                  
 [6] "Meta"                                                   
 [7] "Risaralda"                                              
 [8] "Norte de Santander"                                     
 [9] "Caldas"                                                 
[10] "Cundinamarca"                                           
[11] "Barranquilla D.E."                                      
[12] "Santander"                                              
[13] "Quindío"                                                
[14] "Tolima"                                                 
[15] "Cauca"                                                  
[16] "Santa Marta D.T. y C."                                  
[17] "Cesar"                                                  
[18] "Archipiélago de San Andrés Providencia y Santa Catalina"
[19] "Casanare"                                               
[20] "Nariño"                                                 
[21] "Atlántico"                                              
[22] "Boyacá"                                                 
[23] "Córdoba"                                                
[24] "Bolívar"                                                
[25] "Sucre"                                                  
[26] "Magdalena"                                              
[27] "La Guajira"                                             
[28] "Buenaventura D.E."                                      
[29] "Chocó"                                                  
[30] "Amazonas"                                               
[31] "Caquetá"                                                
[32] "Putumayo"                                               
[33] "Arauca"                                                 
[34] "Vaupés"                                                 
[35] "Guainía"                                                
[36] "Vichada"                                                
[37] "Guaviare"                                               
Warnmeldung:
All formats failed to parse. No formats found. 
`summarise()` ungrouping output (override with `.groups` argument)
[1] "M" "F"
  [1] "2020-04-05" "2020-04-06" "2020-03-23" "2020-03-22" "2020-03-16"
  [6] "2020-03-26" "2020-03-25" "2020-04-04" "2020-04-15" "2020-04-09"
 [11] "2020-03-30" "2020-03-28" "2020-06-10" "2020-04-02" "2020-04-08"
 [16] "2020-03-27" "2020-04-12" "2020-04-03" "2020-04-24" "2020-04-21"
 [21] "2020-04-07" "2020-04-14" "2020-04-01" "2020-04-19" "2020-03-31"
 [26] "2020-04-10" "2020-04-18" "2020-04-11" "2020-03-29" "2020-04-28"
 [31] "2020-05-04" "2020-04-17" "2020-04-16" "2020-04-13" "2020-04-25"
 [36] "2020-03-24" "2020-05-01" "2020-05-31" "2020-04-29" "2020-05-11"
 [41] "2020-04-27" "2020-04-20" "2020-04-26" "2020-05-09" "2020-04-22"
 [46] "2020-05-07" "2020-04-23" "2020-05-02" "2020-04-30" "2020-05-06"
 [51] "2020-06-03" "2020-05-23" "2020-06-05" "2020-05-05" "2020-05-18"
 [56] "2020-05-03" "2020-05-08" "2020-05-17" "2020-05-29" "2020-05-22"
 [61] "2020-05-21" "2020-05-13" "2020-05-27" "2020-05-10" "2020-05-12"
 [66] "2020-07-19" "2020-06-02" "2020-06-29" "2020-05-28" "2020-06-01"
 [71] "2020-05-15" "2020-05-20" "2020-06-16" "2020-06-06" "2020-06-12"
 [76] "2020-06-13" "2020-05-26" "2020-05-14" "2020-05-19" "2020-05-30"
 [81] "2020-05-24" "2020-05-16" "2020-06-09" "2020-06-07" "2020-05-25"
 [86] "2020-06-19" "2020-06-14" "2020-07-12" "2020-06-25" "2020-06-17"
 [91] "2020-06-15" "2020-06-08" "2020-06-24" "2020-07-20" "2020-06-04"
 [96] "2020-06-23" "2020-07-06" "2020-07-08" "2020-06-30" "2020-07-15"
[101] "2020-07-28" "2020-06-18" "2020-07-02" "2020-06-21" "2020-06-11"
[106] "2020-06-22" "2020-06-20" "2020-07-24" "2020-07-01" "2020-07-17"
[111] "2020-07-03" "2020-06-27" "2020-07-11" "2020-07-04" "2020-06-26"
[116] "2020-07-09" "2020-07-22" "2020-07-07" "2020-07-16" "2020-06-28"
[121] "2020-07-18" "2020-07-05" "2020-07-23" "2020-07-21" "2020-07-10"
[126] "2020-07-13" "2020-07-14" "2020-07-25" "2020-07-26" "2020-07-27"
[131] "2020-07-29"
 [1] "Amazonas"        "Antioquia"       "Arauca"          "Atlantico"      
 [5] "Bogota"          "Bolivar"         "Boyaca"          "Caldas"         
 [9] "Caqueta"         "Casanare"        "Cauca"           "Cesar"          
[13] "Choco"           "Cordoba"         "Cundinamarca"    "Guainia"        
[17] "Guajira"         "Huila"           "Magdalena"       "Meta"           
[21] "Nariño"          "Nte Santander"   "Putumayo"        "Quindio"        
[25] "Risaralda"       "Santa Marta"     "Santander"       "Sucre"          
[29] "Tolima"          "Valle del Cauca" "Vaupes"         
 [1] "Bogota"          "Valle del Cauca" "Antioquia"       "Bolivar"        
 [5] "resto"           "Nte Santander"   "Cundinamarca"    "Atlantico"      
 [9] "Santander"       "Cauca"           "Santa Marta"     "Cesar"          
[13] "Nariño"          "Cordoba"         "Sucre"           "Magdalena"      
[17] "Guajira"         "Choco"           "Amazonas"       
`summarise()` ungrouping output (override with `.groups` argument)
# A tibble: 2 x 2
  Measure `sum(Value)`
  <chr>          <dbl>
1 Cases         276055
2 Deaths          9454
`summarise()` regrouping output by 'Region' (override with `.groups` argument)
# A tibble: 38 x 3
# Groups:   Region [19]
   Region    Measure `sum(Value)`
   <chr>     <chr>          <dbl>
 1 Amazonas  Cases           2508
 2 Amazonas  Deaths           102
 3 Antioquia Cases          28845
 4 Antioquia Deaths           429
 5 Atlantico Cases          50732
 6 Atlantico Deaths          2475
 7 Bogota    Cases          95199
 8 Bogota    Deaths          2517
 9 Bolivar   Cases          17621
10 Bolivar   Deaths           571
# ... with 28 more rows
[1] "f" "m"
 [1] "Bogota"          "Valle del Cauca" "Antioquia"       "Bolivar"        
 [5] "resto"           "Nte Santander"   "Cundinamarca"    "Atlantico"      
 [9] "Santander"       "Cauca"           "Santa Marta"     "Cesar"          
[13] "Nariño"          "Cordoba"         "Sucre"           "Magdalena"      
[17] "Guajira"         "Choco"           "Amazonas"       
  [1] NA           "2020-04-05" "2020-04-06" "2020-03-23" "2020-03-22"
  [6] "2020-03-16" "2020-03-26" "2020-03-25" "2020-04-04" "2020-04-15"
 [11] "2020-04-09" "2020-03-30" "2020-03-28" "2020-06-10" "2020-04-02"
 [16] "2020-04-08" "2020-03-27" "2020-04-12" "2020-04-03" "2020-04-24"
 [21] "2020-04-21" "2020-04-07" "2020-04-14" "2020-04-01" "2020-04-19"
 [26] "2020-03-31" "2020-04-10" "2020-04-18" "2020-04-11" "2020-03-29"
 [31] "2020-04-28" "2020-05-04" "2020-04-17" "2020-04-16" "2020-04-13"
 [36] "2020-04-25" "2020-03-24" "2020-05-01" "2020-05-31" "2020-04-29"
 [41] "2020-05-11" "2020-04-27" "2020-04-20" "2020-04-26" "2020-05-09"
 [46] "2020-04-22" "2020-05-07" "2020-04-23" "2020-05-02" "2020-04-30"
 [51] "2020-05-06" "2020-06-03" "2020-05-23" "2020-06-05" "2020-05-05"
 [56] "2020-05-18" "2020-05-03" "2020-05-08" "2020-05-17" "2020-05-29"
 [61] "2020-05-22" "2020-05-21" "2020-05-13" "2020-05-27" "2020-05-10"
 [66] "2020-05-12" "2020-07-19" "2020-06-02" "2020-06-29" "2020-05-28"
 [71] "2020-06-01" "2020-05-15" "2020-05-20" "2020-06-16" "2020-06-06"
 [76] "2020-06-12" "2020-06-13" "2020-05-26" "2020-05-14" "2020-05-19"
 [81] "2020-05-30" "2020-05-24" "2020-05-16" "2020-06-09" "2020-06-07"
 [86] "2020-05-25" "2020-06-19" "2020-06-14" "2020-07-12" "2020-06-25"
 [91] "2020-06-17" "2020-06-15" "2020-06-08" "2020-06-24" "2020-07-20"
 [96] "2020-06-04" "2020-06-23" "2020-07-06" "2020-07-08" "2020-06-30"
[101] "2020-07-15" "2020-07-28" "2020-06-18" "2020-07-02" "2020-06-21"
[106] "2020-06-11" "2020-06-22" "2020-06-20" "2020-07-24" "2020-07-01"
[111] "2020-07-17" "2020-07-03" "2020-06-27" "2020-07-11" "2020-07-04"
[116] "2020-06-26" "2020-07-09" "2020-07-22" "2020-07-07" "2020-07-16"
[121] "2020-06-28" "2020-07-18" "2020-07-05" "2020-07-23" "2020-07-21"
[126] "2020-07-10" "2020-07-13" "2020-07-14" "2020-07-25" "2020-07-26"
[131] "2020-07-27" "2020-07-29"
  [1] "19"  "34"  "50"  "55"  "25"  "27"  "85"  "22"  "28"  "36"  "42"  "74" 
 [13] "68"  "48"  "30"  "61"  "73"  "54"  "26"  "23"  "18"  "49"  "65"  "59" 
 [25] "72"  "45"  "29"  "21"  "79"  "52"  "71"  "24"  "44"  "38"  "31"  "41" 
 [37] "67"  "62"  "58"  "37"  "20"  "32"  "64"  "40"  "46"  "39"  "9"   "53" 
 [49] "56"  "51"  "69"  "16"  "57"  "60"  "33"  "76"  "47"  "35"  "88"  "70" 
 [61] "81"  "17"  "63"  "80"  "84"  "87"  "83"  "43"  "77"  "15"  "66"  "3"  
 [73] "82"  "12"  "8"   "1"   "5"   "6"   "75"  "2"   "0"   "13"  "4"   "78" 
 [85] "10"  "94"  "7"   "95"  "11"  "93"  "92"  "90"  "97"  "91"  "86"  "14" 
 [97] "96"  "98"  "89"  "103" "100" "99"  "102" "101" "104" "106" "120" "107"
[109] "114" "119"
[1] "2020-03-16"
[1] "2020-03-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-30"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-03-31"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-01"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-02"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-03"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-04"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-05"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-06"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-07"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-08"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-09"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-10"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-11"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-12"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-13"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-14"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-15"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-16"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-17"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-18"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-19"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-04-30"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-01"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-02"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-03"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-04"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-05"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-06"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-07"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-08"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-09"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-10"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-11"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-12"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-13"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-14"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-15"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-16"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-17"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-18"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-19"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-30"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-05-31"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-01"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-02"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-03"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-04"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-05"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-06"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-07"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-08"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-09"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-10"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-11"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-12"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-13"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-14"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-15"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-16"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-17"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-18"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-19"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-06-30"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-01"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-02"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-03"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-04"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-05"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-06"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-07"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-08"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-09"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-10"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-11"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-12"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-13"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-14"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-15"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-16"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-17"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-18"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-19"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-20"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-21"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-22"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-23"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-24"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-25"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-26"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-27"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-28"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
[1] "2020-07-29"
`summarise()` regrouping output by 'Age', 'Sex', 'Region' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure', 'Sex' (override with `.groups` argument)
`summarise()` regrouping output by 'Measure' (override with `.groups` argument)
Joining, by = c("Region", "Sex", "Measure", "Age")
`summarise()` ungrouping output (override with `.groups` argument)
Joining, by = "Region"
`summarise()` regrouping output by 'date_f', 'Age', 'Sex' (override with `.groups` argument)
# A tibble: 1 x 3
  Region Cases Deaths
  <chr>  <dbl>  <dbl>
1 All        0   9454
Adding missing grouping variables: `Region`
# A tibble: 36 x 3
# Groups:   Region [18]
   Region    Measure Value
   <chr>     <chr>   <dbl>
 1 Amazonas  Cases       0
 2 Amazonas  Deaths    102
 3 Antioquia Cases       0
 4 Antioquia Deaths    429
 5 Atlantico Cases       0
 6 Atlantico Deaths   2475
 7 Bogota    Cases       0
 8 Bogota    Deaths   2517
 9 Bolivar   Cases       0
10 Bolivar   Deaths    571
# ... with 26 more rows
[1] "All"

    Antioquia         Cauca         Cesar         Choco       Cordoba 
        11480          2050          3280         15990         13940 
 Cundinamarca       Guajira     Magdalena        Nariño Nte Santander 
        15170          9840         18860         27880          4100 
  Santa Marta     Santander         Sucre 
        13530          4920         15170 
Fehler: Client error: (429) RESOURCE_EXHAUSTED
  * Either out of resource quota or reaching rate limiting. The client should look for google.rpc.QuotaFailure error detail for more information.
  * Quota exceeded for quota group 'ReadGroup' and limit 'Read requests per 100 seconds' of service 'sheets.googleapis.com' for consumer 'project_number:603366585132'.

Error details:
  * Error details of type 'google.rpc.Help' are not implemented yet.
  * Workaround: use `tryCatch()` and inspect error payload yourself.
  * Please open an issue at https://github.com/r-lib/gargle/issues, so we can fix.
Backtrace:
    x
 1. \-googlesheets4::write_sheet(...)
 2.   \-googlesheets4::gs4_get(ssid)
 3.     \-googlesheets4:::gs4_get_impl_(as_sheets_id(ss))
 4.       \-gargle::response_process(raw_resp)
 5.         \-gargle:::stop_request_failed(error_message(resp), resp)
Ausführung angehalten
